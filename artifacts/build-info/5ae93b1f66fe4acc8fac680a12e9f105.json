{
	"id": "5ae93b1f66fe4acc8fac680a12e9f105",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"uniswap.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport {AccessControlUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\n\n\ninterface IWETH {\n    function deposit() external payable;\n\n    function withdraw() external;\n\n    function mint(address to, uint256 amount) external;\n\n    function burn(address from, uint256 amount) external;\n\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n\n// [\"0xC588fFb141b4cFc405BD87BB4793C49eAA4E9Bf5\",\"0xB37B2D41E46cDc47b4d33EebBf027c9405453f64\"]\n// 1000000000000000,1000000000000000000\n\n// AERo: 0xCf19DeBf8359fd17bd36AdBd71869CA9E8E4FacC\n// AIOZ: 0x565BD1C5C443BC2F1C2aE6Fe06Ed0ee1ef08141D\n//  AKT: 0x9DD41ECd6e1701CE34523ed98423c1eFb0805aBD\n\n// AAVE: 0x9Dfc8C3143E01cA01A90c3E313bA31bFfD9C1BA9\n// ALVA: 0x51A0dfea63768e7827e9AAA532314910648F3eD2\n\n// [\"0x51A0dfea63768e7827e9AAA532314910648F3eD2\",\"0x9Dfc8C3143E01cA01A90c3E313bA31bFfD9C1BA9\"]\n// [\"0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\",\"0x5B38Da6a701c568545dCfcB03FcB875f56beddC4\"]\n// [\"1000000000000\",\"1000000000000\"]\n\n// [\"0x78194Fd31F03cDfC782BBC8Ada4471c56702F306\",\"0x9c30D4B8790467515A9dAE8C2369f2Bd6e4b8f39\",\"0x7b5c8eB52d19C965e88D0580Ea7F5a5a95516Dde\",\"0x9053Ce7DD774d13c44330cBB9935b4277CE0aDc0\"]\n// [\"0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915\",\"0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915\",\"0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915\",\"0xcCc22A7fc54d184138dfD87B7aD24552cD4E0915\"]\n// [\"1000000000000\",\"1000000000000\",\"1000000000000\",\"1000000000000\"]\n\n\n// [\"0x9279F54dAc3570d115AdB6083f85D05a4e6F41Ad\",\"0x565BD1C5C443BC2F1C2aE6Fe06Ed0ee1ef08141D\"]\n\n// spolia \n\ncontract UniswapV2Router02 is AccessControlUpgradeable {\n    \n    struct TokenDetail {\n        uint256 price;\n        address tokenManager;\n    }\n\n    address public immutable WETH;\n\n    mapping(address => TokenDetail) public tokenDetails;\n\n    bytes32 public constant PRICE_MANAGER = keccak256(\"PRICE_MANAGER\");\n\n    constructor(address _WETH) {\n        WETH = _WETH;\n        _grantRole(DEFAULT_ADMIN_ROLE, _msgSender());\n        _grantRole(PRICE_MANAGER, _msgSender());\n        tokenDetails[_WETH] = TokenDetail(1e18, _msgSender());\n    }\n\n    function setTokenDetails(\n        address tokenAddress,\n        address tokenManager,\n        uint256 price\n    ) public onlyRole(PRICE_MANAGER) {\n        tokenDetails[tokenAddress] = TokenDetail(price, tokenManager);\n    }\n\n    function setTokensDetails(\n        address[] memory tokenAddresses,\n        address[] memory tokenManagers,\n        uint256[] memory prices\n    ) public onlyRole(PRICE_MANAGER) {\n        require(\n            tokenAddresses.length <= 30,\n            \"UniswapV2Router: Tokens array is too long, reduce the number of tokens\"\n        );\n\n        for (uint256 i; i < tokenAddresses.length; i++) {\n            tokenDetails[tokenAddresses[i]] = TokenDetail(\n                prices[i],\n                tokenManagers[i]\n            );\n        }\n    }\n\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) public payable {\n        \n        require(path[0] == WETH, \"UniswapV2Router: INVALID_PATH\");\n        require(deadline >= block.timestamp, \"UniswapV2Router: EXPIRED\");\n\n        uint amountIn = msg.value;\n\n        uint amountOut = getAmountsOut(amountIn, path)[1];\n        require(\n            amountOut > 0 && amountOut >= amountOutMin,\n            \"UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT\"\n        );\n\n        address manager = tokenDetails[path[1]].tokenManager;\n        uint256 allowance = IWETH(path[1]).allowance(manager, address(this));\n        require(\n            allowance >= amountOut,\n            \"UniswapV2Router: INSUFFICIENT_AMOUNT_ALLOWED\"\n        );\n\n        IWETH(WETH).deposit{value: amountIn}();\n        IWETH(WETH).transfer(path[1], amountIn);\n        IWETH(path[1]).transferFrom(manager, to, amountOut);\n    }\n\n    \n\n    function getAmountsOut(uint amountIn, address[] memory path)\n        public\n        view\n        returns (uint[] memory amounts)\n    {\n        require(\n            amountIn > 0,\n            \"UniswapV2Router: amountIn should be greater than zero\"\n        );\n        require(\n            path.length >= 2,\n            \"UniswapV2Router: path contains at least 2 elements\"\n        );\n\n        amounts = new uint[](path.length);\n        amounts[0] = amountIn;\n\n        for (uint i; i < path.length - 1; i++) {\n            if (tokenDetails[path[i + 1]].price != 0) {\n                if (path[0] == WETH) {\n                    amounts[i + 1] =\n                        (amountIn * 1e18) /\n                        tokenDetails[path[i + 1]].price;\n                } else {\n                    uint amountInEth = (amountIn *\n                        1e18 *\n                        tokenDetails[path[0]].price) / 1e18;\n                    amounts[i + 1] =\n                        amountInEth /\n                        tokenDetails[path[i + 1]].price;\n                }\n            } else {\n                amounts[i + 1] = 0;\n            }\n        }\n\n        return amounts;\n    }\n\n    function getWETHAddress() public view returns (address) {\n        return WETH;\n    }\n\n    function getTokenPrice(address tokenAddress) public view returns (uint256) {\n        return tokenDetails[tokenAddress].price;\n    }\n\n    function getTokenDetails(address tokenAddress)\n        public\n        view\n        returns (TokenDetail memory)\n    {\n        return tokenDetails[tokenAddress];\n    }\n\n    // function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n    //     uint256 amountIn,\n    //     uint256 amountOutMin,\n    //     address[] calldata path,\n    //     address to,\n    //     uint256 deadline\n    // ) public {\n    //     require(deadline >= block.timestamp, \"UniswapV2Router: EXPIRED\");\n\n    //     uint amountOut = getAmountsOut(amountIn, path)[1];\n    //     require(\n    //         amountOut > 0 && amountOut >= amountOutMin,\n    //         \"UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT\"\n    //     );\n\n    //     address managerOut = tokenDetails[path[1]].tokenManager;\n\n    //     uint256 allowanceTokenIn = IWETH(path[0]).allowance(\n    //         _msgSender(),\n    //         address(this)\n    //     );\n\n    //     require(\n    //         allowanceTokenIn >= amountIn,\n    //         \"UniswapV2Router: INSUFFICIENT_AMOUNT_ALLOWED_TOKEN_IN\"\n    //     );\n\n    //     uint256 allowanceTokenOut = IWETH(path[1]).allowance(\n    //         managerOut,\n    //         address(this)\n    //     );\n\n    //     require(\n    //         allowanceTokenOut >= amountOut,\n    //         \"UniswapV2Router: INSUFFICIENT_AMOUNT_ALLOWED_TOKEN_OUT\"\n    //     );\n\n    //     IWETH(path[0]).transferFrom(_msgSender(), address(this), amountIn);\n    //     IWETH(path[0]).transfer(managerOut, amountIn);\n\n    //     IWETH(path[1]).transferFrom(managerOut, to, amountOut);\n    // }\n}"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlUpgradeable.sol\";\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../utils/StringsUpgradeable.sol\";\nimport \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControlUpgradeable, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        StringsUpgradeable.toHexString(account),\n                        \" is missing role \",\n                        StringsUpgradeable.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165Upgradeable.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165Upgradeable {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165Upgradeable).interfaceId;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/MathUpgradeable.sol\";\nimport \"./math/SignedMathUpgradeable.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary StringsUpgradeable {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = MathUpgradeable.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMathUpgradeable.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, MathUpgradeable.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControlUpgradeable {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMathUpgradeable {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary MathUpgradeable {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 958,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1232,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:AccessControlUpgradeable",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"IAccessControlUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":\"IAccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122024301ff0a7b71760f1f93596611f06b9a26e2952265da77720c3a0e6f1e903b364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122024301ff0a7b71760f1f93596611f06b9a26e2952265da77720c3a0e6f1e903b364736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 ADDRESS 0x1F CREATE 0xA7 0xB7 OR PUSH1 0xF1 0xF9 CALLDATALOAD SWAP7 PUSH2 0x1F06 0xB9 LOG2 PUSH15 0x2952265DA77720C3A0E6F1E903B364 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "194:9180:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122024301ff0a7b71760f1f93596611f06b9a26e2952265da77720c3a0e6f1e903b364736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 ADDRESS 0x1F CREATE 0xA7 0xB7 OR PUSH1 0xF1 0xF9 CALLDATALOAD SWAP7 PUSH2 0x1F06 0xB9 LOG2 PUSH15 0x2952265DA77720C3A0E6F1E903B364 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
							"sourceMap": "194:9180:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122024301ff0a7b71760f1f93596611f06b9a26e2952265da77720c3a0e6f1e903b364736f6c634300081c0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"uniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 958,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"StringsUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":242:2845  library StringsUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220676681a530607da66dd69065bc821d3813c4fbcc35b340f77a91b5414cfb20c364736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220676681a530607da66dd69065bc821d3813c4fbcc35b340f77a91b5414cfb20c364736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x6681A530607DA66D 0xD6 SWAP1 PUSH6 0xBC821D3813C4 0xFB 0xCC CALLDATALOAD 0xB3 BLOCKHASH 0xF7 PUSH27 0x91B5414CFB20C364736F6C634300081C0033000000000000000000 ",
							"sourceMap": "242:2603:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;242:2603:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220676681a530607da66dd69065bc821d3813c4fbcc35b340f77a91b5414cfb20c364736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x6681A530607DA66D 0xD6 SWAP1 PUSH6 0xBC821D3813C4 0xFB 0xCC CALLDATALOAD 0xB3 BLOCKHASH 0xF7 PUSH27 0x91B5414CFB20C364736F6C634300081C0033000000000000000000 ",
							"sourceMap": "242:2603:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 242,
									"end": 2845,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220676681a530607da66dd69065bc821d3813c4fbcc35b340f77a91b5414cfb20c364736f6c634300081c0033",
									".code": [
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 242,
											"end": 2845,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"uniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":\"StringsUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1232,
								"contract": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:ERC165Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"MathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":202:12795  library MathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122005ee3423ae67857eb0bf6ef9498be11daca55c9339b6c1ef36d9ecbad06a8b5c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122005ee3423ae67857eb0bf6ef9498be11daca55c9339b6c1ef36d9ecbad06a8b5c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xEE CALLVALUE 0x23 0xAE PUSH8 0x857EB0BF6EF9498B 0xE1 SAR 0xAC 0xA5 TLOAD SWAP4 CODECOPY 0xB6 0xC1 0xEF CALLDATASIZE 0xD9 0xEC 0xBA 0xD0 PUSH11 0x8B5C64736F6C634300081C STOP CALLER ",
							"sourceMap": "202:12593:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;202:12593:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122005ee3423ae67857eb0bf6ef9498be11daca55c9339b6c1ef36d9ecbad06a8b5c64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xEE CALLVALUE 0x23 0xAE PUSH8 0x857EB0BF6EF9498B 0xE1 SAR 0xAC 0xA5 TLOAD SWAP4 CODECOPY 0xB6 0xC1 0xEF CALLDATASIZE 0xD9 0xEC 0xBA 0xD0 PUSH11 0x8B5C64736F6C634300081C STOP CALLER ",
							"sourceMap": "202:12593:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum MathUpgradeable.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum MathUpgradeable.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum MathUpgradeable.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12795,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122005ee3423ae67857eb0bf6ef9498be11daca55c9339b6c1ef36d9ecbad06a8b5c64736f6c634300081c0033",
									".code": [
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12795,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"uniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":\"MathUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"SignedMathUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":215:1273  library SignedMathUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212207b67af843c3374db5d3e583cdb763cf767cc71f2d7e02d91c90a8af81bf1de2c64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207b67af843c3374db5d3e583cdb763cf767cc71f2d7e02d91c90a8af81bf1de2c64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x67AF843C3374DB5D3E583CDB763CF767CC71F2D7E02D91C90A8AF81B CALL 0xDE 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "215:1058:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;215:1058:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212207b67af843c3374db5d3e583cdb763cf767cc71f2d7e02d91c90a8af81bf1de2c64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x67AF843C3374DB5D3E583CDB763CF767CC71F2D7E02D91C90A8AF81B CALL 0xDE 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "215:1058:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1273,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b67af843c3374db5d3e583cdb763cf767cc71f2d7e02d91c90a8af81bf1de2c64736f6c634300081c0033",
									".code": [
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1273,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"uniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":\"SignedMathUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"uniswap.sol": {
				"IWETH": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"burn(address,uint256)": "9dc29fac",
							"deposit()": "d0e30db0",
							"mint(address,uint256)": "40c10f19",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"uniswap.sol\":\"IWETH\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"uniswap.sol\":{\"keccak256\":\"0xfa39f0a84ba0fcb5d8cc953633cad3be340202e5aed84c7f621e401f114db6fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cdd5ccc4fa62360526d59bacb17ecb5841b518e70183c22c72d49f6d8a2e7a6\",\"dweb:/ipfs/QmT755SXNptA4XyF8BDYUnyESLA1Xs3oBbSS5JskDgD7TW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"UniswapV2Router02": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_WETH",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRICE_MANAGER",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "getTokenDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "tokenManager",
											"type": "address"
										}
									],
									"internalType": "struct UniswapV2Router02.TokenDetail",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"name": "getTokenPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWETHAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenManager",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "setTokenDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "tokenAddresses",
									"type": "address[]"
								},
								{
									"internalType": "address[]",
									"name": "tokenManagers",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "prices",
									"type": "uint256[]"
								}
							],
							"name": "setTokensDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenDetails",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "tokenManager",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"uniswap.sol\":1874:7173  contract UniswapV2Router02 is AccessControlUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"uniswap.sol\":2192:2414  constructor(address _WETH) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"uniswap.sol\":2229:2241  WETH = _WETH */\n  dup2\n  and\n  0x80\n  mstore\n    /* \"uniswap.sol\":2251:2295  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  tag_6\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n  caller\n    /* \"uniswap.sol\":2251:2261  _grantRole */\n  tag_9\n    /* \"uniswap.sol\":2251:2295  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\ntag_6:\n    /* \"uniswap.sol\":2305:2344  _grantRole(PRICE_MANAGER, _msgSender()) */\n  tag_10\n    /* \"uniswap.sol\":2159:2185  keccak256(\"PRICE_MANAGER\") */\n  0xa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e\n    /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n  caller\n    /* \"uniswap.sol\":2251:2261  _grantRole */\n  tag_9\n    /* \"uniswap.sol\":2251:2295  _grantRole(DEFAULT_ADMIN_ROLE, _msgSender()) */\n  jump\t// in\n    /* \"uniswap.sol\":2305:2344  _grantRole(PRICE_MANAGER, _msgSender()) */\ntag_10:\n    /* \"uniswap.sol\":2376:2407  TokenDetail(1e18, _msgSender()) */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n    /* \"uniswap.sol\":2388:2392  1e18 */\n  0x0de0b6b3a7640000\n    /* \"uniswap.sol\":2376:2407  TokenDetail(1e18, _msgSender()) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"uniswap.sol\":2394:2406  _msgSender() */\n  tag_12\n    /* \"uniswap.sol\":2394:2404  _msgSender */\n  shl(0x20, tag_8)\n    /* \"uniswap.sol\":2394:2406  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"uniswap.sol\":2376:2407  TokenDetail(1e18, _msgSender()) */\n  swap1\n  dup2\n  and\n  swap1\n  swap2\n  mstore\n    /* \"uniswap.sol\":2354:2373  tokenDetails[_WETH] */\n  swap2\n  dup3\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n    /* \"uniswap.sol\":2354:2366  tokenDetails */\n  0x97\n    /* \"uniswap.sol\":2354:2373  tokenDetails[_WETH] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  swap1\n  swap2\n  keccak256\n    /* \"uniswap.sol\":2354:2407  tokenDetails[_WETH] = TokenDetail(1e18, _msgSender()) */\n  dup3\n  mload\n  dup2\n  sstore\n  swap2\n  add\n  mload\n  0x01\n  swap1\n  swap2\n  add\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  swap2\n  swap1\n  swap3\n  and\n  or\n  swap1\n  sstore\n    /* \"uniswap.sol\":1874:7173  contract UniswapV2Router02 is AccessControlUpgradeable {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n  jump\t// out\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3436:3440  bool */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3465  _roles */\n  0x65\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3488  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8016:8165  if (!hasRole(role, account)) {... */\n  tag_18\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n  0x00\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8065  _roles */\n  0x65\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8088  _roles[role].members[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8095  _roles[role].members[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8091:8095  true */\n  0x01\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8095  _roles[role].members[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\n  tag_19\n    /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8132:8139  account */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8126:8130  role */\n  dup4\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8016:8165  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  0x00\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_23:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_24\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  0x00\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_24:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_21:\n    /* \"uniswap.sol\":1874:7173  contract UniswapV2Router02 is AccessControlUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x272fee19618bddbc00febd3897af287776f225c94084e4d859902021d48f698c\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"uniswap.sol\":1874:7173  contract UniswapV2Router02 is AccessControlUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xaffa8817\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd06ca61f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd06ca61f\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd4be683\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xeb71f7e6\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xfa1c631b\n      eq\n      tag_18\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0xaffa8817\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb6f9de95\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xcf0888aa\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xd02641a0\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x88aa8bee\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x88aa8bee\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xad5c4648\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      jump\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":874:899   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":862:864   */\n      0x20\n        /* \"#utility.yul\":847:865   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4855:4984  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      tag_27\n        /* \"#utility.yul\":728:905   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      revert(0x00, 0x00)\n    tag_41:\n      pop\n      tag_37\n      tag_43\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n        /* \"uniswap.sol\":5610:5776  function getTokenDetails(address tokenAddress)... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_47:\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":5743:5769  tokenDetails[tokenAddress] */\n      swap4\n      dup5\n      and\n      dup2\n      mstore\n        /* \"uniswap.sol\":5743:5755  tokenDetails */\n      0x97\n        /* \"uniswap.sol\":5743:5769  tokenDetails[tokenAddress] */\n      dup3\n      mstore\n      dup3\n      swap1\n      keccak256\n        /* \"uniswap.sol\":5736:5769  return tokenDetails[tokenAddress] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      dup4\n      mstore\n      0x01\n      add\n      sload\n      swap1\n      swap3\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"uniswap.sol\":5610:5776  function getTokenDetails(address tokenAddress)... */\n      jump\n    tag_46:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1806:1819   */\n      dup3\n      mload\n        /* \"#utility.yul\":1788:1820   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1880:1884   */\n      0x20\n        /* \"#utility.yul\":1868:1885   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":1862:1886   */\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1858:1908   */\n      and\n        /* \"#utility.yul\":1836:1856   */\n      swap3\n      dup2\n      add\n        /* \"#utility.yul\":1829:1909   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"uniswap.sol\":5610:5776  function getTokenDetails(address tokenAddress)... */\n      tag_27\n        /* \"#utility.yul\":1584:1915   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_23\n      tag_54\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2320:2369  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      revert(0x00, 0x00)\n    tag_57:\n      pop\n      tag_30\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2365:2369  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2320:2369  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"uniswap.sol\":2025:2054  address public immutable WETH */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      revert(0x00, 0x00)\n    tag_61:\n      pop\n      tag_62\n      immutable(\"0x272fee19618bddbc00febd3897af287776f225c94084e4d859902021d48f698c\")\n      dup2\n      jump\n    tag_62:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2084:2116   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2066:2117   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2054:2056   */\n      0x20\n        /* \"#utility.yul\":2039:2057   */\n      add\n        /* \"uniswap.sol\":2025:2054  address public immutable WETH */\n      tag_27\n        /* \"#utility.yul\":1920:2123   */\n      jump\n        /* \"uniswap.sol\":5383:5467  function getWETHAddress() public view returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n        /* \"uniswap.sol\":5456:5460  WETH */\n      immutable(\"0x272fee19618bddbc00febd3897af287776f225c94084e4d859902021d48f698c\")\n        /* \"uniswap.sol\":5383:5467  function getWETHAddress() public view returns (address) {... */\n      jump(tag_62)\n        /* \"uniswap.sol\":3196:4198  function swapExactETHForTokensSupportingFeeOnTransferTokens(... */\n    tag_11:\n      tag_37\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"uniswap.sol\":2119:2185  bytes32 public constant PRICE_MANAGER = keccak256(\"PRICE_MANAGER\") */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      tag_30\n        /* \"uniswap.sol\":2159:2185  keccak256(\"PRICE_MANAGER\") */\n      0xa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e\n        /* \"uniswap.sol\":2119:2185  bytes32 public constant PRICE_MANAGER = keccak256(\"PRICE_MANAGER\") */\n      dup2\n      jump\n        /* \"uniswap.sol\":5473:5604  function getTokenPrice(address tokenAddress) public view returns (uint256) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      revert(0x00, 0x00)\n    tag_78:\n      pop\n      tag_30\n      tag_80\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_80:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":5565:5591  tokenDetails[tokenAddress] */\n      and\n        /* \"uniswap.sol\":5539:5546  uint256 */\n      0x00\n        /* \"uniswap.sol\":5565:5591  tokenDetails[tokenAddress] */\n      swap1\n      dup2\n      mstore\n        /* \"uniswap.sol\":5565:5577  tokenDetails */\n      0x97\n        /* \"uniswap.sol\":5565:5591  tokenDetails[tokenAddress] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"uniswap.sol\":5565:5597  tokenDetails[tokenAddress].price */\n      sload\n      swap1\n        /* \"uniswap.sol\":5473:5604  function getTokenPrice(address tokenAddress) public view returns (uint256) {... */\n      jump\n        /* \"uniswap.sol\":4210:5377  function getAmountsOut(uint amountIn, address[] memory path)... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5705:5852  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      revert(0x00, 0x00)\n    tag_91:\n      pop\n      tag_37\n      tag_93\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"uniswap.sol\":2061:2112  mapping(address => TokenDetail) public tokenDetails */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      tag_96\n      tag_97\n      calldatasize\n      0x04\n      tag_48\n      jump\t// in\n    tag_97:\n      mstore(0x20, 0x97)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      jump\n    tag_96:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5771:5796   */\n      swap3\n      dup4\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5832:5864   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5827:5829   */\n      0x20\n        /* \"#utility.yul\":5812:5830   */\n      dup4\n      add\n        /* \"#utility.yul\":5805:5865   */\n      mstore\n        /* \"#utility.yul\":5744:5762   */\n      add\n        /* \"uniswap.sol\":2061:2112  mapping(address => TokenDetail) public tokenDetails */\n      tag_27\n        /* \"#utility.yul\":5597:5871   */\n      jump\n        /* \"uniswap.sol\":2649:3190  function setTokensDetails(... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      revert(0x00, 0x00)\n    tag_101:\n      pop\n      tag_37\n      tag_103\n      calldatasize\n      0x04\n      tag_104\n      jump\t// in\n    tag_103:\n      tag_105\n      jump\t// in\n        /* \"uniswap.sol\":2420:2643  function setTokenDetails(... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      revert(0x00, 0x00)\n    tag_106:\n      pop\n      tag_37\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3135:3139  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3216  interfaceId == type(IAccessControlUpgradeable).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3158:3256  interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      tag_113\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1189:1240  interfaceId == type(IERC165Upgradeable).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3220:3256  super.supportsInterface(interfaceId) */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3151:3256  return interfaceId == type(IAccessControlUpgradeable).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3050:3263  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5418  _grantRole(role, account) */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5404:5408  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5410:5417  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5403  _grantRole */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5393:5418  _grantRole(role, account) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5280:5425  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_44:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6484:6507  account == _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6484:6507  account == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7886:7888   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7868:7889   */\n      mstore\n        /* \"#utility.yul\":7925:7927   */\n      0x2f\n        /* \"#utility.yul\":7905:7923   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7898:7928   */\n      mstore\n        /* \"#utility.yul\":7964:7998   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":7944:7962   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7937:7999   */\n      mstore\n      shl(0x89, 0x103937b632b9903337b91039b2b633)\n        /* \"#utility.yul\":8015:8033   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8008:8053   */\n      mstore\n        /* \"#utility.yul\":8070:8089   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6476:6559  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6596  _revokeRole(role, account) */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6582:6586  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6588:6595  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6581  _revokeRole */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6570:6596  _revokeRole(role, account) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6389:6603  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3436:3440  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3465  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3471  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3459:3488  _roles[role].members[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3350:3495  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      jump\t// out\n        /* \"uniswap.sol\":3196:4198  function swapExactETHForTokensSupportingFeeOnTransferTokens(... */\n    tag_73:\n        /* \"uniswap.sol\":3418:3422  WETH */\n      immutable(\"0x272fee19618bddbc00febd3897af287776f225c94084e4d859902021d48f698c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":3407:3422  path[0] == WETH */\n      and\n        /* \"uniswap.sol\":3407:3411  path */\n      dup5\n      dup5\n        /* \"uniswap.sol\":3412:3413  0 */\n      0x00\n        /* \"uniswap.sol\":3407:3414  path[0] */\n      dup2\n      dup2\n      lt\n      tag_138\n      jumpi\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":3407:3422  path[0] == WETH */\n      and\n      eq\n        /* \"uniswap.sol\":3399:3456  require(path[0] == WETH, \"UniswapV2Router: INVALID_PATH\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8434:8436   */\n      0x20\n        /* \"uniswap.sol\":3399:3456  require(path[0] == WETH, \"UniswapV2Router: INVALID_PATH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8416:8437   */\n      mstore\n        /* \"#utility.yul\":8473:8475   */\n      0x1d\n        /* \"#utility.yul\":8453:8471   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8446:8476   */\n      mstore\n        /* \"#utility.yul\":8512:8543   */\n      0x556e69737761705632526f757465723a20494e56414c49445f50415448000000\n        /* \"#utility.yul\":8492:8510   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8485:8544   */\n      mstore\n        /* \"#utility.yul\":8561:8579   */\n      0x64\n      add\n        /* \"uniswap.sol\":3399:3456  require(path[0] == WETH, \"UniswapV2Router: INVALID_PATH\") */\n      tag_127\n        /* \"#utility.yul\":8232:8585   */\n      jump\n        /* \"uniswap.sol\":3399:3456  require(path[0] == WETH, \"UniswapV2Router: INVALID_PATH\") */\n    tag_141:\n        /* \"uniswap.sol\":3486:3501  block.timestamp */\n      timestamp\n        /* \"uniswap.sol\":3474:3482  deadline */\n      dup2\n        /* \"uniswap.sol\":3474:3501  deadline >= block.timestamp */\n      lt\n      iszero\n        /* \"uniswap.sol\":3466:3530  require(deadline >= block.timestamp, \"UniswapV2Router: EXPIRED\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8792:8794   */\n      0x20\n        /* \"uniswap.sol\":3466:3530  require(deadline >= block.timestamp, \"UniswapV2Router: EXPIRED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8774:8795   */\n      mstore\n        /* \"#utility.yul\":8831:8833   */\n      0x18\n        /* \"#utility.yul\":8811:8829   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8804:8834   */\n      mstore\n        /* \"#utility.yul\":8870:8896   */\n      0x556e69737761705632526f757465723a20455850495245440000000000000000\n        /* \"#utility.yul\":8850:8868   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8843:8897   */\n      mstore\n        /* \"#utility.yul\":8914:8932   */\n      0x64\n      add\n        /* \"uniswap.sol\":3466:3530  require(deadline >= block.timestamp, \"UniswapV2Router: EXPIRED\") */\n      tag_127\n        /* \"#utility.yul\":8590:8938   */\n      jump\n        /* \"uniswap.sol\":3466:3530  require(deadline >= block.timestamp, \"UniswapV2Router: EXPIRED\") */\n    tag_144:\n        /* \"uniswap.sol\":3541:3554  uint amountIn */\n      0x00\n        /* \"uniswap.sol\":3557:3566  msg.value */\n      callvalue\n        /* \"uniswap.sol\":3541:3566  uint amountIn = msg.value */\n      swap1\n      pop\n        /* \"uniswap.sol\":3577:3591  uint amountOut */\n      0x00\n        /* \"uniswap.sol\":3594:3623  getAmountsOut(amountIn, path) */\n      tag_147\n        /* \"uniswap.sol\":3608:3616  amountIn */\n      dup3\n        /* \"uniswap.sol\":3618:3622  path */\n      dup8\n      dup8\n        /* \"uniswap.sol\":3594:3623  getAmountsOut(amountIn, path) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"uniswap.sol\":3594:3607  getAmountsOut */\n      tag_88\n      swap3\n      pop\n      pop\n      pop\n        /* \"uniswap.sol\":3594:3623  getAmountsOut(amountIn, path) */\n      jump\t// in\n    tag_147:\n        /* \"uniswap.sol\":3624:3625  1 */\n      0x01\n        /* \"uniswap.sol\":3594:3626  getAmountsOut(amountIn, path)[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_149\n      jumpi\n      tag_149\n      tag_139\n      jump\t// in\n    tag_149:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"uniswap.sol\":3577:3626  uint amountOut = getAmountsOut(amountIn, path)[1] */\n      swap1\n      pop\n        /* \"uniswap.sol\":3669:3670  0 */\n      0x00\n        /* \"uniswap.sol\":3657:3666  amountOut */\n      dup2\n        /* \"uniswap.sol\":3657:3670  amountOut > 0 */\n      gt\n        /* \"uniswap.sol\":3657:3699  amountOut > 0 && amountOut >= amountOutMin */\n      dup1\n      iszero\n      tag_150\n      jumpi\n      pop\n        /* \"uniswap.sol\":3687:3699  amountOutMin */\n      dup7\n        /* \"uniswap.sol\":3674:3683  amountOut */\n      dup2\n        /* \"uniswap.sol\":3674:3699  amountOut >= amountOutMin */\n      lt\n      iszero\n        /* \"uniswap.sol\":3657:3699  amountOut > 0 && amountOut >= amountOutMin */\n    tag_150:\n        /* \"uniswap.sol\":3636:3768  require(... */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9145:9147   */\n      0x20\n        /* \"uniswap.sol\":3636:3768  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9127:9148   */\n      mstore\n        /* \"#utility.yul\":9184:9186   */\n      0x2b\n        /* \"#utility.yul\":9164:9182   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9157:9187   */\n      mstore\n        /* \"#utility.yul\":9223:9257   */\n      0x556e69737761705632526f757465723a20494e53554646494349454e545f4f55\n        /* \"#utility.yul\":9203:9221   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9196:9258   */\n      mstore\n      shl(0xaa, 0x1514155517d05353d55395)\n        /* \"#utility.yul\":9274:9292   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9267:9308   */\n      mstore\n        /* \"#utility.yul\":9325:9344   */\n      0x84\n      add\n        /* \"uniswap.sol\":3636:3768  require(... */\n      tag_127\n        /* \"#utility.yul\":8943:9350   */\n      jump\n        /* \"uniswap.sol\":3636:3768  require(... */\n    tag_151:\n        /* \"uniswap.sol\":3779:3794  address manager */\n      0x00\n        /* \"uniswap.sol\":3797:3809  tokenDetails */\n      0x97\n        /* \"uniswap.sol\":3797:3818  tokenDetails[path[1]] */\n      0x00\n        /* \"uniswap.sol\":3810:3814  path */\n      dup9\n      dup9\n        /* \"uniswap.sol\":3815:3816  1 */\n      0x01\n        /* \"uniswap.sol\":3810:3817  path[1] */\n      dup2\n      dup2\n      lt\n      tag_155\n      jumpi\n      tag_155\n      tag_139\n      jump\t// in\n    tag_155:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":3797:3818  tokenDetails[path[1]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"uniswap.sol\":3797:3831  tokenDetails[path[1]].tokenManager */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"uniswap.sol\":3779:3831  address manager = tokenDetails[path[1]].tokenManager */\n      swap1\n      pop\n        /* \"uniswap.sol\":3841:3858  uint256 allowance */\n      0x00\n        /* \"uniswap.sol\":3867:3871  path */\n      dup8\n      dup8\n        /* \"uniswap.sol\":3872:3873  1 */\n      0x01\n        /* \"uniswap.sol\":3867:3874  path[1] */\n      dup2\n      dup2\n      lt\n      tag_158\n      jumpi\n      tag_158\n      tag_139\n      jump\t// in\n    tag_158:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_159\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_159:\n        /* \"uniswap.sol\":3861:3909  IWETH(path[1]).allowance(manager, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9547:9579   */\n      dup5\n      dup2\n      and\n        /* \"uniswap.sol\":3861:3909  IWETH(path[1]).allowance(manager, address(this)) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9529:9580   */\n      mstore\n        /* \"uniswap.sol\":3903:3907  this */\n      address\n        /* \"#utility.yul\":9596:9614   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":9589:9649   */\n      mstore\n        /* \"uniswap.sol\":3861:3885  IWETH(path[1]).allowance */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":9502:9520   */\n      0x44\n      add\n        /* \"uniswap.sol\":3861:3909  IWETH(path[1]).allowance(manager, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_163:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_164\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"uniswap.sol\":3841:3909  uint256 allowance = IWETH(path[1]).allowance(manager, address(this)) */\n      swap1\n      pop\n        /* \"uniswap.sol\":3953:3962  amountOut */\n      dup3\n        /* \"uniswap.sol\":3940:3949  allowance */\n      dup2\n        /* \"uniswap.sol\":3940:3962  allowance >= amountOut */\n      lt\n      iszero\n        /* \"uniswap.sol\":3919:4032  require(... */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10051:10053   */\n      0x20\n        /* \"uniswap.sol\":3919:4032  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10033:10054   */\n      mstore\n        /* \"#utility.yul\":10090:10092   */\n      0x2c\n        /* \"#utility.yul\":10070:10088   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10063:10093   */\n      mstore\n        /* \"#utility.yul\":10129:10163   */\n      0x556e69737761705632526f757465723a20494e53554646494349454e545f414d\n        /* \"#utility.yul\":10109:10127   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10102:10164   */\n      mstore\n      shl(0xa2, 0x13d5539517d0531313d5d151)\n        /* \"#utility.yul\":10180:10198   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10173:10215   */\n      mstore\n        /* \"#utility.yul\":10232:10251   */\n      0x84\n      add\n        /* \"uniswap.sol\":3919:4032  require(... */\n      tag_127\n        /* \"#utility.yul\":9849:10257   */\n      jump\n        /* \"uniswap.sol\":3919:4032  require(... */\n    tag_166:\n        /* \"uniswap.sol\":4049:4053  WETH */\n      immutable(\"0x272fee19618bddbc00febd3897af287776f225c94084e4d859902021d48f698c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":4043:4062  IWETH(WETH).deposit */\n      and\n      0xd0e30db0\n        /* \"uniswap.sol\":4070:4078  amountIn */\n      dup6\n        /* \"uniswap.sol\":4043:4081  IWETH(WETH).deposit{value: amountIn}() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      revert(0x00, 0x00)\n    tag_169:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"uniswap.sol\":4097:4101  WETH */\n      immutable(\"0x272fee19618bddbc00febd3897af287776f225c94084e4d859902021d48f698c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":4091:4111  IWETH(WETH).transfer */\n      and\n      0xa9059cbb\n        /* \"uniswap.sol\":4112:4116  path */\n      dup10\n      dup10\n        /* \"uniswap.sol\":4117:4118  1 */\n      0x01\n        /* \"uniswap.sol\":4112:4119  path[1] */\n      dup2\n      dup2\n      lt\n      tag_173\n      jumpi\n      tag_173\n      tag_139\n      jump\t// in\n    tag_173:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_174:\n        /* \"uniswap.sol\":4091:4130  IWETH(WETH).transfer(path[1], amountIn) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10454:10486   */\n      swap1\n      swap2\n      and\n        /* \"uniswap.sol\":4091:4130  IWETH(WETH).transfer(path[1], amountIn) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10436:10487   */\n      mstore\n        /* \"#utility.yul\":10503:10521   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10496:10530   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":10409:10427   */\n      0x44\n      add\n        /* \"uniswap.sol\":4091:4130  IWETH(WETH).transfer(path[1], amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_179\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      pop\n        /* \"uniswap.sol\":4146:4150  path */\n      dup8\n      dup8\n        /* \"uniswap.sol\":4151:4152  1 */\n      0x01\n        /* \"uniswap.sol\":4146:4153  path[1] */\n      dup2\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_182\n      tag_139\n      jump\t// in\n    tag_182:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_183:\n        /* \"uniswap.sol\":4140:4191  IWETH(path[1]).transferFrom(manager, to, amountOut) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11043:11075   */\n      dup5\n      dup2\n      and\n        /* \"uniswap.sol\":4140:4191  IWETH(path[1]).transferFrom(manager, to, amountOut) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":11025:11076   */\n      mstore\n        /* \"#utility.yul\":11112:11144   */\n      dup9\n      dup2\n      and\n        /* \"#utility.yul\":11092:11110   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":11085:11145   */\n      mstore\n        /* \"#utility.yul\":11161:11179   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11154:11188   */\n      dup7\n      swap1\n      mstore\n        /* \"uniswap.sol\":4140:4167  IWETH(path[1]).transferFrom */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":10998:11016   */\n      0x64\n      add\n        /* \"uniswap.sol\":4140:4191  IWETH(path[1]).transferFrom(manager, to, amountOut) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_180\n      jump\t// in\n    tag_188:\n      pop\n        /* \"uniswap.sol\":3380:4198  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"uniswap.sol\":3196:4198  function swapExactETHForTokensSupportingFeeOnTransferTokens(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"uniswap.sol\":4210:5377  function getAmountsOut(uint amountIn, address[] memory path)... */\n    tag_88:\n        /* \"uniswap.sol\":4316:4337  uint[] memory amounts */\n      0x60\n        /* \"uniswap.sol\":4385:4386  0 */\n      0x00\n        /* \"uniswap.sol\":4374:4382  amountIn */\n      dup4\n        /* \"uniswap.sol\":4374:4386  amountIn > 0 */\n      gt\n        /* \"uniswap.sol\":4353:4465  require(... */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11401:11403   */\n      0x20\n        /* \"uniswap.sol\":4353:4465  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11383:11404   */\n      mstore\n        /* \"#utility.yul\":11440:11442   */\n      0x35\n        /* \"#utility.yul\":11420:11438   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11413:11443   */\n      mstore\n        /* \"#utility.yul\":11479:11513   */\n      0x556e69737761705632526f757465723a20616d6f756e74496e2073686f756c64\n        /* \"#utility.yul\":11459:11477   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11452:11514   */\n      mstore\n      shl(0x58, 0x2062652067726561746572207468616e207a65726f)\n        /* \"#utility.yul\":11530:11548   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11523:11574   */\n      mstore\n        /* \"#utility.yul\":11591:11610   */\n      0x84\n      add\n        /* \"uniswap.sol\":4353:4465  require(... */\n      tag_127\n        /* \"#utility.yul\":11199:11616   */\n      jump\n        /* \"uniswap.sol\":4353:4465  require(... */\n    tag_191:\n        /* \"uniswap.sol\":4511:4512  2 */\n      0x02\n        /* \"uniswap.sol\":4496:4500  path */\n      dup3\n        /* \"uniswap.sol\":4496:4507  path.length */\n      mload\n        /* \"uniswap.sol\":4496:4512  path.length >= 2 */\n      lt\n      iszero\n        /* \"uniswap.sol\":4475:4588  require(... */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11823:11825   */\n      0x20\n        /* \"uniswap.sol\":4475:4588  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11805:11826   */\n      mstore\n        /* \"#utility.yul\":11862:11864   */\n      0x32\n        /* \"#utility.yul\":11842:11860   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11835:11865   */\n      mstore\n        /* \"#utility.yul\":11901:11935   */\n      0x556e69737761705632526f757465723a207061746820636f6e7461696e732061\n        /* \"#utility.yul\":11881:11899   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11874:11936   */\n      mstore\n      shl(0x70, 0x74206c65617374203220656c656d656e7473)\n        /* \"#utility.yul\":11952:11970   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11945:11993   */\n      mstore\n        /* \"#utility.yul\":12010:12029   */\n      0x84\n      add\n        /* \"uniswap.sol\":4475:4588  require(... */\n      tag_127\n        /* \"#utility.yul\":11621:12035   */\n      jump\n        /* \"uniswap.sol\":4475:4588  require(... */\n    tag_194:\n        /* \"uniswap.sol\":4620:4624  path */\n      dup2\n        /* \"uniswap.sol\":4620:4631  path.length */\n      mload\n        /* \"uniswap.sol\":4609:4632  new uint[](path.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_198\n      jumpi\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_200\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_200:\n      pop\n        /* \"uniswap.sol\":4599:4632  amounts = new uint[](path.length) */\n      swap1\n      pop\n        /* \"uniswap.sol\":4655:4663  amountIn */\n      dup3\n        /* \"uniswap.sol\":4642:4649  amounts */\n      dup2\n        /* \"uniswap.sol\":4650:4651  0 */\n      0x00\n        /* \"uniswap.sol\":4642:4652  amounts[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_202\n      jumpi\n      tag_202\n      tag_139\n      jump\t// in\n    tag_202:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"uniswap.sol\":4642:4663  amounts[0] = amountIn */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"uniswap.sol\":4679:4685  uint i */\n      0x00\n        /* \"uniswap.sol\":4674:5346  for (uint i; i < path.length - 1; i++) {... */\n    tag_203:\n        /* \"uniswap.sol\":4705:4706  1 */\n      0x01\n        /* \"uniswap.sol\":4691:4695  path */\n      dup4\n        /* \"uniswap.sol\":4691:4702  path.length */\n      mload\n        /* \"uniswap.sol\":4691:4706  path.length - 1 */\n      tag_206\n      swap2\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n        /* \"uniswap.sol\":4687:4688  i */\n      dup2\n        /* \"uniswap.sol\":4687:4706  i < path.length - 1 */\n      lt\n        /* \"uniswap.sol\":4674:5346  for (uint i; i < path.length - 1; i++) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"uniswap.sol\":4731:4743  tokenDetails */\n      0x97\n        /* \"uniswap.sol\":4731:4756  tokenDetails[path[i + 1]] */\n      0x00\n        /* \"uniswap.sol\":4744:4748  path */\n      dup5\n        /* \"uniswap.sol\":4749:4754  i + 1 */\n      tag_208\n        /* \"uniswap.sol\":4749:4750  i */\n      dup5\n        /* \"uniswap.sol\":4753:4754  1 */\n      0x01\n        /* \"uniswap.sol\":4749:4754  i + 1 */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"uniswap.sol\":4744:4755  path[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_211\n      jumpi\n      tag_211\n      tag_139\n      jump\t// in\n    tag_211:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":4731:4756  tokenDetails[path[i + 1]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"uniswap.sol\":4731:4762  tokenDetails[path[i + 1]].price */\n      0x00\n      add\n      sload\n        /* \"uniswap.sol\":4766:4767  0 */\n      0x00\n        /* \"uniswap.sol\":4731:4767  tokenDetails[path[i + 1]].price != 0 */\n      eq\n        /* \"uniswap.sol\":4727:5336  if (tokenDetails[path[i + 1]].price != 0) {... */\n      tag_212\n      jumpi\n        /* \"uniswap.sol\":4802:4806  WETH */\n      immutable(\"0x272fee19618bddbc00febd3897af287776f225c94084e4d859902021d48f698c\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":4791:4806  path[0] == WETH */\n      and\n        /* \"uniswap.sol\":4791:4795  path */\n      dup4\n        /* \"uniswap.sol\":4796:4797  0 */\n      0x00\n        /* \"uniswap.sol\":4791:4798  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_214\n      jumpi\n      tag_214\n      tag_139\n      jump\t// in\n    tag_214:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":4791:4806  path[0] == WETH */\n      and\n      sub\n        /* \"uniswap.sol\":4787:5265  if (path[0] == WETH) {... */\n      tag_215\n      jumpi\n        /* \"uniswap.sol\":4915:4927  tokenDetails */\n      0x97\n        /* \"uniswap.sol\":4915:4940  tokenDetails[path[i + 1]] */\n      0x00\n        /* \"uniswap.sol\":4928:4932  path */\n      dup5\n        /* \"uniswap.sol\":4933:4938  i + 1 */\n      tag_216\n        /* \"uniswap.sol\":4933:4934  i */\n      dup5\n        /* \"uniswap.sol\":4937:4938  1 */\n      0x01\n        /* \"uniswap.sol\":4933:4938  i + 1 */\n      tag_209\n      jump\t// in\n    tag_216:\n        /* \"uniswap.sol\":4928:4939  path[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_218\n      jumpi\n      tag_218\n      tag_139\n      jump\t// in\n    tag_218:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":4915:4940  tokenDetails[path[i + 1]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"uniswap.sol\":4915:4946  tokenDetails[path[i + 1]].price */\n      0x00\n      add\n      sload\n        /* \"uniswap.sol\":4872:4880  amountIn */\n      dup5\n        /* \"uniswap.sol\":4883:4887  1e18 */\n      0x0de0b6b3a7640000\n        /* \"uniswap.sol\":4872:4887  amountIn * 1e18 */\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"uniswap.sol\":4871:4946  (amountIn * 1e18) /... */\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"uniswap.sol\":4830:4837  amounts */\n      dup3\n        /* \"uniswap.sol\":4838:4843  i + 1 */\n      tag_223\n        /* \"uniswap.sol\":4838:4839  i */\n      dup4\n        /* \"uniswap.sol\":4842:4843  1 */\n      0x01\n        /* \"uniswap.sol\":4838:4843  i + 1 */\n      tag_209\n      jump\t// in\n    tag_223:\n        /* \"uniswap.sol\":4830:4844  amounts[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_225\n      jumpi\n      tag_225\n      tag_139\n      jump\t// in\n    tag_225:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"uniswap.sol\":4830:4946  amounts[i + 1] =... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"uniswap.sol\":4727:5336  if (tokenDetails[path[i + 1]].price != 0) {... */\n      jump(tag_239)\n        /* \"uniswap.sol\":4787:5265  if (path[0] == WETH) {... */\n    tag_215:\n        /* \"uniswap.sol\":4993:5009  uint amountInEth */\n      0x00\n        /* \"uniswap.sol\":5110:5114  1e18 */\n      0x0de0b6b3a7640000\n        /* \"uniswap.sol\":5079:5091  tokenDetails */\n      0x97\n        /* \"uniswap.sol\":5079:5100  tokenDetails[path[0]] */\n      0x00\n        /* \"uniswap.sol\":5092:5096  path */\n      dup7\n        /* \"uniswap.sol\":5097:5098  0 */\n      0x00\n        /* \"uniswap.sol\":5092:5099  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_228\n      jumpi\n      tag_228\n      tag_139\n      jump\t// in\n    tag_228:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":5079:5100  tokenDetails[path[0]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"uniswap.sol\":5079:5106  tokenDetails[path[0]].price */\n      0x00\n      add\n      sload\n        /* \"uniswap.sol\":5013:5021  amountIn */\n      dup7\n        /* \"uniswap.sol\":5048:5052  1e18 */\n      0x0de0b6b3a7640000\n        /* \"uniswap.sol\":5013:5052  amountIn *... */\n      tag_229\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_229:\n        /* \"uniswap.sol\":5013:5106  amountIn *... */\n      tag_230\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_230:\n        /* \"uniswap.sol\":5012:5114  (amountIn *... */\n      tag_231\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_231:\n        /* \"uniswap.sol\":4993:5114  uint amountInEth = (amountIn *... */\n      swap1\n      pop\n        /* \"uniswap.sol\":5215:5227  tokenDetails */\n      0x97\n        /* \"uniswap.sol\":5215:5240  tokenDetails[path[i + 1]] */\n      0x00\n        /* \"uniswap.sol\":5228:5232  path */\n      dup6\n        /* \"uniswap.sol\":5233:5238  i + 1 */\n      tag_232\n        /* \"uniswap.sol\":5233:5234  i */\n      dup6\n        /* \"uniswap.sol\":5237:5238  1 */\n      0x01\n        /* \"uniswap.sol\":5233:5238  i + 1 */\n      tag_209\n      jump\t// in\n    tag_232:\n        /* \"uniswap.sol\":5228:5239  path[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_234\n      jumpi\n      tag_234\n      tag_139\n      jump\t// in\n    tag_234:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":5215:5240  tokenDetails[path[i + 1]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"uniswap.sol\":5215:5246  tokenDetails[path[i + 1]].price */\n      0x00\n      add\n      sload\n        /* \"uniswap.sol\":5177:5188  amountInEth */\n      dup2\n        /* \"uniswap.sol\":5177:5246  amountInEth /... */\n      tag_235\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_235:\n        /* \"uniswap.sol\":5136:5143  amounts */\n      dup4\n        /* \"uniswap.sol\":5144:5149  i + 1 */\n      tag_236\n        /* \"uniswap.sol\":5144:5145  i */\n      dup5\n        /* \"uniswap.sol\":5148:5149  1 */\n      0x01\n        /* \"uniswap.sol\":5144:5149  i + 1 */\n      tag_209\n      jump\t// in\n    tag_236:\n        /* \"uniswap.sol\":5136:5150  amounts[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_238\n      tag_139\n      jump\t// in\n    tag_238:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"uniswap.sol\":5136:5246  amounts[i + 1] =... */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"uniswap.sol\":4971:5265  {... */\n      pop\n        /* \"uniswap.sol\":4727:5336  if (tokenDetails[path[i + 1]].price != 0) {... */\n      jump(tag_239)\n    tag_212:\n        /* \"uniswap.sol\":5320:5321  0 */\n      0x00\n        /* \"uniswap.sol\":5303:5310  amounts */\n      dup3\n        /* \"uniswap.sol\":5311:5316  i + 1 */\n      tag_240\n        /* \"uniswap.sol\":5311:5312  i */\n      dup4\n        /* \"uniswap.sol\":5315:5316  1 */\n      0x01\n        /* \"uniswap.sol\":5311:5316  i + 1 */\n      tag_209\n      jump\t// in\n    tag_240:\n        /* \"uniswap.sol\":5303:5317  amounts[i + 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_242\n      jumpi\n      tag_242\n      tag_139\n      jump\t// in\n    tag_242:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"uniswap.sol\":5303:5321  amounts[i + 1] = 0 */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"uniswap.sol\":4727:5336  if (tokenDetails[path[i + 1]].price != 0) {... */\n    tag_239:\n        /* \"uniswap.sol\":4708:4711  i++ */\n      0x01\n      add\n        /* \"uniswap.sol\":4674:5346  for (uint i; i < path.length - 1; i++) {... */\n      jump(tag_203)\n    tag_204:\n      pop\n        /* \"uniswap.sol\":4210:5377  function getAmountsOut(uint amountIn, address[] memory path)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5705:5852  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4929:4936  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4961  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4967  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4955:4977  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5845  _revokeRole(role, account) */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5831:5835  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5837:5844  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5830  _revokeRole */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5819:5845  _revokeRole(role, account) */\n      jump\t// in\n        /* \"uniswap.sol\":2649:3190  function setTokensDetails(... */\n    tag_105:\n        /* \"uniswap.sol\":2159:2185  keccak256(\"PRICE_MANAGER\") */\n      0xa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_249\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_249:\n        /* \"uniswap.sol\":2882:2884  30 */\n      0x1e\n        /* \"uniswap.sol\":2857:2871  tokenAddresses */\n      dup5\n        /* \"uniswap.sol\":2857:2878  tokenAddresses.length */\n      mload\n        /* \"uniswap.sol\":2857:2884  tokenAddresses.length <= 30 */\n      gt\n      iszero\n        /* \"uniswap.sol\":2836:2980  require(... */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13032:13034   */\n      0x20\n        /* \"uniswap.sol\":2836:2980  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13014:13035   */\n      mstore\n        /* \"#utility.yul\":13071:13073   */\n      0x46\n        /* \"#utility.yul\":13051:13069   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13044:13074   */\n      mstore\n        /* \"#utility.yul\":13110:13144   */\n      0x556e69737761705632526f757465723a20546f6b656e73206172726179206973\n        /* \"#utility.yul\":13090:13108   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13083:13145   */\n      mstore\n        /* \"#utility.yul\":13181:13215   */\n      0x20746f6f206c6f6e672c2072656475636520746865206e756d626572206f6620\n        /* \"#utility.yul\":13161:13179   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13154:13216   */\n      mstore\n      shl(0xd0, 0x746f6b656e73)\n        /* \"#utility.yul\":13232:13251   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":13225:13262   */\n      mstore\n        /* \"#utility.yul\":13279:13298   */\n      0xa4\n      add\n        /* \"uniswap.sol\":2836:2980  require(... */\n      tag_127\n        /* \"#utility.yul\":12830:13304   */\n      jump\n        /* \"uniswap.sol\":2836:2980  require(... */\n    tag_251:\n        /* \"uniswap.sol\":2996:3005  uint256 i */\n      0x00\n        /* \"uniswap.sol\":2991:3184  for (uint256 i; i < tokenAddresses.length; i++) {... */\n    tag_254:\n        /* \"uniswap.sol\":3011:3025  tokenAddresses */\n      dup5\n        /* \"uniswap.sol\":3011:3032  tokenAddresses.length */\n      mload\n        /* \"uniswap.sol\":3007:3008  i */\n      dup2\n        /* \"uniswap.sol\":3007:3032  i < tokenAddresses.length */\n      lt\n        /* \"uniswap.sol\":2991:3184  for (uint256 i; i < tokenAddresses.length; i++) {... */\n      iszero\n      tag_255\n      jumpi\n        /* \"uniswap.sol\":3087:3173  TokenDetail(... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"uniswap.sol\":3116:3122  prices */\n      dup5\n        /* \"uniswap.sol\":3123:3124  i */\n      dup4\n        /* \"uniswap.sol\":3116:3125  prices[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_258\n      jumpi\n      tag_258\n      tag_139\n      jump\t// in\n    tag_258:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"uniswap.sol\":3087:3173  TokenDetail(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"uniswap.sol\":3143:3156  tokenManagers */\n      dup6\n        /* \"uniswap.sol\":3157:3158  i */\n      dup4\n        /* \"uniswap.sol\":3143:3159  tokenManagers[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_260\n      jumpi\n      tag_260\n      tag_139\n      jump\t// in\n    tag_260:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":3087:3173  TokenDetail(... */\n      and\n      dup2\n      mstore\n      pop\n        /* \"uniswap.sol\":3053:3065  tokenDetails */\n      0x97\n        /* \"uniswap.sol\":3053:3084  tokenDetails[tokenAddresses[i]] */\n      0x00\n        /* \"uniswap.sol\":3066:3080  tokenAddresses */\n      dup8\n        /* \"uniswap.sol\":3081:3082  i */\n      dup5\n        /* \"uniswap.sol\":3066:3083  tokenAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_262\n      jumpi\n      tag_262\n      tag_139\n      jump\t// in\n    tag_262:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"uniswap.sol\":3053:3084  tokenDetails[tokenAddresses[i]] */\n      swap1\n      dup2\n      and\n      dup4\n      mstore\n      dup3\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      swap2\n      add\n      0x00\n      keccak256\n        /* \"uniswap.sol\":3053:3173  tokenDetails[tokenAddresses[i]] = TokenDetail(... */\n      dup4\n      mload\n      dup2\n      sstore\n      swap3\n      add\n      mload\n      0x01\n      swap3\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap3\n      and\n      or\n      swap1\n      sstore\n        /* \"uniswap.sol\":3034:3037  i++ */\n      add\n        /* \"uniswap.sol\":2991:3184  for (uint256 i; i < tokenAddresses.length; i++) {... */\n      jump(tag_254)\n    tag_255:\n      pop\n        /* \"uniswap.sol\":2649:3190  function setTokensDetails(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"uniswap.sol\":2420:2643  function setTokenDetails(... */\n    tag_110:\n        /* \"uniswap.sol\":2159:2185  keccak256(\"PRICE_MANAGER\") */\n      0xa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2809:2813  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2808  _checkRole */\n      tag_119\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2798:2814  _checkRole(role) */\n      jump\t// in\n    tag_264:\n      pop\n        /* \"uniswap.sol\":2604:2636  TokenDetail(price, tokenManager) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      0x20\n      dup1\n      dup5\n      add\n      swap2\n      dup3\n      mstore\n        /* \"uniswap.sol\":2575:2601  tokenDetails[tokenAddress] */\n      swap5\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"uniswap.sol\":2575:2587  tokenDetails */\n      0x97\n        /* \"uniswap.sol\":2575:2601  tokenDetails[tokenAddress] */\n      swap1\n      swap6\n      mstore\n      swap4\n      keccak256\n        /* \"uniswap.sol\":2575:2636  tokenDetails[tokenAddress] = TokenDetail(price, tokenManager) */\n      swap1\n      mload\n      dup2\n      sstore\n      swap2\n      mload\n      0x01\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"uniswap.sol\":2420:2643  function setTokenDetails(... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3789:3892  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3885  _checkRole(role, _msgSender()) */\n      tag_268\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3866:3870  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3865  _checkRole */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3855:3885  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3789:3892  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8043  hasRole(role, account) */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8029:8033  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8035:8042  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8028  hasRole */\n      tag_55\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8043  hasRole(role, account) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8016:8165  if (!hasRole(role, account)) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8065  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8071  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8088  _roles[role].members[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8095  _roles[role].members[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8091:8095  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8095  _roles[role].members[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8141:8153  _msgSender() */\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8132:8139  account */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8126:8130  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8114:8154  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7938:8171  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8342:8576  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8447  hasRole(role, account) */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8433:8437  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8439:8446  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8432  hasRole */\n      tag_55\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8425:8447  hasRole(role, account) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8421:8570  if (hasRole(role, account)) {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8495:8500  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8469  _roles */\n      0x65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8492  _roles[role].members[account] */\n      dup6\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8500  _roles[role].members[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8463:8475  _roles[role] */\n      dup6\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8495:8500  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8519:8559  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8342:8576  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4173:4674  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4283  hasRole(role, account) */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4269:4273  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4275:4282  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4268  hasRole */\n      tag_55\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4261:4283  hasRole(role, account) */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4256:4668  if (!hasRole(role, account)) {... */\n      tag_129\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4483  StringsUpgradeable.toHexString(account) */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4475:4482  account */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4474  StringsUpgradeable.toHexString */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4444:4483  StringsUpgradeable.toHexString(account) */\n      jump\t// in\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4603  StringsUpgradeable.toHexString(uint256(role), 32) */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4593:4597  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4600:4602  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4584  StringsUpgradeable.toHexString */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4554:4603  StringsUpgradeable.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4351:4625  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_287\n      swap3\n      swap2\n      swap1\n      tag_288\n      jump\t// in\n    tag_287:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n      shl(0xe5, 0x461bcd)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4299:4657  revert(... */\n      dup3\n      mstore\n      tag_127\n      swap2\n      0x04\n      add\n      tag_290\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2473:2622  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2531:2544  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2563:2615  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_113\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2575:2597  uint256(uint160(addr)) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":376:378  20 */\n      0x14\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1959:1972  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2003  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2020:2026  length */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2017  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2026  2 * length */\n      tag_220\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_295\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2029:2030  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2016:2030  2 * length + 2 */\n      tag_209\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2006:2031  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_297\n      jumpi\n      tag_297\n      tag_199\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_298\n      jumpi\n      0x20\n      dup3\n      add\n      dup2\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_298:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1984:2031  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n      shl(0xfc, 0x03)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2047  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2048:2049  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2050  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_300\n      tag_139\n      jump\t// in\n    tag_300:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2041:2056  buffer[0] = \"0\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n      shl(0xfb, 0x0f)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2072  buffer */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2073:2074  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2075  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_302\n      jumpi\n      tag_302\n      tag_139\n      jump\t// in\n    tag_302:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2066:2081  buffer[1] = \"x\" */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2105  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_306\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2112:2118  length */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2109  2 */\n      0x02\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2118  2 * length */\n      tag_220\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_307\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2121:2122  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2108:2122  2 * length + 1 */\n      tag_209\n      jump\t// in\n    tag_307:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2096:2122  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2128:2129  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2125  i */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2124:2129  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_304\n      jumpi\n      shl(0x81, 0x181899199a1a9b1b9c1cb0b131b232b3)\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2176  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2179:2182  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2171:2182  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2162:2183  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_309\n      jumpi\n      tag_309\n      tag_139\n      jump\t// in\n    tag_309:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2156  buffer */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2157:2158  i */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2159  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_311\n      jumpi\n      tag_311\n      tag_139\n      jump\t// in\n    tag_311:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2150:2183  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(sub(shl(0xf8, 0x01), 0x01))\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2207:2208  4 */\n      0x04\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2197:2208  value >>= 4 */\n      swap5\n      swap1\n      swap5\n      shr\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2131:2134  --i */\n      tag_312\n      dup2\n      tag_313\n      jump\t// in\n    tag_312:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2091:2219  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_303)\n    tag_304:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2236:2246  value == 0 */\n      dup4\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_314\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14892:14894   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14874:14895   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":14911:14929   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14904:14934   */\n      mstore\n        /* \"#utility.yul\":14970:15004   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":14950:14968   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14943:15005   */\n      mstore\n        /* \"#utility.yul\":15022:15040   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_127\n        /* \"#utility.yul\":14690:15046   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2228:2283  require(value == 0, \"Strings: hex length insufficient\") */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":2307:2313  buffer */\n      swap4\n        /* \"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":1884:2321  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_25:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      0x00\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_325:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      0x00\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:723   */\n    tag_32:\n        /* \"#utility.yul\":556:562   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":597:606   */\n      dup3\n        /* \"#utility.yul\":588:595   */\n      dup5\n        /* \"#utility.yul\":584:607   */\n      sub\n        /* \"#utility.yul\":580:612   */\n      slt\n        /* \"#utility.yul\":577:629   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":622:623   */\n      0x00\n        /* \"#utility.yul\":615:627   */\n      revert\n        /* \"#utility.yul\":577:629   */\n    tag_329:\n      pop\n        /* \"#utility.yul\":670:693   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":497:723   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":910:1083   */\n    tag_317:\n        /* \"#utility.yul\":978:998   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1027:1058   */\n      dup2\n      and\n        /* \"#utility.yul\":1017:1059   */\n      dup2\n      eq\n        /* \"#utility.yul\":1007:1077   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1073:1074   */\n      0x00\n        /* \"#utility.yul\":1070:1071   */\n      0x00\n        /* \"#utility.yul\":1063:1075   */\n      revert\n        /* \"#utility.yul\":1007:1077   */\n    tag_332:\n        /* \"#utility.yul\":910:1083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1088:1388   */\n    tag_39:\n        /* \"#utility.yul\":1156:1162   */\n      0x00\n        /* \"#utility.yul\":1164:1170   */\n      0x00\n        /* \"#utility.yul\":1217:1219   */\n      0x40\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1196:1203   */\n      dup6\n        /* \"#utility.yul\":1192:1215   */\n      sub\n        /* \"#utility.yul\":1188:1220   */\n      slt\n        /* \"#utility.yul\":1185:1237   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":1233:1234   */\n      0x00\n        /* \"#utility.yul\":1230:1231   */\n      0x00\n        /* \"#utility.yul\":1223:1235   */\n      revert\n        /* \"#utility.yul\":1185:1237   */\n    tag_334:\n        /* \"#utility.yul\":1278:1301   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1344:1382   */\n      tag_335\n        /* \"#utility.yul\":1378:1380   */\n      0x20\n        /* \"#utility.yul\":1363:1381   */\n      dup5\n      add\n        /* \"#utility.yul\":1344:1382   */\n      tag_317\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1334:1382   */\n      swap1\n      pop\n        /* \"#utility.yul\":1088:1388   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1393:1579   */\n    tag_48:\n        /* \"#utility.yul\":1452:1458   */\n      0x00\n        /* \"#utility.yul\":1505:1507   */\n      0x20\n        /* \"#utility.yul\":1493:1502   */\n      dup3\n        /* \"#utility.yul\":1484:1491   */\n      dup5\n        /* \"#utility.yul\":1480:1503   */\n      sub\n        /* \"#utility.yul\":1476:1508   */\n      slt\n        /* \"#utility.yul\":1473:1525   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":1521:1522   */\n      0x00\n        /* \"#utility.yul\":1518:1519   */\n      0x00\n        /* \"#utility.yul\":1511:1523   */\n      revert\n        /* \"#utility.yul\":1473:1525   */\n    tag_337:\n        /* \"#utility.yul\":1544:1573   */\n      tag_314\n        /* \"#utility.yul\":1563:1572   */\n      dup3\n        /* \"#utility.yul\":1544:1573   */\n      tag_317\n      jump\t// in\n        /* \"#utility.yul\":2128:3047   */\n    tag_72:\n        /* \"#utility.yul\":2241:2247   */\n      0x00\n        /* \"#utility.yul\":2249:2255   */\n      0x00\n        /* \"#utility.yul\":2257:2263   */\n      0x00\n        /* \"#utility.yul\":2265:2271   */\n      0x00\n        /* \"#utility.yul\":2273:2279   */\n      0x00\n        /* \"#utility.yul\":2326:2329   */\n      0x80\n        /* \"#utility.yul\":2314:2323   */\n      dup7\n        /* \"#utility.yul\":2305:2312   */\n      dup9\n        /* \"#utility.yul\":2301:2324   */\n      sub\n        /* \"#utility.yul\":2297:2330   */\n      slt\n        /* \"#utility.yul\":2294:2347   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2343:2344   */\n      0x00\n        /* \"#utility.yul\":2340:2341   */\n      0x00\n        /* \"#utility.yul\":2333:2345   */\n      revert\n        /* \"#utility.yul\":2294:2347   */\n    tag_342:\n        /* \"#utility.yul\":2388:2411   */\n      dup6\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":2486:2488   */\n      0x20\n        /* \"#utility.yul\":2471:2489   */\n      dup7\n      add\n        /* \"#utility.yul\":2458:2490   */\n      calldataload\n        /* \"#utility.yul\":2513:2531   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2502:2532   */\n      dup2\n      gt\n        /* \"#utility.yul\":2499:2549   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2542:2543   */\n      0x00\n        /* \"#utility.yul\":2535:2547   */\n      revert\n        /* \"#utility.yul\":2499:2549   */\n    tag_343:\n        /* \"#utility.yul\":2568:2590   */\n      dup7\n      add\n        /* \"#utility.yul\":2621:2625   */\n      0x1f\n        /* \"#utility.yul\":2613:2626   */\n      dup2\n      add\n        /* \"#utility.yul\":2609:2636   */\n      dup9\n      sgt\n        /* \"#utility.yul\":2599:2654   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":2650:2651   */\n      0x00\n        /* \"#utility.yul\":2647:2648   */\n      0x00\n        /* \"#utility.yul\":2640:2652   */\n      revert\n        /* \"#utility.yul\":2599:2654   */\n    tag_344:\n        /* \"#utility.yul\":2690:2692   */\n      dup1\n        /* \"#utility.yul\":2677:2693   */\n      calldataload\n        /* \"#utility.yul\":2716:2734   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2708:2714   */\n      dup2\n        /* \"#utility.yul\":2705:2735   */\n      gt\n        /* \"#utility.yul\":2702:2752   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      0x00\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2702:2752   */\n    tag_345:\n        /* \"#utility.yul\":2801:2808   */\n      dup9\n        /* \"#utility.yul\":2796:2798   */\n      0x20\n        /* \"#utility.yul\":2786:2792   */\n      dup3\n        /* \"#utility.yul\":2783:2784   */\n      0x05\n        /* \"#utility.yul\":2779:2793   */\n      shl\n        /* \"#utility.yul\":2775:2777   */\n      dup5\n        /* \"#utility.yul\":2771:2794   */\n      add\n        /* \"#utility.yul\":2767:2799   */\n      add\n        /* \"#utility.yul\":2764:2809   */\n      gt\n        /* \"#utility.yul\":2761:2826   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2822:2823   */\n      0x00\n        /* \"#utility.yul\":2819:2820   */\n      0x00\n        /* \"#utility.yul\":2812:2824   */\n      revert\n        /* \"#utility.yul\":2761:2826   */\n    tag_346:\n        /* \"#utility.yul\":2853:2855   */\n      0x20\n        /* \"#utility.yul\":2845:2856   */\n      swap2\n      swap1\n      swap2\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":2875:2881   */\n      swap3\n      pop\n        /* \"#utility.yul\":2900:2938   */\n      tag_347\n        /* \"#utility.yul\":2934:2936   */\n      0x40\n        /* \"#utility.yul\":2919:2937   */\n      dup8\n      add\n        /* \"#utility.yul\":2900:2938   */\n      tag_317\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2128:3047   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n      swap2\n      swap5\n        /* \"#utility.yul\":3011:3013   */\n      0x60\n        /* \"#utility.yul\":2996:3014   */\n      add\n        /* \"#utility.yul\":2983:3015   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":2128:3047   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3234:3361   */\n    tag_199:\n        /* \"#utility.yul\":3295:3305   */\n      0x4e487b71\n        /* \"#utility.yul\":3290:3293   */\n      0xe0\n        /* \"#utility.yul\":3286:3306   */\n      shl\n        /* \"#utility.yul\":3283:3284   */\n      0x00\n        /* \"#utility.yul\":3276:3307   */\n      mstore\n        /* \"#utility.yul\":3326:3330   */\n      0x41\n        /* \"#utility.yul\":3323:3324   */\n      0x04\n        /* \"#utility.yul\":3316:3331   */\n      mstore\n        /* \"#utility.yul\":3350:3354   */\n      0x24\n        /* \"#utility.yul\":3347:3348   */\n      0x00\n        /* \"#utility.yul\":3340:3355   */\n      revert\n        /* \"#utility.yul\":3366:3641   */\n    tag_318:\n        /* \"#utility.yul\":3437:3439   */\n      0x40\n        /* \"#utility.yul\":3431:3440   */\n      mload\n        /* \"#utility.yul\":3502:3504   */\n      0x1f\n        /* \"#utility.yul\":3483:3496   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3479:3506   */\n      and\n        /* \"#utility.yul\":3467:3507   */\n      dup2\n      add\n        /* \"#utility.yul\":3537:3555   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3522:3556   */\n      dup2\n      gt\n        /* \"#utility.yul\":3558:3580   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3519:3581   */\n      or\n        /* \"#utility.yul\":3516:3604   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":3584:3602   */\n      tag_352\n      tag_199\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":3620:3622   */\n      0x40\n        /* \"#utility.yul\":3613:3635   */\n      mstore\n        /* \"#utility.yul\":3366:3641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3646:3829   */\n    tag_319:\n        /* \"#utility.yul\":3706:3710   */\n      0x00\n        /* \"#utility.yul\":3739:3757   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3731:3737   */\n      dup3\n        /* \"#utility.yul\":3728:3758   */\n      gt\n        /* \"#utility.yul\":3725:3781   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":3761:3779   */\n      tag_355\n      tag_199\n      jump\t// in\n    tag_355:\n      pop\n        /* \"#utility.yul\":3806:3807   */\n      0x05\n        /* \"#utility.yul\":3802:3816   */\n      shl\n        /* \"#utility.yul\":3818:3822   */\n      0x20\n        /* \"#utility.yul\":3798:3823   */\n      add\n      swap1\n        /* \"#utility.yul\":3646:3829   */\n      jump\t// out\n        /* \"#utility.yul\":3834:4509   */\n    tag_320:\n        /* \"#utility.yul\":3888:3893   */\n      0x00\n        /* \"#utility.yul\":3941:3944   */\n      dup3\n        /* \"#utility.yul\":3934:3938   */\n      0x1f\n        /* \"#utility.yul\":3926:3932   */\n      dup4\n        /* \"#utility.yul\":3922:3939   */\n      add\n        /* \"#utility.yul\":3918:3945   */\n      slt\n        /* \"#utility.yul\":3908:3963   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3956:3957   */\n      0x00\n        /* \"#utility.yul\":3949:3961   */\n      revert\n        /* \"#utility.yul\":3908:3963   */\n    tag_357:\n        /* \"#utility.yul\":3999:4005   */\n      dup2\n        /* \"#utility.yul\":3986:4006   */\n      calldataload\n        /* \"#utility.yul\":4026:4090   */\n      tag_358\n        /* \"#utility.yul\":4042:4089   */\n      tag_359\n        /* \"#utility.yul\":4082:4088   */\n      dup3\n        /* \"#utility.yul\":4042:4089   */\n      tag_319\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4026:4090   */\n      tag_318\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4114:4117   */\n      dup1\n        /* \"#utility.yul\":4138:4144   */\n      dup3\n        /* \"#utility.yul\":4133:4136   */\n      dup3\n        /* \"#utility.yul\":4126:4145   */\n      mstore\n        /* \"#utility.yul\":4170:4174   */\n      0x20\n        /* \"#utility.yul\":4165:4168   */\n      dup3\n        /* \"#utility.yul\":4161:4175   */\n      add\n        /* \"#utility.yul\":4154:4175   */\n      swap2\n      pop\n        /* \"#utility.yul\":4231:4235   */\n      0x20\n        /* \"#utility.yul\":4221:4227   */\n      dup4\n        /* \"#utility.yul\":4218:4219   */\n      0x05\n        /* \"#utility.yul\":4214:4228   */\n      shl\n        /* \"#utility.yul\":4206:4212   */\n      dup7\n        /* \"#utility.yul\":4202:4229   */\n      add\n        /* \"#utility.yul\":4198:4236   */\n      add\n        /* \"#utility.yul\":4184:4236   */\n      swap3\n      pop\n        /* \"#utility.yul\":4259:4262   */\n      dup6\n        /* \"#utility.yul\":4251:4257   */\n      dup4\n        /* \"#utility.yul\":4248:4263   */\n      gt\n        /* \"#utility.yul\":4245:4280   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":4276:4277   */\n      0x00\n        /* \"#utility.yul\":4273:4274   */\n      0x00\n        /* \"#utility.yul\":4266:4278   */\n      revert\n        /* \"#utility.yul\":4245:4280   */\n    tag_360:\n        /* \"#utility.yul\":4312:4316   */\n      0x20\n        /* \"#utility.yul\":4304:4310   */\n      dup6\n        /* \"#utility.yul\":4300:4317   */\n      add\n        /* \"#utility.yul\":4326:4478   */\n    tag_361:\n        /* \"#utility.yul\":4342:4348   */\n      dup4\n        /* \"#utility.yul\":4337:4340   */\n      dup2\n        /* \"#utility.yul\":4334:4349   */\n      lt\n        /* \"#utility.yul\":4326:4478   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":4410:4433   */\n      tag_364\n        /* \"#utility.yul\":4429:4432   */\n      dup2\n        /* \"#utility.yul\":4410:4433   */\n      tag_317\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4398:4434   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4463:4467   */\n      0x20\n        /* \"#utility.yul\":4454:4468   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":4359:4373   */\n      add\n        /* \"#utility.yul\":4326:4478   */\n      jump(tag_361)\n    tag_363:\n      pop\n        /* \"#utility.yul\":4496:4503   */\n      swap6\n        /* \"#utility.yul\":3834:4509   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4514:4976   */\n    tag_87:\n        /* \"#utility.yul\":4607:4613   */\n      0x00\n        /* \"#utility.yul\":4615:4621   */\n      0x00\n        /* \"#utility.yul\":4668:4670   */\n      0x40\n        /* \"#utility.yul\":4656:4665   */\n      dup4\n        /* \"#utility.yul\":4647:4654   */\n      dup6\n        /* \"#utility.yul\":4643:4666   */\n      sub\n        /* \"#utility.yul\":4639:4671   */\n      slt\n        /* \"#utility.yul\":4636:4688   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":4684:4685   */\n      0x00\n        /* \"#utility.yul\":4681:4682   */\n      0x00\n        /* \"#utility.yul\":4674:4686   */\n      revert\n        /* \"#utility.yul\":4636:4688   */\n    tag_366:\n        /* \"#utility.yul\":4729:4752   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4827:4829   */\n      0x20\n        /* \"#utility.yul\":4812:4830   */\n      dup4\n      add\n        /* \"#utility.yul\":4799:4831   */\n      calldataload\n        /* \"#utility.yul\":4854:4872   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4843:4873   */\n      dup2\n      gt\n        /* \"#utility.yul\":4840:4890   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":4886:4887   */\n      0x00\n        /* \"#utility.yul\":4883:4884   */\n      0x00\n        /* \"#utility.yul\":4876:4888   */\n      revert\n        /* \"#utility.yul\":4840:4890   */\n    tag_367:\n        /* \"#utility.yul\":4909:4970   */\n      tag_368\n        /* \"#utility.yul\":4962:4969   */\n      dup6\n        /* \"#utility.yul\":4953:4959   */\n      dup3\n        /* \"#utility.yul\":4942:4951   */\n      dup7\n        /* \"#utility.yul\":4938:4960   */\n      add\n        /* \"#utility.yul\":4909:4970   */\n      tag_320\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4899:4970   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4514:4976   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4981:5592   */\n    tag_90:\n        /* \"#utility.yul\":5171:5173   */\n      0x20\n        /* \"#utility.yul\":5183:5204   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5253:5266   */\n      dup3\n      mload\n        /* \"#utility.yul\":5156:5174   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":5275:5297   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5123:5127   */\n      0x00\n      swap2\n        /* \"#utility.yul\":5354:5369   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":5328:5330   */\n      0x40\n        /* \"#utility.yul\":5313:5331   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":5123:5127   */\n      dup4\n        /* \"#utility.yul\":5397:5566   */\n    tag_370:\n        /* \"#utility.yul\":5411:5417   */\n      dup2\n        /* \"#utility.yul\":5408:5409   */\n      dup2\n        /* \"#utility.yul\":5405:5418   */\n      lt\n        /* \"#utility.yul\":5397:5566   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":5472:5485   */\n      dup4\n      mload\n        /* \"#utility.yul\":5460:5486   */\n      dup4\n      mstore\n        /* \"#utility.yul\":5515:5517   */\n      0x20\n        /* \"#utility.yul\":5541:5556   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":5506:5518   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":5433:5434   */\n      0x01\n        /* \"#utility.yul\":5426:5435   */\n      add\n        /* \"#utility.yul\":5397:5566   */\n      jump(tag_370)\n    tag_372:\n      pop\n        /* \"#utility.yul\":5583:5586   */\n      swap1\n      swap6\n        /* \"#utility.yul\":4981:5592   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5876:7300   */\n    tag_104:\n        /* \"#utility.yul\":6028:6034   */\n      0x00\n        /* \"#utility.yul\":6036:6042   */\n      0x00\n        /* \"#utility.yul\":6044:6050   */\n      0x00\n        /* \"#utility.yul\":6097:6099   */\n      0x60\n        /* \"#utility.yul\":6085:6094   */\n      dup5\n        /* \"#utility.yul\":6076:6083   */\n      dup7\n        /* \"#utility.yul\":6072:6095   */\n      sub\n        /* \"#utility.yul\":6068:6100   */\n      slt\n        /* \"#utility.yul\":6065:6117   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":6113:6114   */\n      0x00\n        /* \"#utility.yul\":6110:6111   */\n      0x00\n        /* \"#utility.yul\":6103:6115   */\n      revert\n        /* \"#utility.yul\":6065:6117   */\n    tag_375:\n        /* \"#utility.yul\":6153:6162   */\n      dup4\n        /* \"#utility.yul\":6140:6163   */\n      calldataload\n        /* \"#utility.yul\":6186:6204   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6178:6184   */\n      dup2\n        /* \"#utility.yul\":6175:6205   */\n      gt\n        /* \"#utility.yul\":6172:6222   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":6218:6219   */\n      0x00\n        /* \"#utility.yul\":6215:6216   */\n      0x00\n        /* \"#utility.yul\":6208:6220   */\n      revert\n        /* \"#utility.yul\":6172:6222   */\n    tag_376:\n        /* \"#utility.yul\":6241:6302   */\n      tag_377\n        /* \"#utility.yul\":6294:6301   */\n      dup7\n        /* \"#utility.yul\":6285:6291   */\n      dup3\n        /* \"#utility.yul\":6274:6283   */\n      dup8\n        /* \"#utility.yul\":6270:6292   */\n      add\n        /* \"#utility.yul\":6241:6302   */\n      tag_320\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":6231:6302   */\n      swap4\n      pop\n      pop\n        /* \"#utility.yul\":6355:6357   */\n      0x20\n        /* \"#utility.yul\":6344:6353   */\n      dup5\n        /* \"#utility.yul\":6340:6358   */\n      add\n        /* \"#utility.yul\":6327:6359   */\n      calldataload\n        /* \"#utility.yul\":6384:6402   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6374:6382   */\n      dup2\n        /* \"#utility.yul\":6371:6403   */\n      gt\n        /* \"#utility.yul\":6368:6420   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":6416:6417   */\n      0x00\n        /* \"#utility.yul\":6413:6414   */\n      0x00\n        /* \"#utility.yul\":6406:6418   */\n      revert\n        /* \"#utility.yul\":6368:6420   */\n    tag_378:\n        /* \"#utility.yul\":6439:6502   */\n      tag_379\n        /* \"#utility.yul\":6494:6501   */\n      dup7\n        /* \"#utility.yul\":6483:6491   */\n      dup3\n        /* \"#utility.yul\":6472:6481   */\n      dup8\n        /* \"#utility.yul\":6468:6492   */\n      add\n        /* \"#utility.yul\":6439:6502   */\n      tag_320\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6429:6502   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6555:6557   */\n      0x40\n        /* \"#utility.yul\":6544:6553   */\n      dup5\n        /* \"#utility.yul\":6540:6558   */\n      add\n        /* \"#utility.yul\":6527:6559   */\n      calldataload\n        /* \"#utility.yul\":6584:6602   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6574:6582   */\n      dup2\n        /* \"#utility.yul\":6571:6603   */\n      gt\n        /* \"#utility.yul\":6568:6620   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6616:6617   */\n      0x00\n        /* \"#utility.yul\":6613:6614   */\n      0x00\n        /* \"#utility.yul\":6606:6618   */\n      revert\n        /* \"#utility.yul\":6568:6620   */\n    tag_380:\n        /* \"#utility.yul\":6639:6663   */\n      dup5\n      add\n        /* \"#utility.yul\":6694:6698   */\n      0x1f\n        /* \"#utility.yul\":6686:6699   */\n      dup2\n      add\n        /* \"#utility.yul\":6682:6709   */\n      dup7\n      sgt\n        /* \"#utility.yul\":6672:6727   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":6723:6724   */\n      0x00\n        /* \"#utility.yul\":6720:6721   */\n      0x00\n        /* \"#utility.yul\":6713:6725   */\n      revert\n        /* \"#utility.yul\":6672:6727   */\n    tag_381:\n        /* \"#utility.yul\":6763:6765   */\n      dup1\n        /* \"#utility.yul\":6750:6766   */\n      calldataload\n        /* \"#utility.yul\":6786:6850   */\n      tag_382\n        /* \"#utility.yul\":6802:6849   */\n      tag_359\n        /* \"#utility.yul\":6842:6848   */\n      dup3\n        /* \"#utility.yul\":6802:6849   */\n      tag_319\n      jump\t// in\n        /* \"#utility.yul\":6786:6850   */\n    tag_382:\n        /* \"#utility.yul\":6872:6875   */\n      dup1\n        /* \"#utility.yul\":6896:6902   */\n      dup3\n        /* \"#utility.yul\":6891:6894   */\n      dup3\n        /* \"#utility.yul\":6884:6903   */\n      mstore\n        /* \"#utility.yul\":6928:6930   */\n      0x20\n        /* \"#utility.yul\":6923:6926   */\n      dup3\n        /* \"#utility.yul\":6919:6931   */\n      add\n        /* \"#utility.yul\":6912:6931   */\n      swap2\n      pop\n        /* \"#utility.yul\":6983:6985   */\n      0x20\n        /* \"#utility.yul\":6973:6979   */\n      dup4\n        /* \"#utility.yul\":6970:6971   */\n      0x05\n        /* \"#utility.yul\":6966:6980   */\n      shl\n        /* \"#utility.yul\":6962:6964   */\n      dup6\n        /* \"#utility.yul\":6958:6981   */\n      add\n        /* \"#utility.yul\":6954:6986   */\n      add\n        /* \"#utility.yul\":6940:6986   */\n      swap3\n      pop\n        /* \"#utility.yul\":7009:7016   */\n      dup9\n        /* \"#utility.yul\":7001:7007   */\n      dup4\n        /* \"#utility.yul\":6998:7017   */\n      gt\n        /* \"#utility.yul\":6995:7034   */\n      iszero\n      tag_384\n      jumpi\n        /* \"#utility.yul\":7030:7031   */\n      0x00\n        /* \"#utility.yul\":7027:7028   */\n      0x00\n        /* \"#utility.yul\":7020:7032   */\n      revert\n        /* \"#utility.yul\":6995:7034   */\n    tag_384:\n        /* \"#utility.yul\":7062:7064   */\n      0x20\n        /* \"#utility.yul\":7058:7060   */\n      dup5\n        /* \"#utility.yul\":7054:7065   */\n      add\n        /* \"#utility.yul\":7043:7065   */\n      swap4\n      pop\n        /* \"#utility.yul\":7074:7270   */\n    tag_385:\n        /* \"#utility.yul\":7090:7096   */\n      dup3\n        /* \"#utility.yul\":7085:7088   */\n      dup5\n        /* \"#utility.yul\":7082:7097   */\n      lt\n        /* \"#utility.yul\":7074:7270   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":7180:7197   */\n      dup4\n      calldataload\n        /* \"#utility.yul\":7210:7228   */\n      dup3\n      mstore\n        /* \"#utility.yul\":7257:7259   */\n      0x20\n        /* \"#utility.yul\":7107:7119   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":7248:7260   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":7074:7270   */\n      jump(tag_385)\n    tag_387:\n        /* \"#utility.yul\":7289:7294   */\n      dup1\n        /* \"#utility.yul\":7279:7294   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5876:7300   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7305:7679   */\n    tag_109:\n        /* \"#utility.yul\":7382:7388   */\n      0x00\n        /* \"#utility.yul\":7390:7396   */\n      0x00\n        /* \"#utility.yul\":7398:7404   */\n      0x00\n        /* \"#utility.yul\":7451:7453   */\n      0x60\n        /* \"#utility.yul\":7439:7448   */\n      dup5\n        /* \"#utility.yul\":7430:7437   */\n      dup7\n        /* \"#utility.yul\":7426:7449   */\n      sub\n        /* \"#utility.yul\":7422:7454   */\n      slt\n        /* \"#utility.yul\":7419:7471   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":7467:7468   */\n      0x00\n        /* \"#utility.yul\":7464:7465   */\n      0x00\n        /* \"#utility.yul\":7457:7469   */\n      revert\n        /* \"#utility.yul\":7419:7471   */\n    tag_389:\n        /* \"#utility.yul\":7490:7519   */\n      tag_390\n        /* \"#utility.yul\":7509:7518   */\n      dup5\n        /* \"#utility.yul\":7490:7519   */\n      tag_317\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":7480:7519   */\n      swap3\n      pop\n        /* \"#utility.yul\":7538:7576   */\n      tag_391\n        /* \"#utility.yul\":7572:7574   */\n      0x20\n        /* \"#utility.yul\":7561:7570   */\n      dup6\n        /* \"#utility.yul\":7557:7575   */\n      add\n        /* \"#utility.yul\":7538:7576   */\n      tag_317\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":7305:7679   */\n      swap3\n      swap6\n        /* \"#utility.yul\":7528:7576   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7645:7647   */\n      0x40\n        /* \"#utility.yul\":7630:7648   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7617:7649   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":7305:7679   */\n      jump\t// out\n        /* \"#utility.yul\":8100:8227   */\n    tag_139:\n        /* \"#utility.yul\":8161:8171   */\n      0x4e487b71\n        /* \"#utility.yul\":8156:8159   */\n      0xe0\n        /* \"#utility.yul\":8152:8172   */\n      shl\n        /* \"#utility.yul\":8149:8150   */\n      0x00\n        /* \"#utility.yul\":8142:8173   */\n      mstore\n        /* \"#utility.yul\":8192:8196   */\n      0x32\n        /* \"#utility.yul\":8189:8190   */\n      0x04\n        /* \"#utility.yul\":8182:8197   */\n      mstore\n        /* \"#utility.yul\":8216:8220   */\n      0x24\n        /* \"#utility.yul\":8213:8214   */\n      0x00\n        /* \"#utility.yul\":8206:8221   */\n      revert\n        /* \"#utility.yul\":9660:9844   */\n    tag_165:\n        /* \"#utility.yul\":9730:9736   */\n      0x00\n        /* \"#utility.yul\":9783:9785   */\n      0x20\n        /* \"#utility.yul\":9771:9780   */\n      dup3\n        /* \"#utility.yul\":9762:9769   */\n      dup5\n        /* \"#utility.yul\":9758:9781   */\n      sub\n        /* \"#utility.yul\":9754:9786   */\n      slt\n        /* \"#utility.yul\":9751:9803   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":9799:9800   */\n      0x00\n        /* \"#utility.yul\":9796:9797   */\n      0x00\n        /* \"#utility.yul\":9789:9801   */\n      revert\n        /* \"#utility.yul\":9751:9803   */\n    tag_399:\n      pop\n        /* \"#utility.yul\":9822:9838   */\n      mload\n      swap2\n        /* \"#utility.yul\":9660:9844   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10541:10818   */\n    tag_180:\n        /* \"#utility.yul\":10608:10614   */\n      0x00\n        /* \"#utility.yul\":10661:10663   */\n      0x20\n        /* \"#utility.yul\":10649:10658   */\n      dup3\n        /* \"#utility.yul\":10640:10647   */\n      dup5\n        /* \"#utility.yul\":10636:10659   */\n      sub\n        /* \"#utility.yul\":10632:10664   */\n      slt\n        /* \"#utility.yul\":10629:10681   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":10677:10678   */\n      0x00\n        /* \"#utility.yul\":10674:10675   */\n      0x00\n        /* \"#utility.yul\":10667:10679   */\n      revert\n        /* \"#utility.yul\":10629:10681   */\n    tag_403:\n        /* \"#utility.yul\":10709:10718   */\n      dup2\n        /* \"#utility.yul\":10703:10719   */\n      mload\n        /* \"#utility.yul\":10762:10767   */\n      dup1\n        /* \"#utility.yul\":10755:10768   */\n      iszero\n        /* \"#utility.yul\":10748:10769   */\n      iszero\n        /* \"#utility.yul\":10741:10746   */\n      dup2\n        /* \"#utility.yul\":10738:10770   */\n      eq\n        /* \"#utility.yul\":10728:10788   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":10784:10785   */\n      0x00\n        /* \"#utility.yul\":10781:10782   */\n      0x00\n        /* \"#utility.yul\":10774:10786   */\n      revert\n        /* \"#utility.yul\":12040:12167   */\n    tag_321:\n        /* \"#utility.yul\":12101:12111   */\n      0x4e487b71\n        /* \"#utility.yul\":12096:12099   */\n      0xe0\n        /* \"#utility.yul\":12092:12112   */\n      shl\n        /* \"#utility.yul\":12089:12090   */\n      0x00\n        /* \"#utility.yul\":12082:12113   */\n      mstore\n        /* \"#utility.yul\":12132:12136   */\n      0x11\n        /* \"#utility.yul\":12129:12130   */\n      0x04\n        /* \"#utility.yul\":12122:12137   */\n      mstore\n        /* \"#utility.yul\":12156:12160   */\n      0x24\n        /* \"#utility.yul\":12153:12154   */\n      0x00\n        /* \"#utility.yul\":12146:12161   */\n      revert\n        /* \"#utility.yul\":12172:12300   */\n    tag_207:\n        /* \"#utility.yul\":12239:12248   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":12260:12271   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":12257:12294   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":12274:12292   */\n      tag_113\n      tag_321\n      jump\t// in\n        /* \"#utility.yul\":12305:12430   */\n    tag_209:\n        /* \"#utility.yul\":12370:12379   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12391:12401   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12388:12424   */\n      iszero\n      tag_113\n      jumpi\n        /* \"#utility.yul\":12404:12422   */\n      tag_113\n      tag_321\n      jump\t// in\n        /* \"#utility.yul\":12435:12603   */\n    tag_220:\n        /* \"#utility.yul\":12508:12517   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12539:12548   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12556:12571   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12550:12572   */\n      dup5\n      eq\n        /* \"#utility.yul\":12536:12573   */\n      or\n        /* \"#utility.yul\":12526:12597   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":12577:12595   */\n      tag_113\n      tag_321\n      jump\t// in\n        /* \"#utility.yul\":12608:12825   */\n    tag_222:\n        /* \"#utility.yul\":12648:12649   */\n      0x00\n        /* \"#utility.yul\":12674:12675   */\n      dup3\n        /* \"#utility.yul\":12664:12796   */\n      tag_419\n      jumpi\n        /* \"#utility.yul\":12718:12728   */\n      0x4e487b71\n        /* \"#utility.yul\":12713:12716   */\n      0xe0\n        /* \"#utility.yul\":12709:12729   */\n      shl\n        /* \"#utility.yul\":12706:12707   */\n      0x00\n        /* \"#utility.yul\":12699:12730   */\n      mstore\n        /* \"#utility.yul\":12753:12757   */\n      0x12\n        /* \"#utility.yul\":12750:12751   */\n      0x04\n        /* \"#utility.yul\":12743:12758   */\n      mstore\n        /* \"#utility.yul\":12781:12785   */\n      0x24\n        /* \"#utility.yul\":12778:12779   */\n      0x00\n        /* \"#utility.yul\":12771:12786   */\n      revert\n        /* \"#utility.yul\":12664:12796   */\n    tag_419:\n      pop\n        /* \"#utility.yul\":12810:12819   */\n      div\n      swap1\n        /* \"#utility.yul\":12608:12825   */\n      jump\t// out\n        /* \"#utility.yul\":13309:13521   */\n    tag_322:\n        /* \"#utility.yul\":13351:13354   */\n      0x00\n        /* \"#utility.yul\":13389:13394   */\n      dup2\n        /* \"#utility.yul\":13383:13395   */\n      mload\n        /* \"#utility.yul\":13433:13439   */\n      dup1\n        /* \"#utility.yul\":13426:13430   */\n      0x20\n        /* \"#utility.yul\":13419:13424   */\n      dup5\n        /* \"#utility.yul\":13415:13431   */\n      add\n        /* \"#utility.yul\":13410:13413   */\n      dup6\n        /* \"#utility.yul\":13404:13440   */\n      mcopy\n        /* \"#utility.yul\":13495:13496   */\n      0x00\n        /* \"#utility.yul\":13459:13475   */\n      swap4\n      add\n        /* \"#utility.yul\":13484:13497   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":13459:13475   */\n      swap1\n      swap2\n        /* \"#utility.yul\":13309:13521   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13526:14121   */\n    tag_288:\n        /* \"#utility.yul\":13937:13962   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":13932:13935   */\n      dup2\n        /* \"#utility.yul\":13925:13963   */\n      mstore\n        /* \"#utility.yul\":13907:13910   */\n      0x00\n        /* \"#utility.yul\":13982:14021   */\n      tag_423\n        /* \"#utility.yul\":14017:14019   */\n      0x17\n        /* \"#utility.yul\":14012:14015   */\n      dup4\n        /* \"#utility.yul\":14008:14020   */\n      add\n        /* \"#utility.yul\":14000:14006   */\n      dup6\n        /* \"#utility.yul\":13982:14021   */\n      tag_322\n      jump\t// in\n    tag_423:\n      shl(0x7d, 0x01034b99036b4b9b9b4b733903937b6329)\n        /* \"#utility.yul\":14037:14039   */\n      dup2\n        /* \"#utility.yul\":14030:14061   */\n      mstore\n        /* \"#utility.yul\":14077:14115   */\n      tag_424\n        /* \"#utility.yul\":14111:14113   */\n      0x11\n        /* \"#utility.yul\":14107:14109   */\n      dup3\n        /* \"#utility.yul\":14103:14114   */\n      add\n        /* \"#utility.yul\":14095:14101   */\n      dup6\n        /* \"#utility.yul\":14077:14115   */\n      tag_322\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":14070:14115   */\n      swap6\n        /* \"#utility.yul\":13526:14121   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14126:14544   */\n    tag_290:\n        /* \"#utility.yul\":14275:14277   */\n      0x20\n        /* \"#utility.yul\":14264:14273   */\n      dup2\n        /* \"#utility.yul\":14257:14278   */\n      mstore\n        /* \"#utility.yul\":14238:14242   */\n      0x00\n        /* \"#utility.yul\":14307:14313   */\n      dup3\n        /* \"#utility.yul\":14301:14314   */\n      mload\n        /* \"#utility.yul\":14350:14356   */\n      dup1\n        /* \"#utility.yul\":14345:14347   */\n      0x20\n        /* \"#utility.yul\":14334:14343   */\n      dup5\n        /* \"#utility.yul\":14330:14348   */\n      add\n        /* \"#utility.yul\":14323:14357   */\n      mstore\n        /* \"#utility.yul\":14409:14415   */\n      dup1\n        /* \"#utility.yul\":14404:14406   */\n      0x20\n        /* \"#utility.yul\":14396:14402   */\n      dup6\n        /* \"#utility.yul\":14392:14407   */\n      add\n        /* \"#utility.yul\":14387:14389   */\n      0x40\n        /* \"#utility.yul\":14376:14385   */\n      dup6\n        /* \"#utility.yul\":14372:14390   */\n      add\n        /* \"#utility.yul\":14366:14416   */\n      mcopy\n        /* \"#utility.yul\":14465:14466   */\n      0x00\n        /* \"#utility.yul\":14460:14462   */\n      0x40\n        /* \"#utility.yul\":14451:14457   */\n      dup3\n        /* \"#utility.yul\":14440:14449   */\n      dup6\n        /* \"#utility.yul\":14436:14458   */\n      add\n        /* \"#utility.yul\":14432:14463   */\n      add\n        /* \"#utility.yul\":14425:14467   */\n      mstore\n        /* \"#utility.yul\":14535:14537   */\n      0x40\n        /* \"#utility.yul\":14528:14530   */\n      0x1f\n        /* \"#utility.yul\":14524:14531   */\n      not\n        /* \"#utility.yul\":14519:14521   */\n      0x1f\n        /* \"#utility.yul\":14511:14517   */\n      dup4\n        /* \"#utility.yul\":14507:14522   */\n      add\n        /* \"#utility.yul\":14503:14532   */\n      and\n        /* \"#utility.yul\":14492:14501   */\n      dup5\n        /* \"#utility.yul\":14488:14533   */\n      add\n        /* \"#utility.yul\":14484:14538   */\n      add\n        /* \"#utility.yul\":14476:14538   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14126:14544   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14549:14685   */\n    tag_313:\n        /* \"#utility.yul\":14588:14591   */\n      0x00\n        /* \"#utility.yul\":14616:14621   */\n      dup2\n        /* \"#utility.yul\":14606:14645   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":14625:14643   */\n      tag_428\n      tag_321\n      jump\t// in\n    tag_428:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":14661:14679   */\n      add\n      swap1\n        /* \"#utility.yul\":14549:14685   */\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b6f335f6f2fb06d29afe929f916428c8161d67a46e67dc1bd46f41021501803b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2321": {
									"entryPoint": null,
									"id": 2321,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_299": {
									"entryPoint": 223,
									"id": 299,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_936": {
									"entryPoint": 219,
									"id": 936,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_95": {
									"entryPoint": null,
									"id": 95,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:306:11",
										"nodeType": "YulBlock",
										"src": "0:306:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:11",
													"nodeType": "YulBlock",
													"src": "95:209:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:11",
																"nodeType": "YulBlock",
																"src": "141:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:11",
																					"nodeType": "YulLiteral",
																					"src": "150:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:11",
																					"nodeType": "YulLiteral",
																					"src": "153:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:11"
																			},
																			"nativeSrc": "143:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:11"
																		},
																		"nativeSrc": "143:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:11"
																		},
																		"nativeSrc": "112:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:11",
																		"nodeType": "YulLiteral",
																		"src": "137:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:11"
																},
																"nativeSrc": "108:32:11",
																"nodeType": "YulFunctionCall",
																"src": "108:32:11"
															},
															"nativeSrc": "105:52:11",
															"nodeType": "YulIf",
															"src": "105:52:11"
														},
														{
															"nativeSrc": "166:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:11"
																},
																"nativeSrc": "179:16:11",
																"nodeType": "YulFunctionCall",
																"src": "179:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:11",
																	"nodeType": "YulTypedName",
																	"src": "170:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:11",
																"nodeType": "YulBlock",
																"src": "258:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:11",
																					"nodeType": "YulLiteral",
																					"src": "267:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:11",
																					"nodeType": "YulLiteral",
																					"src": "270:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:11"
																			},
																			"nativeSrc": "260:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:11"
																		},
																		"nativeSrc": "260:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:11",
																										"nodeType": "YulLiteral",
																										"src": "243:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:11",
																										"nodeType": "YulLiteral",
																										"src": "248:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:11"
																								},
																								"nativeSrc": "239:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:11",
																								"nodeType": "YulLiteral",
																								"src": "252:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:11"
																						},
																						"nativeSrc": "235:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:11"
																				},
																				"nativeSrc": "224:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:11"
																		},
																		"nativeSrc": "214:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:11"
																},
																"nativeSrc": "207:50:11",
																"nodeType": "YulFunctionCall",
																"src": "207:50:11"
															},
															"nativeSrc": "204:70:11",
															"nodeType": "YulIf",
															"src": "204:70:11"
														},
														{
															"nativeSrc": "283:15:11",
															"nodeType": "YulAssignment",
															"src": "283:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:11",
																"nodeType": "YulIdentifier",
																"src": "293:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:11",
														"nodeType": "YulTypedName",
														"src": "61:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:11",
														"nodeType": "YulTypedName",
														"src": "72:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:11",
														"nodeType": "YulTypedName",
														"src": "84:6:11",
														"type": ""
													}
												],
												"src": "14:290:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405234801561000f575f5ffd5b50604051611a65380380611a6583398101604081905261002e91610180565b6001600160a01b0381166080526100455f336100df565b61006f7fa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e336100df565b6040518060400160405280670de0b6b3a764000081526020016100966100db60201b60201c565b6001600160a01b039081169091529182165f90815260976020908152604090912082518155910151600190910180546001600160a01b031916919092161790556101ad565b3390565b5f8281526065602090815260408083206001600160a01b038516845290915290205460ff1661017c575f8281526065602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561013b3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f60208284031215610190575f5ffd5b81516001600160a01b03811681146101a6575f5ffd5b9392505050565b60805161187d6101e85f395f8181610275015281816102bd0152818161054a01528181610870015281816108e00152610bfb015261187d5ff3fe6080604052600436106100fa575f3560e01c8063affa881711610092578063d06ca61f11610062578063d06ca61f1461035b578063d547741f14610387578063dd4be683146103a6578063eb71f7e6146103fe578063fa1c631b1461041d575f5ffd5b8063affa8817146102af578063b6f9de95146102e1578063cf0888aa146102f4578063d02641a014610327575f5ffd5b806388aa8bee116100cd57806388aa8bee146101ae57806391d1485414610232578063a217fddf14610251578063ad5c464814610264575f5ffd5b806301ffc9a7146100fe578063248a9ca3146101325780632f2ff15d1461016e57806336568abe1461018f575b5f5ffd5b348015610109575f5ffd5b5061011d610118366004611320565b61043c565b60405190151581526020015b60405180910390f35b34801561013d575f5ffd5b5061016061014c366004611347565b5f9081526065602052604090206001015490565b604051908152602001610129565b348015610179575f5ffd5b5061018d610188366004611379565b610472565b005b34801561019a575f5ffd5b5061018d6101a9366004611379565b61049b565b3480156101b9575f5ffd5b5061020e6101c83660046113a3565b6040805180820182525f80825260209182018190526001600160a01b03938416815260978252829020825180840190935280548352600101549092169181019190915290565b60408051825181526020928301516001600160a01b03169281019290925201610129565b34801561023d575f5ffd5b5061011d61024c366004611379565b61051e565b34801561025c575f5ffd5b506101605f81565b34801561026f575f5ffd5b506102977f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610129565b3480156102ba575f5ffd5b507f0000000000000000000000000000000000000000000000000000000000000000610297565b61018d6102ef3660046113bc565b610548565b3480156102ff575f5ffd5b506101607fa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e81565b348015610332575f5ffd5b506101606103413660046113a3565b6001600160a01b03165f9081526097602052604090205490565b348015610366575f5ffd5b5061037a610375366004611527565b610a52565b604051610129919061156b565b348015610392575f5ffd5b5061018d6103a1366004611379565b610e0d565b3480156103b1575f5ffd5b506103e16103c03660046113a3565b60976020525f9081526040902080546001909101546001600160a01b031682565b604080519283526001600160a01b03909116602083015201610129565b348015610409575f5ffd5b5061018d6104183660046115ad565b610e31565b348015610428575f5ffd5b5061018d610437366004611694565b610fa5565b5f6001600160e01b03198216637965db0b60e01b148061046c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f8281526065602052604090206001015461048c81611020565b610496838361102d565b505050565b6001600160a01b03811633146105105760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61051a82826110b2565b5050565b5f9182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684845f818110610584576105846116ce565b905060200201602081019061059991906113a3565b6001600160a01b0316146105ef5760405162461bcd60e51b815260206004820152601d60248201527f556e69737761705632526f757465723a20494e56414c49445f504154480000006044820152606401610507565b4281101561063f5760405162461bcd60e51b815260206004820152601860248201527f556e69737761705632526f757465723a204558504952454400000000000000006044820152606401610507565b5f3490505f610680828787808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250610a5292505050565b600181518110610692576106926116ce565b602002602001015190505f811180156106ab5750868110155b61070b5760405162461bcd60e51b815260206004820152602b60248201527f556e69737761705632526f757465723a20494e53554646494349454e545f4f5560448201526a1514155517d05353d5539560aa1b6064820152608401610507565b5f60975f88886001818110610722576107226116ce565b905060200201602081019061073791906113a3565b6001600160a01b03166001600160a01b031681526020019081526020015f206001015f9054906101000a90046001600160a01b031690505f87876001818110610782576107826116ce565b905060200201602081019061079791906113a3565b604051636eb1769f60e11b81526001600160a01b038481166004830152306024830152919091169063dd62ed3e90604401602060405180830381865afa1580156107e3573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080791906116e2565b90508281101561086e5760405162461bcd60e51b815260206004820152602c60248201527f556e69737761705632526f757465723a20494e53554646494349454e545f414d60448201526b13d5539517d0531313d5d15160a21b6064820152608401610507565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004015f604051808303818588803b1580156108c7575f5ffd5b505af11580156108d9573d5f5f3e3d5ffd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb89896001818110610920576109206116ce565b905060200201602081019061093591906113a3565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303815f875af115801561097f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109a391906116f9565b50878760018181106109b7576109b76116ce565b90506020020160208101906109cc91906113a3565b6040516323b872dd60e01b81526001600160a01b03848116600483015288811660248301526044820186905291909116906323b872dd906064016020604051808303815f875af1158015610a22573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a4691906116f9565b50505050505050505050565b60605f8311610ac15760405162461bcd60e51b815260206004820152603560248201527f556e69737761705632526f757465723a20616d6f756e74496e2073686f756c646044820152742062652067726561746572207468616e207a65726f60581b6064820152608401610507565b600282511015610b2e5760405162461bcd60e51b815260206004820152603260248201527f556e69737761705632526f757465723a207061746820636f6e7461696e73206160448201527174206c65617374203220656c656d656e747360701b6064820152608401610507565b815167ffffffffffffffff811115610b4857610b4861144e565b604051908082528060200260200182016040528015610b71578160200160208202803683370190505b50905082815f81518110610b8757610b876116ce565b6020026020010181815250505f5b60018351610ba3919061172c565b811015610e065760975f84610bb984600161173f565b81518110610bc957610bc96116ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f01545f14610dd4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316835f81518110610c3557610c356116ce565b60200260200101516001600160a01b031603610cdf5760975f84610c5a84600161173f565b81518110610c6a57610c6a6116ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f015484670de0b6b3a7640000610ca89190611752565b610cb29190611769565b82610cbe83600161173f565b81518110610cce57610cce6116ce565b602002602001018181525050610dfe565b5f670de0b6b3a764000060975f865f81518110610cfe57610cfe6116ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f015486670de0b6b3a7640000610d3c9190611752565b610d469190611752565b610d509190611769565b905060975f85610d6185600161173f565b81518110610d7157610d716116ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f015481610da69190611769565b83610db284600161173f565b81518110610dc257610dc26116ce565b60200260200101818152505050610dfe565b5f82610de183600161173f565b81518110610df157610df16116ce565b6020026020010181815250505b600101610b95565b5092915050565b5f82815260656020526040902060010154610e2781611020565b61049683836110b2565b7fa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e610e5b81611020565b601e84511115610ee25760405162461bcd60e51b815260206004820152604660248201527f556e69737761705632526f757465723a20546f6b656e7320617272617920697360448201527f20746f6f206c6f6e672c2072656475636520746865206e756d626572206f6620606482015265746f6b656e7360d01b608482015260a401610507565b5f5b8451811015610f9e576040518060400160405280848381518110610f0a57610f0a6116ce565b60200260200101518152602001858381518110610f2957610f296116ce565b60200260200101516001600160a01b031681525060975f878481518110610f5257610f526116ce565b6020908102919091018101516001600160a01b0390811683528282019390935260409091015f2083518155920151600192830180546001600160a01b0319169190921617905501610ee4565b5050505050565b7fa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e610fcf81611020565b506040805180820182529182526001600160a01b0392831660208084019182529484165f90815260979095529320905181559151600190920180546001600160a01b03191692909116919091179055565b61102a8133611118565b50565b611037828261051e565b61051a575f8281526065602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561106e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6110bc828261051e565b1561051a575f8281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611122828261051e565b61051a5761112f81611171565b61113a836020611183565b60405160200161114b92919061179f565b60408051601f198184030181529082905262461bcd60e51b8252610507916004016117fd565b606061046c6001600160a01b03831660145b60605f611191836002611752565b61119c90600261173f565b67ffffffffffffffff8111156111b4576111b461144e565b6040519080825280601f01601f1916602001820160405280156111de576020820181803683370190505b509050600360fc1b815f815181106111f8576111f86116ce565b60200101906001600160f81b03191690815f1a905350600f60fb1b81600181518110611226576112266116ce565b60200101906001600160f81b03191690815f1a9053505f611248846002611752565b61125390600161173f565b90505b60018111156112ca576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611287576112876116ce565b1a60f81b82828151811061129d5761129d6116ce565b60200101906001600160f81b03191690815f1a90535060049490941c936112c381611832565b9050611256565b5083156113195760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610507565b9392505050565b5f60208284031215611330575f5ffd5b81356001600160e01b031981168114611319575f5ffd5b5f60208284031215611357575f5ffd5b5035919050565b80356001600160a01b0381168114611374575f5ffd5b919050565b5f5f6040838503121561138a575f5ffd5b8235915061139a6020840161135e565b90509250929050565b5f602082840312156113b3575f5ffd5b6113198261135e565b5f5f5f5f5f608086880312156113d0575f5ffd5b85359450602086013567ffffffffffffffff8111156113ed575f5ffd5b8601601f810188136113fd575f5ffd5b803567ffffffffffffffff811115611413575f5ffd5b8860208260051b8401011115611427575f5ffd5b6020919091019450925061143d6040870161135e565b949793965091946060013592915050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561148b5761148b61144e565b604052919050565b5f67ffffffffffffffff8211156114ac576114ac61144e565b5060051b60200190565b5f82601f8301126114c5575f5ffd5b81356114d86114d382611493565b611462565b8082825260208201915060208360051b8601019250858311156114f9575f5ffd5b602085015b8381101561151d5761150f8161135e565b8352602092830192016114fe565b5095945050505050565b5f5f60408385031215611538575f5ffd5b82359150602083013567ffffffffffffffff811115611555575f5ffd5b611561858286016114b6565b9150509250929050565b602080825282518282018190525f918401906040840190835b818110156115a2578351835260209384019390920191600101611584565b509095945050505050565b5f5f5f606084860312156115bf575f5ffd5b833567ffffffffffffffff8111156115d5575f5ffd5b6115e1868287016114b6565b935050602084013567ffffffffffffffff8111156115fd575f5ffd5b611609868287016114b6565b925050604084013567ffffffffffffffff811115611625575f5ffd5b8401601f81018613611635575f5ffd5b80356116436114d382611493565b8082825260208201915060208360051b850101925088831115611664575f5ffd5b6020840193505b8284101561168657833582526020938401939091019061166b565b809450505050509250925092565b5f5f5f606084860312156116a6575f5ffd5b6116af8461135e565b92506116bd6020850161135e565b929592945050506040919091013590565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156116f2575f5ffd5b5051919050565b5f60208284031215611709575f5ffd5b81518015158114611319575f5ffd5b634e487b7160e01b5f52601160045260245ffd5b8181038181111561046c5761046c611718565b8082018082111561046c5761046c611718565b808202811582820484141761046c5761046c611718565b5f8261178357634e487b7160e01b5f52601260045260245ffd5b500490565b5f81518060208401855e5f93019283525090919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f6117d06017830185611788565b7001034b99036b4b9b9b4b733903937b6329607d1b81526117f46011820185611788565b95945050505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8161184057611840611718565b505f19019056fea2646970667358221220b6f335f6f2fb06d29afe929f916428c8161d67a46e67dc1bd46f41021501803b64736f6c634300081c0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1A65 CODESIZE SUB DUP1 PUSH2 0x1A65 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x180 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 MSTORE PUSH2 0x45 PUSH0 CALLER PUSH2 0xDF JUMP JUMPDEST PUSH2 0x6F PUSH32 0xA451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E CALLER PUSH2 0xDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH8 0xDE0B6B3A7640000 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x96 PUSH2 0xDB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 SWAP2 MSTORE SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD DUP2 SSTORE SWAP2 ADD MLOAD PUSH1 0x1 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH2 0x1AD JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x17C JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x13B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x190 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x187D PUSH2 0x1E8 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x275 ADD MSTORE DUP2 DUP2 PUSH2 0x2BD ADD MSTORE DUP2 DUP2 PUSH2 0x54A ADD MSTORE DUP2 DUP2 PUSH2 0x870 ADD MSTORE DUP2 DUP2 PUSH2 0x8E0 ADD MSTORE PUSH2 0xBFB ADD MSTORE PUSH2 0x187D PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFA8817 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xD06CA61F GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD06CA61F EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xDD4BE683 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xEB71F7E6 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xFA1C631B EQ PUSH2 0x41D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xAFFA8817 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xB6F9DE95 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xCF0888AA EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x327 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x88AA8BEE GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x88AA8BEE EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x264 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x129 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x97 DUP3 MSTORE DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x129 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x297 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x129 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x13BC JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH32 0xA451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xE0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x97 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x129 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x46C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x48C DUP2 PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x496 DUP4 DUP4 PUSH2 0x102D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51A DUP3 DUP3 PUSH2 0x10B2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH0 DUP2 DUP2 LT PUSH2 0x584 JUMPI PUSH2 0x584 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20494E56414C49445F50415448000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20455850495245440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH0 PUSH2 0x680 DUP3 DUP8 DUP8 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xA52 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x692 JUMPI PUSH2 0x692 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x6AB JUMPI POP DUP7 DUP2 LT ISZERO JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20494E53554646494349454E545F4F55 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1514155517D05353D55395 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST PUSH0 PUSH1 0x97 PUSH0 DUP9 DUP9 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x722 JUMPI PUSH2 0x722 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x737 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20494E53554646494349454E545F414D PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x13D5539517D0531313D5D151 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP10 DUP10 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x920 JUMPI PUSH2 0x920 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST POP DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x9B7 JUMPI PUSH2 0x9B7 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA22 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 GT PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20616D6F756E74496E2073686F756C64 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2062652067726561746572207468616E207A65726F PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x2 DUP3 MLOAD LT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A207061746820636F6E7461696E732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x74206C65617374203220656C656D656E7473 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB71 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xB87 JUMPI PUSH2 0xB87 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 JUMPDEST PUSH1 0x1 DUP4 MLOAD PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xE06 JUMPI PUSH1 0x97 PUSH0 DUP5 PUSH2 0xBB9 DUP5 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xBC9 JUMPI PUSH2 0xBC9 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH0 EQ PUSH2 0xDD4 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xC35 JUMPI PUSH2 0xC35 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCDF JUMPI PUSH1 0x97 PUSH0 DUP5 PUSH2 0xC5A DUP5 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xC6A JUMPI PUSH2 0xC6A PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xCA8 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0xCB2 SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST DUP3 PUSH2 0xCBE DUP4 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xCCE JUMPI PUSH2 0xCCE PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xDFE JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x97 PUSH0 DUP7 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xCFE JUMPI PUSH2 0xCFE PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP7 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0xD46 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP PUSH1 0x97 PUSH0 DUP6 PUSH2 0xD61 DUP6 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH2 0xD71 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP2 PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST DUP4 PUSH2 0xDB2 DUP5 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xDC2 JUMPI PUSH2 0xDC2 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0xDFE JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDE1 DUP4 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xDF1 JUMPI PUSH2 0xDF1 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB95 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xE27 DUP2 PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x496 DUP4 DUP4 PUSH2 0x10B2 JUMP JUMPDEST PUSH32 0xA451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E PUSH2 0xE5B DUP2 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x1E DUP5 MLOAD GT ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20546F6B656E73206172726179206973 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746F6F206C6F6E672C2072656475636520746865206E756D626572206F6620 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x746F6B656E73 PUSH1 0xD0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x507 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF0A JUMPI PUSH2 0xF0A PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF29 JUMPI PUSH2 0xF29 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x97 PUSH0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF52 JUMPI PUSH2 0xF52 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD PUSH0 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP3 ADD MLOAD PUSH1 0x1 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE ADD PUSH2 0xEE4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xA451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E PUSH2 0xFCF DUP2 PUSH2 0x1020 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE SWAP5 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x97 SWAP1 SWAP6 MSTORE SWAP4 KECCAK256 SWAP1 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x102A DUP2 CALLER PUSH2 0x1118 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1037 DUP3 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x51A JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x106E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x10BC DUP3 DUP3 PUSH2 0x51E JUMP JUMPDEST ISZERO PUSH2 0x51A JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1122 DUP3 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x51A JUMPI PUSH2 0x112F DUP2 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0x113A DUP4 PUSH1 0x20 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x114B SWAP3 SWAP2 SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x507 SWAP2 PUSH1 0x4 ADD PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x46C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1191 DUP4 PUSH1 0x2 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x119C SWAP1 PUSH1 0x2 PUSH2 0x173F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B4 JUMPI PUSH2 0x11B4 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11DE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x11F8 JUMPI PUSH2 0x11F8 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1226 JUMPI PUSH2 0x1226 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH2 0x1248 DUP5 PUSH1 0x2 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x1253 SWAP1 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12CA JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1287 JUMPI PUSH2 0x1287 PUSH2 0x16CE JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x12C3 DUP2 PUSH2 0x1832 JUMP JUMPDEST SWAP1 POP PUSH2 0x1256 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1319 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1330 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1319 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1357 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1374 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x139A PUSH1 0x20 DUP5 ADD PUSH2 0x135E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1319 DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x13FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1427 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP5 POP SWAP3 POP PUSH2 0x143D PUSH1 0x40 DUP8 ADD PUSH2 0x135E JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x148B JUMPI PUSH2 0x148B PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AC PUSH2 0x144E JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D8 PUSH2 0x14D3 DUP3 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x1462 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x14F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x151D JUMPI PUSH2 0x150F DUP2 PUSH2 0x135E JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x14FE JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1538 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1555 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1561 DUP6 DUP3 DUP7 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15A2 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1584 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15E1 DUP7 DUP3 DUP8 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1609 DUP7 DUP3 DUP8 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1625 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1635 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1643 PUSH2 0x14D3 DUP3 PUSH2 0x1493 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP9 DUP4 GT ISZERO PUSH2 0x1664 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1686 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x166B JUMP JUMPDEST DUP1 SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16AF DUP5 PUSH2 0x135E JUMP JUMPDEST SWAP3 POP PUSH2 0x16BD PUSH1 0x20 DUP6 ADD PUSH2 0x135E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1319 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1718 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1718 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1718 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1783 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH0 PUSH2 0x17D0 PUSH1 0x17 DUP4 ADD DUP6 PUSH2 0x1788 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH2 0x17F4 PUSH1 0x11 DUP3 ADD DUP6 PUSH2 0x1788 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x1840 JUMPI PUSH2 0x1840 PUSH2 0x1718 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 RETURN CALLDATALOAD 0xF6 CALLCODE 0xFB MOD 0xD2 SWAP11 INVALID SWAP3 SWAP16 SWAP2 PUSH5 0x28C8161D67 LOG4 PUSH15 0x67DC1BD46F41021501803B64736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "1874:5299:10:-:0;;;2192:222;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2229:12:10;;;;2251:44;2365:4:0;965:10:4;2251::10;:44::i;:::-;2305:39;2159:26;965:10:4;2251::10;:44::i;2305:39::-;2376:31;;;;;;;;2388:4;2376:31;;;;2394:12;:10;;;:12;;:::i;:::-;-1:-1:-1;;;;;2376:31:10;;;;;;2354:19;;;;;;;:12;:19;;;;;;;;:53;;;;;;;;;;;;;-1:-1:-1;;;;;;2354:53:10;;;;;;;;1874:5299;;886:96:4;965:10;;886:96::o;7938:233:0:-;3436:4;3459:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3459:29:0;;;;;;;;;;;;8016:149;;8059:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8059:29:0;;;;;;;;;:36;;-1:-1:-1;;8059:36:0;8091:4;8059:36;;;8141:12;965:10:4;;886:96;8141:12:0;-1:-1:-1;;;;;8114:40:0;8132:7;-1:-1:-1;;;;;8114:40:0;8126:4;8114:40;;;;;;;;;;8016:149;7938:233;;:::o;14:290:11:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:11:o;:::-;1874:5299:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_31": {
									"entryPoint": null,
									"id": 31,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRICE_MANAGER_2289": {
									"entryPoint": null,
									"id": 2289,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WETH_2279": {
									"entryPoint": null,
									"id": 2279,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_108": {
									"entryPoint": 4128,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_147": {
									"entryPoint": 4376,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_299": {
									"entryPoint": 4141,
									"id": 299,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_936": {
									"entryPoint": null,
									"id": 936,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_330": {
									"entryPoint": 4274,
									"id": 330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getAmountsOut_2649": {
									"entryPoint": 2642,
									"id": 2649,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getRoleAdmin_162": {
									"entryPoint": null,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenDetails_2683": {
									"entryPoint": null,
									"id": 2683,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenPrice_2670": {
									"entryPoint": null,
									"id": 2670,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getWETHAddress_2657": {
									"entryPoint": null,
									"id": 2657,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@grantRole_182": {
									"entryPoint": 1138,
									"id": 182,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_95": {
									"entryPoint": 1310,
									"id": 95,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_225": {
									"entryPoint": 1179,
									"id": 225,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_202": {
									"entryPoint": 3597,
									"id": 202,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTokenDetails_2343": {
									"entryPoint": 4005,
									"id": 2343,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setTokensDetails_2394": {
									"entryPoint": 3633,
									"id": 2394,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1227": {
									"entryPoint": null,
									"id": 1227,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_76": {
									"entryPoint": 1084,
									"id": 76,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapExactETHForTokensSupportingFeeOnTransferTokens_2509": {
									"entryPoint": 1352,
									"id": 2509,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@toHexString_1142": {
									"entryPoint": 4483,
									"id": 1142,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_1162": {
									"entryPoint": 4465,
									"id": 1162,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenDetails_2284": {
									"entryPoint": null,
									"id": 2284,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 5549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 4935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 4985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_string": {
									"entryPoint": 6024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6047,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a9d3f3429d6f7d601e79a56388ebaeef879c178f6da38e08a509d9e3994b6a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_29acd408d8afda248b568ac22c80ebc7d6d115c93f3fd64f6097ddc942aedfcf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6435d47a7cef43416f8f596d66beab1b30970728f1435d971438f7d89b0cfb94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0a84dd8250d98c57d65326b71d5da4964385e7fbd92b05a3cbe874c127db80e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0bcbbbbe436530a4b61f43295135097bf7668636b4f4254b31ef3e7629e3509__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4ea67bea551891ab36be726b8e631181246034dffcfd5c0bbfad1e9d1729432__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc542683e8818ff716879d376d0f2865e4cdfc390a34f54109b63f66fd90d1bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_TokenDetail_$2277_memory_ptr__to_t_struct$_TokenDetail_$2277_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 5267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 6194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5912,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5838,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15048:11",
										"nodeType": "YulBlock",
										"src": "0:15048:11",
										"statements": [
											{
												"nativeSrc": "6:3:11",
												"nodeType": "YulBlock",
												"src": "6:3:11",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:11",
													"nodeType": "YulBlock",
													"src": "83:217:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:11",
																"nodeType": "YulBlock",
																"src": "129:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:11",
																					"nodeType": "YulLiteral",
																					"src": "138:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:11",
																					"nodeType": "YulLiteral",
																					"src": "141:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:11"
																			},
																			"nativeSrc": "131:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:11"
																		},
																		"nativeSrc": "131:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:11"
																		},
																		"nativeSrc": "100:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:11",
																		"nodeType": "YulLiteral",
																		"src": "125:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:11"
																},
																"nativeSrc": "96:32:11",
																"nodeType": "YulFunctionCall",
																"src": "96:32:11"
															},
															"nativeSrc": "93:52:11",
															"nodeType": "YulIf",
															"src": "93:52:11"
														},
														{
															"nativeSrc": "154:36:11",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:11"
																},
																"nativeSrc": "167:23:11",
																"nodeType": "YulFunctionCall",
																"src": "167:23:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:11",
																	"nodeType": "YulTypedName",
																	"src": "158:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:11",
																"nodeType": "YulBlock",
																"src": "254:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:11",
																					"nodeType": "YulLiteral",
																					"src": "263:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:11",
																					"nodeType": "YulLiteral",
																					"src": "266:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:11"
																			},
																			"nativeSrc": "256:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:11"
																		},
																		"nativeSrc": "256:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:11",
																								"nodeType": "YulLiteral",
																								"src": "234:3:11",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:11",
																								"nodeType": "YulLiteral",
																								"src": "239:10:11",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:11"
																						},
																						"nativeSrc": "230:20:11",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:11"
																				},
																				"nativeSrc": "219:32:11",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:11"
																		},
																		"nativeSrc": "209:43:11",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:11"
																},
																"nativeSrc": "202:51:11",
																"nodeType": "YulFunctionCall",
																"src": "202:51:11"
															},
															"nativeSrc": "199:71:11",
															"nodeType": "YulIf",
															"src": "199:71:11"
														},
														{
															"nativeSrc": "279:15:11",
															"nodeType": "YulAssignment",
															"src": "279:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:11",
																"nodeType": "YulIdentifier",
																"src": "289:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:11",
														"nodeType": "YulTypedName",
														"src": "49:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:11",
														"nodeType": "YulTypedName",
														"src": "60:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:11",
														"nodeType": "YulTypedName",
														"src": "72:6:11",
														"type": ""
													}
												],
												"src": "14:286:11"
											},
											{
												"body": {
													"nativeSrc": "400:92:11",
													"nodeType": "YulBlock",
													"src": "400:92:11",
													"statements": [
														{
															"nativeSrc": "410:26:11",
															"nodeType": "YulAssignment",
															"src": "410:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:11",
																		"nodeType": "YulLiteral",
																		"src": "433:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:11"
																},
																"nativeSrc": "418:18:11",
																"nodeType": "YulFunctionCall",
																"src": "418:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:11"
																				},
																				"nativeSrc": "470:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:11"
																		},
																		"nativeSrc": "463:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:11"
																},
																"nativeSrc": "445:41:11",
																"nodeType": "YulFunctionCall",
																"src": "445:41:11"
															},
															"nativeSrc": "445:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:11",
														"nodeType": "YulTypedName",
														"src": "369:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:11",
														"nodeType": "YulTypedName",
														"src": "380:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:11",
														"nodeType": "YulTypedName",
														"src": "391:4:11",
														"type": ""
													}
												],
												"src": "305:187:11"
											},
											{
												"body": {
													"nativeSrc": "567:156:11",
													"nodeType": "YulBlock",
													"src": "567:156:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "613:16:11",
																"nodeType": "YulBlock",
																"src": "613:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "622:1:11",
																					"nodeType": "YulLiteral",
																					"src": "622:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "625:1:11",
																					"nodeType": "YulLiteral",
																					"src": "625:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "615:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "615:6:11"
																			},
																			"nativeSrc": "615:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "615:12:11"
																		},
																		"nativeSrc": "615:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "615:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "588:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "597:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "584:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:11"
																		},
																		"nativeSrc": "584:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "584:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "609:2:11",
																		"nodeType": "YulLiteral",
																		"src": "609:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "580:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:11"
																},
																"nativeSrc": "580:32:11",
																"nodeType": "YulFunctionCall",
																"src": "580:32:11"
															},
															"nativeSrc": "577:52:11",
															"nodeType": "YulIf",
															"src": "577:52:11"
														},
														{
															"nativeSrc": "638:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "638:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "651:1:11",
																"nodeType": "YulLiteral",
																"src": "651:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "642:5:11",
																	"nodeType": "YulTypedName",
																	"src": "642:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "661:32:11",
															"nodeType": "YulAssignment",
															"src": "661:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "683:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "683:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "670:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "670:12:11"
																},
																"nativeSrc": "670:23:11",
																"nodeType": "YulFunctionCall",
																"src": "670:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "661:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "661:5:11"
																}
															]
														},
														{
															"nativeSrc": "702:15:11",
															"nodeType": "YulAssignment",
															"src": "702:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "712:5:11",
																"nodeType": "YulIdentifier",
																"src": "712:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "702:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "702:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "497:226:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "533:9:11",
														"nodeType": "YulTypedName",
														"src": "533:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "544:7:11",
														"nodeType": "YulTypedName",
														"src": "544:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "556:6:11",
														"nodeType": "YulTypedName",
														"src": "556:6:11",
														"type": ""
													}
												],
												"src": "497:226:11"
											},
											{
												"body": {
													"nativeSrc": "829:76:11",
													"nodeType": "YulBlock",
													"src": "829:76:11",
													"statements": [
														{
															"nativeSrc": "839:26:11",
															"nodeType": "YulAssignment",
															"src": "839:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "851:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "851:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "862:2:11",
																		"nodeType": "YulLiteral",
																		"src": "862:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "847:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "847:3:11"
																},
																"nativeSrc": "847:18:11",
																"nodeType": "YulFunctionCall",
																"src": "847:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "839:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "839:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "881:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "881:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "892:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "892:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "874:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "874:6:11"
																},
																"nativeSrc": "874:25:11",
																"nodeType": "YulFunctionCall",
																"src": "874:25:11"
															},
															"nativeSrc": "874:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "874:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "728:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "798:9:11",
														"nodeType": "YulTypedName",
														"src": "798:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "809:6:11",
														"nodeType": "YulTypedName",
														"src": "809:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "820:4:11",
														"nodeType": "YulTypedName",
														"src": "820:4:11",
														"type": ""
													}
												],
												"src": "728:177:11"
											},
											{
												"body": {
													"nativeSrc": "959:124:11",
													"nodeType": "YulBlock",
													"src": "959:124:11",
													"statements": [
														{
															"nativeSrc": "969:29:11",
															"nodeType": "YulAssignment",
															"src": "969:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "991:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "991:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "978:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "978:12:11"
																},
																"nativeSrc": "978:20:11",
																"nodeType": "YulFunctionCall",
																"src": "978:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "969:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "969:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1061:16:11",
																"nodeType": "YulBlock",
																"src": "1061:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1070:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1070:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1073:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1073:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1063:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1063:6:11"
																			},
																			"nativeSrc": "1063:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1063:12:11"
																		},
																		"nativeSrc": "1063:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1063:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1020:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1020:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1031:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1031:5:11"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1046:3:11",
																										"nodeType": "YulLiteral",
																										"src": "1046:3:11",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1051:1:11",
																										"nodeType": "YulLiteral",
																										"src": "1051:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1042:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "1042:3:11"
																								},
																								"nativeSrc": "1042:11:11",
																								"nodeType": "YulFunctionCall",
																								"src": "1042:11:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1055:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1055:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1038:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1038:3:11"
																						},
																						"nativeSrc": "1038:19:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1038:19:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1027:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1027:3:11"
																				},
																				"nativeSrc": "1027:31:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1027:31:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1017:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1017:2:11"
																		},
																		"nativeSrc": "1017:42:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1017:42:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1010:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1010:6:11"
																},
																"nativeSrc": "1010:50:11",
																"nodeType": "YulFunctionCall",
																"src": "1010:50:11"
															},
															"nativeSrc": "1007:70:11",
															"nodeType": "YulIf",
															"src": "1007:70:11"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "910:173:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "938:6:11",
														"nodeType": "YulTypedName",
														"src": "938:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "949:5:11",
														"nodeType": "YulTypedName",
														"src": "949:5:11",
														"type": ""
													}
												],
												"src": "910:173:11"
											},
											{
												"body": {
													"nativeSrc": "1175:213:11",
													"nodeType": "YulBlock",
													"src": "1175:213:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1221:16:11",
																"nodeType": "YulBlock",
																"src": "1221:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1230:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1230:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1233:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1233:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1223:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1223:6:11"
																			},
																			"nativeSrc": "1223:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1223:12:11"
																		},
																		"nativeSrc": "1223:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1223:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1196:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1196:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1192:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1192:3:11"
																		},
																		"nativeSrc": "1192:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1192:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1217:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1217:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1188:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1188:3:11"
																},
																"nativeSrc": "1188:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1188:32:11"
															},
															"nativeSrc": "1185:52:11",
															"nodeType": "YulIf",
															"src": "1185:52:11"
														},
														{
															"nativeSrc": "1246:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1246:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "1259:1:11",
																"nodeType": "YulLiteral",
																"src": "1259:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1250:5:11",
																	"nodeType": "YulTypedName",
																	"src": "1250:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1269:32:11",
															"nodeType": "YulAssignment",
															"src": "1269:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1291:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1291:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1278:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1278:12:11"
																},
																"nativeSrc": "1278:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1278:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1269:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1269:5:11"
																}
															]
														},
														{
															"nativeSrc": "1310:15:11",
															"nodeType": "YulAssignment",
															"src": "1310:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "1320:5:11",
																"nodeType": "YulIdentifier",
																"src": "1320:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1310:6:11"
																}
															]
														},
														{
															"nativeSrc": "1334:48:11",
															"nodeType": "YulAssignment",
															"src": "1334:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1367:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1367:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1378:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1378:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1363:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1363:3:11"
																		},
																		"nativeSrc": "1363:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1363:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1344:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1344:18:11"
																},
																"nativeSrc": "1344:38:11",
																"nodeType": "YulFunctionCall",
																"src": "1344:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1334:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "1088:300:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1133:9:11",
														"nodeType": "YulTypedName",
														"src": "1133:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1144:7:11",
														"nodeType": "YulTypedName",
														"src": "1144:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1156:6:11",
														"nodeType": "YulTypedName",
														"src": "1156:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1164:6:11",
														"nodeType": "YulTypedName",
														"src": "1164:6:11",
														"type": ""
													}
												],
												"src": "1088:300:11"
											},
											{
												"body": {
													"nativeSrc": "1463:116:11",
													"nodeType": "YulBlock",
													"src": "1463:116:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1509:16:11",
																"nodeType": "YulBlock",
																"src": "1509:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1518:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1518:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1521:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1521:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1511:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1511:6:11"
																			},
																			"nativeSrc": "1511:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1511:12:11"
																		},
																		"nativeSrc": "1511:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1511:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1484:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1484:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1493:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1493:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1480:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1480:3:11"
																		},
																		"nativeSrc": "1480:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1480:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1505:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1505:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1476:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1476:3:11"
																},
																"nativeSrc": "1476:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1476:32:11"
															},
															"nativeSrc": "1473:52:11",
															"nodeType": "YulIf",
															"src": "1473:52:11"
														},
														{
															"nativeSrc": "1534:39:11",
															"nodeType": "YulAssignment",
															"src": "1534:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1563:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1563:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1544:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1544:18:11"
																},
																"nativeSrc": "1544:29:11",
																"nodeType": "YulFunctionCall",
																"src": "1544:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1534:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1534:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1393:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1429:9:11",
														"nodeType": "YulTypedName",
														"src": "1429:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1440:7:11",
														"nodeType": "YulTypedName",
														"src": "1440:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1452:6:11",
														"nodeType": "YulTypedName",
														"src": "1452:6:11",
														"type": ""
													}
												],
												"src": "1393:186:11"
											},
											{
												"body": {
													"nativeSrc": "1743:172:11",
													"nodeType": "YulBlock",
													"src": "1743:172:11",
													"statements": [
														{
															"nativeSrc": "1753:26:11",
															"nodeType": "YulAssignment",
															"src": "1753:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1765:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1765:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1776:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1776:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1761:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1761:3:11"
																},
																"nativeSrc": "1761:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1761:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1753:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1753:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1795:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1795:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1812:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1812:6:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1806:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "1806:5:11"
																		},
																		"nativeSrc": "1806:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1806:13:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1788:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:11"
																},
																"nativeSrc": "1788:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1788:32:11"
															},
															"nativeSrc": "1788:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "1788:32:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1840:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1840:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1851:4:11",
																				"nodeType": "YulLiteral",
																				"src": "1851:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1836:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1836:3:11"
																		},
																		"nativeSrc": "1836:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1836:20:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nativeSrc": "1872:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "1872:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1880:4:11",
																								"nodeType": "YulLiteral",
																								"src": "1880:4:11",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1868:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1868:3:11"
																						},
																						"nativeSrc": "1868:17:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1868:17:11"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nativeSrc": "1862:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "1862:5:11"
																				},
																				"nativeSrc": "1862:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1862:24:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1896:3:11",
																								"nodeType": "YulLiteral",
																								"src": "1896:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1901:1:11",
																								"nodeType": "YulLiteral",
																								"src": "1901:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1892:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1892:3:11"
																						},
																						"nativeSrc": "1892:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "1892:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1905:1:11",
																						"nodeType": "YulLiteral",
																						"src": "1905:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1888:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1888:3:11"
																				},
																				"nativeSrc": "1888:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1888:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1858:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1858:3:11"
																		},
																		"nativeSrc": "1858:50:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1858:50:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1829:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1829:6:11"
																},
																"nativeSrc": "1829:80:11",
																"nodeType": "YulFunctionCall",
																"src": "1829:80:11"
															},
															"nativeSrc": "1829:80:11",
															"nodeType": "YulExpressionStatement",
															"src": "1829:80:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_TokenDetail_$2277_memory_ptr__to_t_struct$_TokenDetail_$2277_memory_ptr__fromStack_reversed",
												"nativeSrc": "1584:331:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1712:9:11",
														"nodeType": "YulTypedName",
														"src": "1712:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1723:6:11",
														"nodeType": "YulTypedName",
														"src": "1723:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1734:4:11",
														"nodeType": "YulTypedName",
														"src": "1734:4:11",
														"type": ""
													}
												],
												"src": "1584:331:11"
											},
											{
												"body": {
													"nativeSrc": "2021:102:11",
													"nodeType": "YulBlock",
													"src": "2021:102:11",
													"statements": [
														{
															"nativeSrc": "2031:26:11",
															"nodeType": "YulAssignment",
															"src": "2031:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2043:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2043:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2054:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2054:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2039:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2039:3:11"
																},
																"nativeSrc": "2039:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2039:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2031:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2031:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2073:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2073:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2088:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2088:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2104:3:11",
																								"nodeType": "YulLiteral",
																								"src": "2104:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2109:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2109:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2100:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2100:3:11"
																						},
																						"nativeSrc": "2100:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2100:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2113:1:11",
																						"nodeType": "YulLiteral",
																						"src": "2113:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2096:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2096:3:11"
																				},
																				"nativeSrc": "2096:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2096:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2084:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2084:3:11"
																		},
																		"nativeSrc": "2084:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2084:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2066:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2066:6:11"
																},
																"nativeSrc": "2066:51:11",
																"nodeType": "YulFunctionCall",
																"src": "2066:51:11"
															},
															"nativeSrc": "2066:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "2066:51:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1920:203:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1990:9:11",
														"nodeType": "YulTypedName",
														"src": "1990:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2001:6:11",
														"nodeType": "YulTypedName",
														"src": "2001:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2012:4:11",
														"nodeType": "YulTypedName",
														"src": "2012:4:11",
														"type": ""
													}
												],
												"src": "1920:203:11"
											},
											{
												"body": {
													"nativeSrc": "2284:763:11",
													"nodeType": "YulBlock",
													"src": "2284:763:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:16:11",
																"nodeType": "YulBlock",
																"src": "2331:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2340:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2340:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2343:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2343:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2333:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2333:6:11"
																			},
																			"nativeSrc": "2333:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:12:11"
																		},
																		"nativeSrc": "2333:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2305:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2305:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2314:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2314:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2301:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2301:3:11"
																		},
																		"nativeSrc": "2301:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2301:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2326:3:11",
																		"nodeType": "YulLiteral",
																		"src": "2326:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2297:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2297:3:11"
																},
																"nativeSrc": "2297:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2297:33:11"
															},
															"nativeSrc": "2294:53:11",
															"nodeType": "YulIf",
															"src": "2294:53:11"
														},
														{
															"nativeSrc": "2356:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2356:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2369:1:11",
																"nodeType": "YulLiteral",
																"src": "2369:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2360:5:11",
																	"nodeType": "YulTypedName",
																	"src": "2360:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2379:32:11",
															"nodeType": "YulAssignment",
															"src": "2379:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2401:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2401:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2388:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2388:12:11"
																},
																"nativeSrc": "2388:23:11",
																"nodeType": "YulFunctionCall",
																"src": "2388:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2379:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2379:5:11"
																}
															]
														},
														{
															"nativeSrc": "2420:15:11",
															"nodeType": "YulAssignment",
															"src": "2420:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "2430:5:11",
																"nodeType": "YulIdentifier",
																"src": "2430:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2420:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:11"
																}
															]
														},
														{
															"nativeSrc": "2444:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2444:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2475:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2475:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2486:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2486:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2471:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2471:3:11"
																		},
																		"nativeSrc": "2471:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2471:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2458:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2458:12:11"
																},
																"nativeSrc": "2458:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2458:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2448:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2448:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2533:16:11",
																"nodeType": "YulBlock",
																"src": "2533:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2542:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2542:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2545:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2545:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2535:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2535:6:11"
																			},
																			"nativeSrc": "2535:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2535:12:11"
																		},
																		"nativeSrc": "2535:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2535:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2505:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2505:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2513:18:11",
																		"nodeType": "YulLiteral",
																		"src": "2513:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2502:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2502:2:11"
																},
																"nativeSrc": "2502:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2502:30:11"
															},
															"nativeSrc": "2499:50:11",
															"nodeType": "YulIf",
															"src": "2499:50:11"
														},
														{
															"nativeSrc": "2558:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2558:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2572:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2572:9:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2583:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2583:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2568:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2568:3:11"
																},
																"nativeSrc": "2568:22:11",
																"nodeType": "YulFunctionCall",
																"src": "2568:22:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2562:2:11",
																	"nodeType": "YulTypedName",
																	"src": "2562:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2638:16:11",
																"nodeType": "YulBlock",
																"src": "2638:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2647:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2647:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2650:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2650:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2640:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2640:6:11"
																			},
																			"nativeSrc": "2640:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2640:12:11"
																		},
																		"nativeSrc": "2640:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2640:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2617:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2617:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2621:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2621:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2613:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2613:3:11"
																				},
																				"nativeSrc": "2613:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2613:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2628:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2628:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2609:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2609:3:11"
																		},
																		"nativeSrc": "2609:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2609:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2602:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2602:6:11"
																},
																"nativeSrc": "2602:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2602:35:11"
															},
															"nativeSrc": "2599:55:11",
															"nodeType": "YulIf",
															"src": "2599:55:11"
														},
														{
															"nativeSrc": "2663:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2663:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2690:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "2690:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2677:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2677:12:11"
																},
																"nativeSrc": "2677:16:11",
																"nodeType": "YulFunctionCall",
																"src": "2677:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2667:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2667:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2736:16:11",
																"nodeType": "YulBlock",
																"src": "2736:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2745:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2748:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2738:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:11"
																			},
																			"nativeSrc": "2738:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:11"
																		},
																		"nativeSrc": "2738:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2708:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2708:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2716:18:11",
																		"nodeType": "YulLiteral",
																		"src": "2716:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2705:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2705:2:11"
																},
																"nativeSrc": "2705:30:11",
																"nodeType": "YulFunctionCall",
																"src": "2705:30:11"
															},
															"nativeSrc": "2702:50:11",
															"nodeType": "YulIf",
															"src": "2702:50:11"
														},
														{
															"body": {
																"nativeSrc": "2810:16:11",
																"nodeType": "YulBlock",
																"src": "2810:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2819:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2819:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2822:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2822:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2812:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:11"
																			},
																			"nativeSrc": "2812:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2812:12:11"
																		},
																		"nativeSrc": "2812:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2812:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2775:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "2775:2:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2783:1:11",
																								"nodeType": "YulLiteral",
																								"src": "2783:1:11",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "2786:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "2786:6:11"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2779:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "2779:3:11"
																						},
																						"nativeSrc": "2779:14:11",
																						"nodeType": "YulFunctionCall",
																						"src": "2779:14:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2771:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2771:3:11"
																				},
																				"nativeSrc": "2771:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2771:23:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2796:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2796:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2767:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:11"
																		},
																		"nativeSrc": "2767:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:32:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2801:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "2801:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2764:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2764:2:11"
																},
																"nativeSrc": "2764:45:11",
																"nodeType": "YulFunctionCall",
																"src": "2764:45:11"
															},
															"nativeSrc": "2761:65:11",
															"nodeType": "YulIf",
															"src": "2761:65:11"
														},
														{
															"nativeSrc": "2835:21:11",
															"nodeType": "YulAssignment",
															"src": "2835:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2849:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "2849:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2853:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2853:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2845:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2845:3:11"
																},
																"nativeSrc": "2845:11:11",
																"nodeType": "YulFunctionCall",
																"src": "2845:11:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2835:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2835:6:11"
																}
															]
														},
														{
															"nativeSrc": "2865:16:11",
															"nodeType": "YulAssignment",
															"src": "2865:16:11",
															"value": {
																"name": "length",
																"nativeSrc": "2875:6:11",
																"nodeType": "YulIdentifier",
																"src": "2875:6:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2865:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2865:6:11"
																}
															]
														},
														{
															"nativeSrc": "2890:48:11",
															"nodeType": "YulAssignment",
															"src": "2890:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2923:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2923:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2934:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2934:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2919:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2919:3:11"
																		},
																		"nativeSrc": "2919:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2919:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2900:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "2900:18:11"
																},
																"nativeSrc": "2900:38:11",
																"nodeType": "YulFunctionCall",
																"src": "2900:38:11"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "2890:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2890:6:11"
																}
															]
														},
														{
															"nativeSrc": "2947:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2947:16:11",
															"value": {
																"kind": "number",
																"nativeSrc": "2962:1:11",
																"nodeType": "YulLiteral",
																"src": "2962:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2951:7:11",
																	"nodeType": "YulTypedName",
																	"src": "2951:7:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2972:43:11",
															"nodeType": "YulAssignment",
															"src": "2972:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3000:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3000:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3011:2:11",
																				"nodeType": "YulLiteral",
																				"src": "3011:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2996:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2996:3:11"
																		},
																		"nativeSrc": "2996:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2983:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2983:12:11"
																},
																"nativeSrc": "2983:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2983:32:11"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "2972:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2972:7:11"
																}
															]
														},
														{
															"nativeSrc": "3024:17:11",
															"nodeType": "YulAssignment",
															"src": "3024:17:11",
															"value": {
																"name": "value_1",
																"nativeSrc": "3034:7:11",
																"nodeType": "YulIdentifier",
																"src": "3034:7:11"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3024:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256",
												"nativeSrc": "2128:919:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2218:9:11",
														"nodeType": "YulTypedName",
														"src": "2218:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2229:7:11",
														"nodeType": "YulTypedName",
														"src": "2229:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2241:6:11",
														"nodeType": "YulTypedName",
														"src": "2241:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2249:6:11",
														"nodeType": "YulTypedName",
														"src": "2249:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2257:6:11",
														"nodeType": "YulTypedName",
														"src": "2257:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2265:6:11",
														"nodeType": "YulTypedName",
														"src": "2265:6:11",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2273:6:11",
														"nodeType": "YulTypedName",
														"src": "2273:6:11",
														"type": ""
													}
												],
												"src": "2128:919:11"
											},
											{
												"body": {
													"nativeSrc": "3153:76:11",
													"nodeType": "YulBlock",
													"src": "3153:76:11",
													"statements": [
														{
															"nativeSrc": "3163:26:11",
															"nodeType": "YulAssignment",
															"src": "3163:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3175:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3175:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3186:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3186:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3171:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3171:3:11"
																},
																"nativeSrc": "3171:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3171:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3163:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3163:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3205:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3205:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3216:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3216:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3198:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3198:6:11"
																},
																"nativeSrc": "3198:25:11",
																"nodeType": "YulFunctionCall",
																"src": "3198:25:11"
															},
															"nativeSrc": "3198:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "3198:25:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3052:177:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3122:9:11",
														"nodeType": "YulTypedName",
														"src": "3122:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3133:6:11",
														"nodeType": "YulTypedName",
														"src": "3133:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3144:4:11",
														"nodeType": "YulTypedName",
														"src": "3144:4:11",
														"type": ""
													}
												],
												"src": "3052:177:11"
											},
											{
												"body": {
													"nativeSrc": "3266:95:11",
													"nodeType": "YulBlock",
													"src": "3266:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3283:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3283:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3290:3:11",
																				"nodeType": "YulLiteral",
																				"src": "3290:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3295:10:11",
																				"nodeType": "YulLiteral",
																				"src": "3295:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3286:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3286:3:11"
																		},
																		"nativeSrc": "3286:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3286:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3276:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3276:6:11"
																},
																"nativeSrc": "3276:31:11",
																"nodeType": "YulFunctionCall",
																"src": "3276:31:11"
															},
															"nativeSrc": "3276:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "3276:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3323:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3323:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3326:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3326:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3316:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3316:6:11"
																},
																"nativeSrc": "3316:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3316:15:11"
															},
															"nativeSrc": "3316:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3316:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3347:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3347:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3350:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3350:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3340:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3340:6:11"
																},
																"nativeSrc": "3340:15:11",
																"nodeType": "YulFunctionCall",
																"src": "3340:15:11"
															},
															"nativeSrc": "3340:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "3340:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3234:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "3234:127:11"
											},
											{
												"body": {
													"nativeSrc": "3411:230:11",
													"nodeType": "YulBlock",
													"src": "3411:230:11",
													"statements": [
														{
															"nativeSrc": "3421:19:11",
															"nodeType": "YulAssignment",
															"src": "3421:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3437:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3437:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3431:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3431:5:11"
																},
																"nativeSrc": "3431:9:11",
																"nodeType": "YulFunctionCall",
																"src": "3431:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3421:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:11"
																}
															]
														},
														{
															"nativeSrc": "3449:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3449:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3471:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3471:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "3487:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "3487:4:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3493:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3493:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3483:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3483:3:11"
																				},
																				"nativeSrc": "3483:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3483:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3502:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3502:2:11",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3498:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3498:3:11"
																				},
																				"nativeSrc": "3498:7:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3498:7:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3479:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3479:3:11"
																		},
																		"nativeSrc": "3479:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3479:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3467:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3467:3:11"
																},
																"nativeSrc": "3467:40:11",
																"nodeType": "YulFunctionCall",
																"src": "3467:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3453:10:11",
																	"nodeType": "YulTypedName",
																	"src": "3453:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3582:22:11",
																"nodeType": "YulBlock",
																"src": "3582:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3584:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "3584:16:11"
																			},
																			"nativeSrc": "3584:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3584:18:11"
																		},
																		"nativeSrc": "3584:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3584:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3525:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "3525:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3537:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3537:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3522:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3522:2:11"
																		},
																		"nativeSrc": "3522:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3522:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3561:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "3561:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3573:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3573:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3558:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3558:2:11"
																		},
																		"nativeSrc": "3558:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3558:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3519:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3519:2:11"
																},
																"nativeSrc": "3519:62:11",
																"nodeType": "YulFunctionCall",
																"src": "3519:62:11"
															},
															"nativeSrc": "3516:88:11",
															"nodeType": "YulIf",
															"src": "3516:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3620:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3620:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3624:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "3624:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3613:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:11"
																},
																"nativeSrc": "3613:22:11",
																"nodeType": "YulFunctionCall",
																"src": "3613:22:11"
															},
															"nativeSrc": "3613:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "3613:22:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "3366:275:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "3391:4:11",
														"nodeType": "YulTypedName",
														"src": "3391:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "3400:6:11",
														"nodeType": "YulTypedName",
														"src": "3400:6:11",
														"type": ""
													}
												],
												"src": "3366:275:11"
											},
											{
												"body": {
													"nativeSrc": "3715:114:11",
													"nodeType": "YulBlock",
													"src": "3715:114:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3759:22:11",
																"nodeType": "YulBlock",
																"src": "3759:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3761:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "3761:16:11"
																			},
																			"nativeSrc": "3761:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3761:18:11"
																		},
																		"nativeSrc": "3761:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3761:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3731:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3731:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3739:18:11",
																		"nodeType": "YulLiteral",
																		"src": "3739:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3728:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "3728:2:11"
																},
																"nativeSrc": "3728:30:11",
																"nodeType": "YulFunctionCall",
																"src": "3728:30:11"
															},
															"nativeSrc": "3725:56:11",
															"nodeType": "YulIf",
															"src": "3725:56:11"
														},
														{
															"nativeSrc": "3790:33:11",
															"nodeType": "YulAssignment",
															"src": "3790:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3806:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3806:1:11",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3809:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3809:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3802:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3802:3:11"
																		},
																		"nativeSrc": "3802:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3802:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3818:4:11",
																		"nodeType": "YulLiteral",
																		"src": "3818:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3798:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3798:3:11"
																},
																"nativeSrc": "3798:25:11",
																"nodeType": "YulFunctionCall",
																"src": "3798:25:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "3790:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3790:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nativeSrc": "3646:183:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "3695:6:11",
														"nodeType": "YulTypedName",
														"src": "3695:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "3706:4:11",
														"nodeType": "YulTypedName",
														"src": "3706:4:11",
														"type": ""
													}
												],
												"src": "3646:183:11"
											},
											{
												"body": {
													"nativeSrc": "3898:611:11",
													"nodeType": "YulBlock",
													"src": "3898:611:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3947:16:11",
																"nodeType": "YulBlock",
																"src": "3947:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3956:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3956:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3959:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3959:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3949:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3949:6:11"
																			},
																			"nativeSrc": "3949:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3949:12:11"
																		},
																		"nativeSrc": "3949:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3949:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3926:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3926:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3934:4:11",
																						"nodeType": "YulLiteral",
																						"src": "3934:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3922:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3922:3:11"
																				},
																				"nativeSrc": "3922:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3922:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3941:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "3941:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3918:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3918:3:11"
																		},
																		"nativeSrc": "3918:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3918:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3911:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3911:6:11"
																},
																"nativeSrc": "3911:35:11",
																"nodeType": "YulFunctionCall",
																"src": "3911:35:11"
															},
															"nativeSrc": "3908:55:11",
															"nodeType": "YulIf",
															"src": "3908:55:11"
														},
														{
															"nativeSrc": "3972:34:11",
															"nodeType": "YulVariableDeclaration",
															"src": "3972:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3999:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3999:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3986:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3986:12:11"
																},
																"nativeSrc": "3986:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3986:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3976:6:11",
																	"nodeType": "YulTypedName",
																	"src": "3976:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4015:75:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4015:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4082:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4082:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "4042:39:11",
																			"nodeType": "YulIdentifier",
																			"src": "4042:39:11"
																		},
																		"nativeSrc": "4042:47:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4042:47:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4026:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "4026:15:11"
																},
																"nativeSrc": "4026:64:11",
																"nodeType": "YulFunctionCall",
																"src": "4026:64:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4019:3:11",
																	"nodeType": "YulTypedName",
																	"src": "4019:3:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4099:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4099:18:11",
															"value": {
																"name": "dst",
																"nativeSrc": "4114:3:11",
																"nodeType": "YulIdentifier",
																"src": "4114:3:11"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nativeSrc": "4103:7:11",
																	"nodeType": "YulTypedName",
																	"src": "4103:7:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4133:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4133:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4138:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4138:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4126:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4126:6:11"
																},
																"nativeSrc": "4126:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4126:19:11"
															},
															"nativeSrc": "4126:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "4126:19:11"
														},
														{
															"nativeSrc": "4154:21:11",
															"nodeType": "YulAssignment",
															"src": "4154:21:11",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4165:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4165:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4170:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4170:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4161:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4161:3:11"
																},
																"nativeSrc": "4161:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4161:14:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "4154:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:11"
																}
															]
														},
														{
															"nativeSrc": "4184:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4184:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4206:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4206:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4218:1:11",
																						"nodeType": "YulLiteral",
																						"src": "4218:1:11",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4221:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4221:6:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "4214:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4214:3:11"
																				},
																				"nativeSrc": "4214:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4214:14:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4202:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4202:3:11"
																		},
																		"nativeSrc": "4202:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4202:27:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4231:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4231:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4198:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:11"
																},
																"nativeSrc": "4198:38:11",
																"nodeType": "YulFunctionCall",
																"src": "4198:38:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "4188:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4188:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4264:16:11",
																"nodeType": "YulBlock",
																"src": "4264:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4273:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4273:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4276:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4276:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4266:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4266:6:11"
																			},
																			"nativeSrc": "4266:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4266:12:11"
																		},
																		"nativeSrc": "4266:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4266:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4251:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4251:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4259:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4259:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4248:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4248:2:11"
																},
																"nativeSrc": "4248:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4248:15:11"
															},
															"nativeSrc": "4245:35:11",
															"nodeType": "YulIf",
															"src": "4245:35:11"
														},
														{
															"nativeSrc": "4289:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4289:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4304:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4304:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4312:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4312:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4300:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4300:3:11"
																},
																"nativeSrc": "4300:17:11",
																"nodeType": "YulFunctionCall",
																"src": "4300:17:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "4293:3:11",
																	"nodeType": "YulTypedName",
																	"src": "4293:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4384:94:11",
																"nodeType": "YulBlock",
																"src": "4384:94:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4405:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4405:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "4429:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "4429:3:11"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nativeSrc": "4410:18:11",
																						"nodeType": "YulIdentifier",
																						"src": "4410:18:11"
																					},
																					"nativeSrc": "4410:23:11",
																					"nodeType": "YulFunctionCall",
																					"src": "4410:23:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4398:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4398:6:11"
																			},
																			"nativeSrc": "4398:36:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4398:36:11"
																		},
																		"nativeSrc": "4398:36:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4398:36:11"
																	},
																	{
																		"nativeSrc": "4447:21:11",
																		"nodeType": "YulAssignment",
																		"src": "4447:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "4458:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4458:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4463:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4463:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4454:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4454:3:11"
																			},
																			"nativeSrc": "4454:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4454:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "4447:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4447:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4337:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4337:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "4342:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4342:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4334:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4334:2:11"
																},
																"nativeSrc": "4334:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4334:15:11"
															},
															"nativeSrc": "4326:152:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4350:25:11",
																"nodeType": "YulBlock",
																"src": "4350:25:11",
																"statements": [
																	{
																		"nativeSrc": "4352:21:11",
																		"nodeType": "YulAssignment",
																		"src": "4352:21:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "4363:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4363:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4368:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4368:4:11",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4359:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4359:3:11"
																			},
																			"nativeSrc": "4359:14:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4359:14:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "4352:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4352:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4330:3:11",
																"nodeType": "YulBlock",
																"src": "4330:3:11",
																"statements": []
															},
															"src": "4326:152:11"
														},
														{
															"nativeSrc": "4487:16:11",
															"nodeType": "YulAssignment",
															"src": "4487:16:11",
															"value": {
																"name": "array_1",
																"nativeSrc": "4496:7:11",
																"nodeType": "YulIdentifier",
																"src": "4496:7:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4487:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4487:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nativeSrc": "3834:675:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3872:6:11",
														"nodeType": "YulTypedName",
														"src": "3872:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3880:3:11",
														"nodeType": "YulTypedName",
														"src": "3880:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3888:5:11",
														"nodeType": "YulTypedName",
														"src": "3888:5:11",
														"type": ""
													}
												],
												"src": "3834:675:11"
											},
											{
												"body": {
													"nativeSrc": "4626:350:11",
													"nodeType": "YulBlock",
													"src": "4626:350:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4672:16:11",
																"nodeType": "YulBlock",
																"src": "4672:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4681:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4681:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4684:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4684:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4674:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4674:6:11"
																			},
																			"nativeSrc": "4674:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4674:12:11"
																		},
																		"nativeSrc": "4674:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4674:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4647:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4647:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4656:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4656:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4643:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4643:3:11"
																		},
																		"nativeSrc": "4643:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4668:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4668:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4639:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4639:3:11"
																},
																"nativeSrc": "4639:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4639:32:11"
															},
															"nativeSrc": "4636:52:11",
															"nodeType": "YulIf",
															"src": "4636:52:11"
														},
														{
															"nativeSrc": "4697:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4697:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "4710:1:11",
																"nodeType": "YulLiteral",
																"src": "4710:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4701:5:11",
																	"nodeType": "YulTypedName",
																	"src": "4701:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4720:32:11",
															"nodeType": "YulAssignment",
															"src": "4720:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4742:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4742:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4729:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4729:12:11"
																},
																"nativeSrc": "4729:23:11",
																"nodeType": "YulFunctionCall",
																"src": "4729:23:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4720:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4720:5:11"
																}
															]
														},
														{
															"nativeSrc": "4761:15:11",
															"nodeType": "YulAssignment",
															"src": "4761:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "4771:5:11",
																"nodeType": "YulIdentifier",
																"src": "4771:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4761:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:11"
																}
															]
														},
														{
															"nativeSrc": "4785:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4785:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4816:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4816:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4827:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4827:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4812:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4812:3:11"
																		},
																		"nativeSrc": "4812:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4812:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4799:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "4799:12:11"
																},
																"nativeSrc": "4799:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4799:32:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4789:6:11",
																	"nodeType": "YulTypedName",
																	"src": "4789:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4874:16:11",
																"nodeType": "YulBlock",
																"src": "4874:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4883:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4883:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4886:1:11",
																					"nodeType": "YulLiteral",
																					"src": "4886:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4876:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4876:6:11"
																			},
																			"nativeSrc": "4876:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4876:12:11"
																		},
																		"nativeSrc": "4876:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4876:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4846:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4846:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:18:11",
																		"nodeType": "YulLiteral",
																		"src": "4854:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4843:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4843:2:11"
																},
																"nativeSrc": "4843:30:11",
																"nodeType": "YulFunctionCall",
																"src": "4843:30:11"
															},
															"nativeSrc": "4840:50:11",
															"nodeType": "YulIf",
															"src": "4840:50:11"
														},
														{
															"nativeSrc": "4899:71:11",
															"nodeType": "YulAssignment",
															"src": "4899:71:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4942:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4942:9:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4953:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4953:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4938:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:11"
																		},
																		"nativeSrc": "4938:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4938:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4962:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "4962:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "4909:28:11",
																	"nodeType": "YulIdentifier",
																	"src": "4909:28:11"
																},
																"nativeSrc": "4909:61:11",
																"nodeType": "YulFunctionCall",
																"src": "4909:61:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4899:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4899:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "4514:462:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4584:9:11",
														"nodeType": "YulTypedName",
														"src": "4584:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4595:7:11",
														"nodeType": "YulTypedName",
														"src": "4595:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4607:6:11",
														"nodeType": "YulTypedName",
														"src": "4607:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4615:6:11",
														"nodeType": "YulTypedName",
														"src": "4615:6:11",
														"type": ""
													}
												],
												"src": "4514:462:11"
											},
											{
												"body": {
													"nativeSrc": "5132:460:11",
													"nodeType": "YulBlock",
													"src": "5132:460:11",
													"statements": [
														{
															"nativeSrc": "5142:32:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5142:32:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5160:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5160:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5171:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5171:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5156:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:11"
																},
																"nativeSrc": "5156:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5156:18:11"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "5146:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5146:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5190:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5190:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5201:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5201:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5183:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5183:6:11"
																},
																"nativeSrc": "5183:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5183:21:11"
															},
															"nativeSrc": "5183:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "5183:21:11"
														},
														{
															"nativeSrc": "5213:17:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5213:17:11",
															"value": {
																"name": "tail_1",
																"nativeSrc": "5224:6:11",
																"nodeType": "YulIdentifier",
																"src": "5224:6:11"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "5217:3:11",
																	"nodeType": "YulTypedName",
																	"src": "5217:3:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5239:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5239:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5259:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5259:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5253:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5253:5:11"
																},
																"nativeSrc": "5253:13:11",
																"nodeType": "YulFunctionCall",
																"src": "5253:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5243:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5243:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "5282:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5282:6:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5290:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5290:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5275:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5275:6:11"
																},
																"nativeSrc": "5275:22:11",
																"nodeType": "YulFunctionCall",
																"src": "5275:22:11"
															},
															"nativeSrc": "5275:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "5275:22:11"
														},
														{
															"nativeSrc": "5306:25:11",
															"nodeType": "YulAssignment",
															"src": "5306:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5317:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5317:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5328:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5328:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5313:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5313:3:11"
																},
																"nativeSrc": "5313:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5313:18:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5306:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5306:3:11"
																}
															]
														},
														{
															"nativeSrc": "5340:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5340:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5358:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5358:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5366:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5366:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5354:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5354:3:11"
																},
																"nativeSrc": "5354:15:11",
																"nodeType": "YulFunctionCall",
																"src": "5354:15:11"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "5344:6:11",
																	"nodeType": "YulTypedName",
																	"src": "5344:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5378:10:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5378:10:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5387:1:11",
																"nodeType": "YulLiteral",
																"src": "5387:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5382:1:11",
																	"nodeType": "YulTypedName",
																	"src": "5382:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5446:120:11",
																"nodeType": "YulBlock",
																"src": "5446:120:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5467:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5467:3:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "5478:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "5478:6:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5472:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5472:5:11"
																					},
																					"nativeSrc": "5472:13:11",
																					"nodeType": "YulFunctionCall",
																					"src": "5472:13:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5460:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5460:6:11"
																			},
																			"nativeSrc": "5460:26:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5460:26:11"
																		},
																		"nativeSrc": "5460:26:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5460:26:11"
																	},
																	{
																		"nativeSrc": "5499:19:11",
																		"nodeType": "YulAssignment",
																		"src": "5499:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "5510:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5510:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5515:2:11",
																					"nodeType": "YulLiteral",
																					"src": "5515:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5506:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5506:3:11"
																			},
																			"nativeSrc": "5506:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5506:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "5499:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5499:3:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5531:25:11",
																		"nodeType": "YulAssignment",
																		"src": "5531:25:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5545:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "5545:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5553:2:11",
																					"nodeType": "YulLiteral",
																					"src": "5553:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5541:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5541:3:11"
																			},
																			"nativeSrc": "5541:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5541:15:11"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5531:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5531:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5408:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "5408:1:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5411:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5411:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5405:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5405:2:11"
																},
																"nativeSrc": "5405:13:11",
																"nodeType": "YulFunctionCall",
																"src": "5405:13:11"
															},
															"nativeSrc": "5397:169:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5419:18:11",
																"nodeType": "YulBlock",
																"src": "5419:18:11",
																"statements": [
																	{
																		"nativeSrc": "5421:14:11",
																		"nodeType": "YulAssignment",
																		"src": "5421:14:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5430:1:11",
																					"nodeType": "YulIdentifier",
																					"src": "5430:1:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5433:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5433:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5426:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "5426:3:11"
																			},
																			"nativeSrc": "5426:9:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5426:9:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5421:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "5421:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5401:3:11",
																"nodeType": "YulBlock",
																"src": "5401:3:11",
																"statements": []
															},
															"src": "5397:169:11"
														},
														{
															"nativeSrc": "5575:11:11",
															"nodeType": "YulAssignment",
															"src": "5575:11:11",
															"value": {
																"name": "pos",
																"nativeSrc": "5583:3:11",
																"nodeType": "YulIdentifier",
																"src": "5583:3:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5575:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5575:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4981:611:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5101:9:11",
														"nodeType": "YulTypedName",
														"src": "5101:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5112:6:11",
														"nodeType": "YulTypedName",
														"src": "5112:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5123:4:11",
														"nodeType": "YulTypedName",
														"src": "5123:4:11",
														"type": ""
													}
												],
												"src": "4981:611:11"
											},
											{
												"body": {
													"nativeSrc": "5726:145:11",
													"nodeType": "YulBlock",
													"src": "5726:145:11",
													"statements": [
														{
															"nativeSrc": "5736:26:11",
															"nodeType": "YulAssignment",
															"src": "5736:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5748:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5748:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5759:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5759:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5744:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:11"
																},
																"nativeSrc": "5744:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5744:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5736:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5736:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5778:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5778:9:11"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5789:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5789:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5771:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5771:6:11"
																},
																"nativeSrc": "5771:25:11",
																"nodeType": "YulFunctionCall",
																"src": "5771:25:11"
															},
															"nativeSrc": "5771:25:11",
															"nodeType": "YulExpressionStatement",
															"src": "5771:25:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5816:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5816:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5827:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5827:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5812:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5812:3:11"
																		},
																		"nativeSrc": "5812:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5812:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5836:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5836:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5852:3:11",
																								"nodeType": "YulLiteral",
																								"src": "5852:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5857:1:11",
																								"nodeType": "YulLiteral",
																								"src": "5857:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5848:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "5848:3:11"
																						},
																						"nativeSrc": "5848:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "5848:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5861:1:11",
																						"nodeType": "YulLiteral",
																						"src": "5861:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5844:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5844:3:11"
																				},
																				"nativeSrc": "5844:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5844:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5832:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5832:3:11"
																		},
																		"nativeSrc": "5832:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5832:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5805:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5805:6:11"
																},
																"nativeSrc": "5805:60:11",
																"nodeType": "YulFunctionCall",
																"src": "5805:60:11"
															},
															"nativeSrc": "5805:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "5805:60:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "5597:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5687:9:11",
														"nodeType": "YulTypedName",
														"src": "5687:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5698:6:11",
														"nodeType": "YulTypedName",
														"src": "5698:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5706:6:11",
														"nodeType": "YulTypedName",
														"src": "5706:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5717:4:11",
														"nodeType": "YulTypedName",
														"src": "5717:4:11",
														"type": ""
													}
												],
												"src": "5597:274:11"
											},
											{
												"body": {
													"nativeSrc": "6055:1245:11",
													"nodeType": "YulBlock",
													"src": "6055:1245:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6101:16:11",
																"nodeType": "YulBlock",
																"src": "6101:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6110:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6110:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6113:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6113:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6103:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6103:6:11"
																			},
																			"nativeSrc": "6103:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6103:12:11"
																		},
																		"nativeSrc": "6103:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6103:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6076:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6076:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6085:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6085:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6072:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6072:3:11"
																		},
																		"nativeSrc": "6072:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6072:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6097:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6097:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6068:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6068:3:11"
																},
																"nativeSrc": "6068:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6068:32:11"
															},
															"nativeSrc": "6065:52:11",
															"nodeType": "YulIf",
															"src": "6065:52:11"
														},
														{
															"nativeSrc": "6126:37:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6126:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6153:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6153:9:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6140:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6140:12:11"
																},
																"nativeSrc": "6140:23:11",
																"nodeType": "YulFunctionCall",
																"src": "6140:23:11"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6130:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6130:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6206:16:11",
																"nodeType": "YulBlock",
																"src": "6206:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6215:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6215:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6218:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6218:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6208:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6208:6:11"
																			},
																			"nativeSrc": "6208:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6208:12:11"
																		},
																		"nativeSrc": "6208:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6208:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6178:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6178:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6186:18:11",
																		"nodeType": "YulLiteral",
																		"src": "6186:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6175:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6175:2:11"
																},
																"nativeSrc": "6175:30:11",
																"nodeType": "YulFunctionCall",
																"src": "6175:30:11"
															},
															"nativeSrc": "6172:50:11",
															"nodeType": "YulIf",
															"src": "6172:50:11"
														},
														{
															"nativeSrc": "6231:71:11",
															"nodeType": "YulAssignment",
															"src": "6231:71:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6274:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6274:9:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6285:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6285:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6270:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6270:3:11"
																		},
																		"nativeSrc": "6270:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6270:22:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6294:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "6294:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "6241:28:11",
																	"nodeType": "YulIdentifier",
																	"src": "6241:28:11"
																},
																"nativeSrc": "6241:61:11",
																"nodeType": "YulFunctionCall",
																"src": "6241:61:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6231:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:11"
																}
															]
														},
														{
															"nativeSrc": "6311:48:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6311:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6344:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6344:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6355:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6355:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6340:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6340:3:11"
																		},
																		"nativeSrc": "6340:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6340:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6327:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6327:12:11"
																},
																"nativeSrc": "6327:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6327:32:11"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "6315:8:11",
																	"nodeType": "YulTypedName",
																	"src": "6315:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6404:16:11",
																"nodeType": "YulBlock",
																"src": "6404:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6413:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6413:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6416:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6416:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6406:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6406:6:11"
																			},
																			"nativeSrc": "6406:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6406:12:11"
																		},
																		"nativeSrc": "6406:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6406:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "6374:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6374:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6384:18:11",
																		"nodeType": "YulLiteral",
																		"src": "6384:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6371:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6371:2:11"
																},
																"nativeSrc": "6371:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6371:32:11"
															},
															"nativeSrc": "6368:52:11",
															"nodeType": "YulIf",
															"src": "6368:52:11"
														},
														{
															"nativeSrc": "6429:73:11",
															"nodeType": "YulAssignment",
															"src": "6429:73:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6472:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6472:9:11"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "6483:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "6483:8:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6468:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6468:3:11"
																		},
																		"nativeSrc": "6468:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6468:24:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6494:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "6494:7:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nativeSrc": "6439:28:11",
																	"nodeType": "YulIdentifier",
																	"src": "6439:28:11"
																},
																"nativeSrc": "6439:63:11",
																"nodeType": "YulFunctionCall",
																"src": "6439:63:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6429:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:11"
																}
															]
														},
														{
															"nativeSrc": "6511:48:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6511:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6544:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6544:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6555:2:11",
																				"nodeType": "YulLiteral",
																				"src": "6555:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6540:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:11"
																		},
																		"nativeSrc": "6540:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6540:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6527:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6527:12:11"
																},
																"nativeSrc": "6527:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6527:32:11"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "6515:8:11",
																	"nodeType": "YulTypedName",
																	"src": "6515:8:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6604:16:11",
																"nodeType": "YulBlock",
																"src": "6604:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6613:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6613:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6616:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6616:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6606:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6606:6:11"
																			},
																			"nativeSrc": "6606:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6606:12:11"
																		},
																		"nativeSrc": "6606:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6606:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "6574:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6574:8:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6584:18:11",
																		"nodeType": "YulLiteral",
																		"src": "6584:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6571:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6571:2:11"
																},
																"nativeSrc": "6571:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6571:32:11"
															},
															"nativeSrc": "6568:52:11",
															"nodeType": "YulIf",
															"src": "6568:52:11"
														},
														{
															"nativeSrc": "6629:34:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6629:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6643:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6643:9:11"
																	},
																	{
																		"name": "offset_2",
																		"nativeSrc": "6654:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "6654:8:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6639:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6639:3:11"
																},
																"nativeSrc": "6639:24:11",
																"nodeType": "YulFunctionCall",
																"src": "6639:24:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6633:2:11",
																	"nodeType": "YulTypedName",
																	"src": "6633:2:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6711:16:11",
																"nodeType": "YulBlock",
																"src": "6711:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6720:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6720:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6723:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6723:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6713:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6713:6:11"
																			},
																			"nativeSrc": "6713:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6713:12:11"
																		},
																		"nativeSrc": "6713:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6713:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "6690:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "6690:2:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6694:4:11",
																						"nodeType": "YulLiteral",
																						"src": "6694:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6686:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6686:3:11"
																				},
																				"nativeSrc": "6686:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6686:13:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6701:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6701:7:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6682:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6682:3:11"
																		},
																		"nativeSrc": "6682:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6682:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6675:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6675:6:11"
																},
																"nativeSrc": "6675:35:11",
																"nodeType": "YulFunctionCall",
																"src": "6675:35:11"
															},
															"nativeSrc": "6672:55:11",
															"nodeType": "YulIf",
															"src": "6672:55:11"
														},
														{
															"nativeSrc": "6736:30:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6736:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "6763:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "6763:2:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6750:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "6750:12:11"
																},
																"nativeSrc": "6750:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6750:16:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6740:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6740:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6775:75:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6775:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6842:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6842:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nativeSrc": "6802:39:11",
																			"nodeType": "YulIdentifier",
																			"src": "6802:39:11"
																		},
																		"nativeSrc": "6802:47:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6802:47:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6786:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "6786:15:11"
																},
																"nativeSrc": "6786:64:11",
																"nodeType": "YulFunctionCall",
																"src": "6786:64:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6779:3:11",
																	"nodeType": "YulTypedName",
																	"src": "6779:3:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6859:16:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6859:16:11",
															"value": {
																"name": "dst",
																"nativeSrc": "6872:3:11",
																"nodeType": "YulIdentifier",
																"src": "6872:3:11"
															},
															"variables": [
																{
																	"name": "array",
																	"nativeSrc": "6863:5:11",
																	"nodeType": "YulTypedName",
																	"src": "6863:5:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6891:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6891:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6896:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6896:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6884:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6884:6:11"
																},
																"nativeSrc": "6884:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6884:19:11"
															},
															"nativeSrc": "6884:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "6884:19:11"
														},
														{
															"nativeSrc": "6912:19:11",
															"nodeType": "YulAssignment",
															"src": "6912:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6923:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6923:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6928:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6928:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6919:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6919:3:11"
																},
																"nativeSrc": "6919:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6919:12:11"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6912:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6912:3:11"
																}
															]
														},
														{
															"nativeSrc": "6940:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6940:46:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "6962:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6962:2:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6970:1:11",
																						"nodeType": "YulLiteral",
																						"src": "6970:1:11",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "6973:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6973:6:11"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "6966:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6966:3:11"
																				},
																				"nativeSrc": "6966:14:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6966:14:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6958:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6958:3:11"
																		},
																		"nativeSrc": "6958:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6958:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6983:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6983:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6954:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6954:3:11"
																},
																"nativeSrc": "6954:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6954:32:11"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6944:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6944:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7018:16:11",
																"nodeType": "YulBlock",
																"src": "7018:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7027:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7027:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7030:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7030:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7020:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7020:6:11"
																			},
																			"nativeSrc": "7020:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7020:12:11"
																		},
																		"nativeSrc": "7020:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7020:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7001:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7001:6:11"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7009:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "7009:7:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6998:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6998:2:11"
																},
																"nativeSrc": "6998:19:11",
																"nodeType": "YulFunctionCall",
																"src": "6998:19:11"
															},
															"nativeSrc": "6995:39:11",
															"nodeType": "YulIf",
															"src": "6995:39:11"
														},
														{
															"nativeSrc": "7043:22:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7043:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "7058:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "7058:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7062:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7054:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7054:3:11"
																},
																"nativeSrc": "7054:11:11",
																"nodeType": "YulFunctionCall",
																"src": "7054:11:11"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "7047:3:11",
																	"nodeType": "YulTypedName",
																	"src": "7047:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7130:140:11",
																"nodeType": "YulBlock",
																"src": "7130:140:11",
																"statements": [
																	{
																		"nativeSrc": "7144:14:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7144:14:11",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "7157:1:11",
																			"nodeType": "YulLiteral",
																			"src": "7157:1:11",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "7148:5:11",
																				"nodeType": "YulTypedName",
																				"src": "7148:5:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "7171:26:11",
																		"nodeType": "YulAssignment",
																		"src": "7171:26:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7193:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7193:3:11"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "7180:12:11",
																				"nodeType": "YulIdentifier",
																				"src": "7180:12:11"
																			},
																			"nativeSrc": "7180:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7180:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "value",
																				"nativeSrc": "7171:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7171:5:11"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7217:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7217:3:11"
																				},
																				{
																					"name": "value",
																					"nativeSrc": "7222:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "7222:5:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7210:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7210:6:11"
																			},
																			"nativeSrc": "7210:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7210:18:11"
																		},
																		"nativeSrc": "7210:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7210:18:11"
																	},
																	{
																		"nativeSrc": "7241:19:11",
																		"nodeType": "YulAssignment",
																		"src": "7241:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7252:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7252:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7257:2:11",
																					"nodeType": "YulLiteral",
																					"src": "7257:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7248:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7248:3:11"
																			},
																			"nativeSrc": "7248:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7248:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7241:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7241:3:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7085:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7085:3:11"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7090:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7090:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7082:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7082:2:11"
																},
																"nativeSrc": "7082:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7082:15:11"
															},
															"nativeSrc": "7074:196:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7098:23:11",
																"nodeType": "YulBlock",
																"src": "7098:23:11",
																"statements": [
																	{
																		"nativeSrc": "7100:19:11",
																		"nodeType": "YulAssignment",
																		"src": "7100:19:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7111:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7111:3:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7116:2:11",
																					"nodeType": "YulLiteral",
																					"src": "7116:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7107:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7107:3:11"
																			},
																			"nativeSrc": "7107:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7107:12:11"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7100:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7100:3:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7078:3:11",
																"nodeType": "YulBlock",
																"src": "7078:3:11",
																"statements": []
															},
															"src": "7074:196:11"
														},
														{
															"nativeSrc": "7279:15:11",
															"nodeType": "YulAssignment",
															"src": "7279:15:11",
															"value": {
																"name": "array",
																"nativeSrc": "7289:5:11",
																"nodeType": "YulIdentifier",
																"src": "7289:5:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "7279:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7279:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "5876:1424:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6005:9:11",
														"nodeType": "YulTypedName",
														"src": "6005:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6016:7:11",
														"nodeType": "YulTypedName",
														"src": "6016:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6028:6:11",
														"nodeType": "YulTypedName",
														"src": "6028:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6036:6:11",
														"nodeType": "YulTypedName",
														"src": "6036:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6044:6:11",
														"nodeType": "YulTypedName",
														"src": "6044:6:11",
														"type": ""
													}
												],
												"src": "5876:1424:11"
											},
											{
												"body": {
													"nativeSrc": "7409:270:11",
													"nodeType": "YulBlock",
													"src": "7409:270:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7455:16:11",
																"nodeType": "YulBlock",
																"src": "7455:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7464:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7464:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7467:1:11",
																					"nodeType": "YulLiteral",
																					"src": "7467:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7457:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7457:6:11"
																			},
																			"nativeSrc": "7457:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7457:12:11"
																		},
																		"nativeSrc": "7457:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7457:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7430:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7430:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7439:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7439:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7426:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7426:3:11"
																		},
																		"nativeSrc": "7426:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7426:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7451:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7451:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7422:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7422:3:11"
																},
																"nativeSrc": "7422:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7422:32:11"
															},
															"nativeSrc": "7419:52:11",
															"nodeType": "YulIf",
															"src": "7419:52:11"
														},
														{
															"nativeSrc": "7480:39:11",
															"nodeType": "YulAssignment",
															"src": "7480:39:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7509:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7509:9:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7490:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "7490:18:11"
																},
																"nativeSrc": "7490:29:11",
																"nodeType": "YulFunctionCall",
																"src": "7490:29:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7480:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7480:6:11"
																}
															]
														},
														{
															"nativeSrc": "7528:48:11",
															"nodeType": "YulAssignment",
															"src": "7528:48:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7561:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7561:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7572:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7572:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7557:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7557:3:11"
																		},
																		"nativeSrc": "7557:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7557:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "7538:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "7538:18:11"
																},
																"nativeSrc": "7538:38:11",
																"nodeType": "YulFunctionCall",
																"src": "7538:38:11"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7528:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7528:6:11"
																}
															]
														},
														{
															"nativeSrc": "7585:14:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7585:14:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7598:1:11",
																"nodeType": "YulLiteral",
																"src": "7598:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7589:5:11",
																	"nodeType": "YulTypedName",
																	"src": "7589:5:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7608:41:11",
															"nodeType": "YulAssignment",
															"src": "7608:41:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7634:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7634:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7645:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7645:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7630:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7630:3:11"
																		},
																		"nativeSrc": "7630:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7630:18:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7617:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "7617:12:11"
																},
																"nativeSrc": "7617:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7617:32:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7608:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "7608:5:11"
																}
															]
														},
														{
															"nativeSrc": "7658:15:11",
															"nodeType": "YulAssignment",
															"src": "7658:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "7668:5:11",
																"nodeType": "YulIdentifier",
																"src": "7668:5:11"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "7658:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7658:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "7305:374:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7359:9:11",
														"nodeType": "YulTypedName",
														"src": "7359:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7370:7:11",
														"nodeType": "YulTypedName",
														"src": "7370:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7382:6:11",
														"nodeType": "YulTypedName",
														"src": "7382:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7390:6:11",
														"nodeType": "YulTypedName",
														"src": "7390:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7398:6:11",
														"nodeType": "YulTypedName",
														"src": "7398:6:11",
														"type": ""
													}
												],
												"src": "7305:374:11"
											},
											{
												"body": {
													"nativeSrc": "7858:237:11",
													"nodeType": "YulBlock",
													"src": "7858:237:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7875:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7875:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7886:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7886:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7868:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7868:6:11"
																},
																"nativeSrc": "7868:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7868:21:11"
															},
															"nativeSrc": "7868:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "7868:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7909:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7909:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7920:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7920:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7905:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7905:3:11"
																		},
																		"nativeSrc": "7905:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7905:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7925:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7925:2:11",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7898:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7898:6:11"
																},
																"nativeSrc": "7898:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7898:30:11"
															},
															"nativeSrc": "7898:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "7898:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7948:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7948:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7959:2:11",
																				"nodeType": "YulLiteral",
																				"src": "7959:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7944:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7944:3:11"
																		},
																		"nativeSrc": "7944:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7944:18:11"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "7964:34:11",
																		"nodeType": "YulLiteral",
																		"src": "7964:34:11",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7937:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:11"
																},
																"nativeSrc": "7937:62:11",
																"nodeType": "YulFunctionCall",
																"src": "7937:62:11"
															},
															"nativeSrc": "7937:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "7937:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8019:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8019:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8030:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8030:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8015:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8015:3:11"
																		},
																		"nativeSrc": "8015:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8015:18:11"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "8035:17:11",
																		"nodeType": "YulLiteral",
																		"src": "8035:17:11",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8008:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8008:6:11"
																},
																"nativeSrc": "8008:45:11",
																"nodeType": "YulFunctionCall",
																"src": "8008:45:11"
															},
															"nativeSrc": "8008:45:11",
															"nodeType": "YulExpressionStatement",
															"src": "8008:45:11"
														},
														{
															"nativeSrc": "8062:27:11",
															"nodeType": "YulAssignment",
															"src": "8062:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8074:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8074:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8085:3:11",
																		"nodeType": "YulLiteral",
																		"src": "8085:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8070:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8070:3:11"
																},
																"nativeSrc": "8070:19:11",
																"nodeType": "YulFunctionCall",
																"src": "8070:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8062:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8062:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7684:411:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7835:9:11",
														"nodeType": "YulTypedName",
														"src": "7835:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7849:4:11",
														"nodeType": "YulTypedName",
														"src": "7849:4:11",
														"type": ""
													}
												],
												"src": "7684:411:11"
											},
											{
												"body": {
													"nativeSrc": "8132:95:11",
													"nodeType": "YulBlock",
													"src": "8132:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8149:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8149:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8156:3:11",
																				"nodeType": "YulLiteral",
																				"src": "8156:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8161:10:11",
																				"nodeType": "YulLiteral",
																				"src": "8161:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8152:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8152:3:11"
																		},
																		"nativeSrc": "8152:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8152:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8142:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8142:6:11"
																},
																"nativeSrc": "8142:31:11",
																"nodeType": "YulFunctionCall",
																"src": "8142:31:11"
															},
															"nativeSrc": "8142:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "8142:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8189:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8189:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8192:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8192:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8182:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8182:6:11"
																},
																"nativeSrc": "8182:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8182:15:11"
															},
															"nativeSrc": "8182:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8182:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8213:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8213:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8216:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8216:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8206:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8206:6:11"
																},
																"nativeSrc": "8206:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8206:15:11"
															},
															"nativeSrc": "8206:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8206:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8100:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "8100:127:11"
											},
											{
												"body": {
													"nativeSrc": "8406:179:11",
													"nodeType": "YulBlock",
													"src": "8406:179:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8423:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8423:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8434:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8434:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8416:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8416:6:11"
																},
																"nativeSrc": "8416:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8416:21:11"
															},
															"nativeSrc": "8416:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8416:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8457:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8457:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8468:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8468:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8453:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8453:3:11"
																		},
																		"nativeSrc": "8453:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8453:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8473:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8473:2:11",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8446:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8446:6:11"
																},
																"nativeSrc": "8446:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8446:30:11"
															},
															"nativeSrc": "8446:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8446:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8496:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8496:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8507:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8507:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8492:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8492:3:11"
																		},
																		"nativeSrc": "8492:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8492:18:11"
																	},
																	{
																		"hexValue": "556e69737761705632526f757465723a20494e56414c49445f50415448",
																		"kind": "string",
																		"nativeSrc": "8512:31:11",
																		"nodeType": "YulLiteral",
																		"src": "8512:31:11",
																		"type": "",
																		"value": "UniswapV2Router: INVALID_PATH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8485:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8485:6:11"
																},
																"nativeSrc": "8485:59:11",
																"nodeType": "YulFunctionCall",
																"src": "8485:59:11"
															},
															"nativeSrc": "8485:59:11",
															"nodeType": "YulExpressionStatement",
															"src": "8485:59:11"
														},
														{
															"nativeSrc": "8553:26:11",
															"nodeType": "YulAssignment",
															"src": "8553:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8565:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8565:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8576:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8576:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8561:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8561:3:11"
																},
																"nativeSrc": "8561:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8561:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8553:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8553:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6435d47a7cef43416f8f596d66beab1b30970728f1435d971438f7d89b0cfb94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8232:353:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8383:9:11",
														"nodeType": "YulTypedName",
														"src": "8383:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8397:4:11",
														"nodeType": "YulTypedName",
														"src": "8397:4:11",
														"type": ""
													}
												],
												"src": "8232:353:11"
											},
											{
												"body": {
													"nativeSrc": "8764:174:11",
													"nodeType": "YulBlock",
													"src": "8764:174:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8781:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8781:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8792:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8792:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8774:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8774:6:11"
																},
																"nativeSrc": "8774:21:11",
																"nodeType": "YulFunctionCall",
																"src": "8774:21:11"
															},
															"nativeSrc": "8774:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "8774:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8826:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:11"
																		},
																		"nativeSrc": "8811:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8831:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8831:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8804:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8804:6:11"
																},
																"nativeSrc": "8804:30:11",
																"nodeType": "YulFunctionCall",
																"src": "8804:30:11"
															},
															"nativeSrc": "8804:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "8804:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8854:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8854:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8865:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8865:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8850:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8850:3:11"
																		},
																		"nativeSrc": "8850:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8850:18:11"
																	},
																	{
																		"hexValue": "556e69737761705632526f757465723a2045585049524544",
																		"kind": "string",
																		"nativeSrc": "8870:26:11",
																		"nodeType": "YulLiteral",
																		"src": "8870:26:11",
																		"type": "",
																		"value": "UniswapV2Router: EXPIRED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8843:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8843:6:11"
																},
																"nativeSrc": "8843:54:11",
																"nodeType": "YulFunctionCall",
																"src": "8843:54:11"
															},
															"nativeSrc": "8843:54:11",
															"nodeType": "YulExpressionStatement",
															"src": "8843:54:11"
														},
														{
															"nativeSrc": "8906:26:11",
															"nodeType": "YulAssignment",
															"src": "8906:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8918:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8918:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8929:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8929:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8914:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8914:3:11"
																},
																"nativeSrc": "8914:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8914:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8906:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8906:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a9d3f3429d6f7d601e79a56388ebaeef879c178f6da38e08a509d9e3994b6a6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8590:348:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8741:9:11",
														"nodeType": "YulTypedName",
														"src": "8741:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8755:4:11",
														"nodeType": "YulTypedName",
														"src": "8755:4:11",
														"type": ""
													}
												],
												"src": "8590:348:11"
											},
											{
												"body": {
													"nativeSrc": "9117:233:11",
													"nodeType": "YulBlock",
													"src": "9117:233:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9134:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9134:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9145:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9145:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9127:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9127:6:11"
																},
																"nativeSrc": "9127:21:11",
																"nodeType": "YulFunctionCall",
																"src": "9127:21:11"
															},
															"nativeSrc": "9127:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "9127:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9168:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9168:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9179:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9179:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9164:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9164:3:11"
																		},
																		"nativeSrc": "9164:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9164:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9184:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9184:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9157:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9157:6:11"
																},
																"nativeSrc": "9157:30:11",
																"nodeType": "YulFunctionCall",
																"src": "9157:30:11"
															},
															"nativeSrc": "9157:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "9157:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9207:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9207:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9218:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9218:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9203:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9203:3:11"
																		},
																		"nativeSrc": "9203:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9203:18:11"
																	},
																	{
																		"hexValue": "556e69737761705632526f757465723a20494e53554646494349454e545f4f55",
																		"kind": "string",
																		"nativeSrc": "9223:34:11",
																		"nodeType": "YulLiteral",
																		"src": "9223:34:11",
																		"type": "",
																		"value": "UniswapV2Router: INSUFFICIENT_OU"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9196:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9196:6:11"
																},
																"nativeSrc": "9196:62:11",
																"nodeType": "YulFunctionCall",
																"src": "9196:62:11"
															},
															"nativeSrc": "9196:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "9196:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9278:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9278:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9289:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9289:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9274:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9274:3:11"
																		},
																		"nativeSrc": "9274:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9274:18:11"
																	},
																	{
																		"hexValue": "545055545f414d4f554e54",
																		"kind": "string",
																		"nativeSrc": "9294:13:11",
																		"nodeType": "YulLiteral",
																		"src": "9294:13:11",
																		"type": "",
																		"value": "TPUT_AMOUNT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9267:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:11"
																},
																"nativeSrc": "9267:41:11",
																"nodeType": "YulFunctionCall",
																"src": "9267:41:11"
															},
															"nativeSrc": "9267:41:11",
															"nodeType": "YulExpressionStatement",
															"src": "9267:41:11"
														},
														{
															"nativeSrc": "9317:27:11",
															"nodeType": "YulAssignment",
															"src": "9317:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9329:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9329:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9340:3:11",
																		"nodeType": "YulLiteral",
																		"src": "9340:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9325:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9325:3:11"
																},
																"nativeSrc": "9325:19:11",
																"nodeType": "YulFunctionCall",
																"src": "9325:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9317:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9317:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4ea67bea551891ab36be726b8e631181246034dffcfd5c0bbfad1e9d1729432__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8943:407:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9094:9:11",
														"nodeType": "YulTypedName",
														"src": "9094:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9108:4:11",
														"nodeType": "YulTypedName",
														"src": "9108:4:11",
														"type": ""
													}
												],
												"src": "8943:407:11"
											},
											{
												"body": {
													"nativeSrc": "9484:171:11",
													"nodeType": "YulBlock",
													"src": "9484:171:11",
													"statements": [
														{
															"nativeSrc": "9494:26:11",
															"nodeType": "YulAssignment",
															"src": "9494:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9506:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9506:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9517:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9517:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9502:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9502:3:11"
																},
																"nativeSrc": "9502:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9502:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9494:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9494:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9536:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9536:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9551:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9551:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9567:3:11",
																								"nodeType": "YulLiteral",
																								"src": "9567:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9572:1:11",
																								"nodeType": "YulLiteral",
																								"src": "9572:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9563:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9563:3:11"
																						},
																						"nativeSrc": "9563:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9563:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9576:1:11",
																						"nodeType": "YulLiteral",
																						"src": "9576:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9559:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9559:3:11"
																				},
																				"nativeSrc": "9559:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9559:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9547:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9547:3:11"
																		},
																		"nativeSrc": "9547:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9547:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9529:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9529:6:11"
																},
																"nativeSrc": "9529:51:11",
																"nodeType": "YulFunctionCall",
																"src": "9529:51:11"
															},
															"nativeSrc": "9529:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "9529:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9600:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9600:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9611:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9611:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9596:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9596:3:11"
																		},
																		"nativeSrc": "9596:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9596:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "9620:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9620:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9636:3:11",
																								"nodeType": "YulLiteral",
																								"src": "9636:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9641:1:11",
																								"nodeType": "YulLiteral",
																								"src": "9641:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9632:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "9632:3:11"
																						},
																						"nativeSrc": "9632:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "9632:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9645:1:11",
																						"nodeType": "YulLiteral",
																						"src": "9645:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9628:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:11"
																				},
																				"nativeSrc": "9628:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9616:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9616:3:11"
																		},
																		"nativeSrc": "9616:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9616:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9589:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9589:6:11"
																},
																"nativeSrc": "9589:60:11",
																"nodeType": "YulFunctionCall",
																"src": "9589:60:11"
															},
															"nativeSrc": "9589:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "9589:60:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "9355:300:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9445:9:11",
														"nodeType": "YulTypedName",
														"src": "9445:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9456:6:11",
														"nodeType": "YulTypedName",
														"src": "9456:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9464:6:11",
														"nodeType": "YulTypedName",
														"src": "9464:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9475:4:11",
														"nodeType": "YulTypedName",
														"src": "9475:4:11",
														"type": ""
													}
												],
												"src": "9355:300:11"
											},
											{
												"body": {
													"nativeSrc": "9741:103:11",
													"nodeType": "YulBlock",
													"src": "9741:103:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "9787:16:11",
																"nodeType": "YulBlock",
																"src": "9787:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9796:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9796:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9799:1:11",
																					"nodeType": "YulLiteral",
																					"src": "9799:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9789:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9789:6:11"
																			},
																			"nativeSrc": "9789:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9789:12:11"
																		},
																		"nativeSrc": "9789:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9789:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9762:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "9762:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9771:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9771:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9758:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9758:3:11"
																		},
																		"nativeSrc": "9758:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9758:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9783:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9783:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9754:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9754:3:11"
																},
																"nativeSrc": "9754:32:11",
																"nodeType": "YulFunctionCall",
																"src": "9754:32:11"
															},
															"nativeSrc": "9751:52:11",
															"nodeType": "YulIf",
															"src": "9751:52:11"
														},
														{
															"nativeSrc": "9812:26:11",
															"nodeType": "YulAssignment",
															"src": "9812:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9828:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9828:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9822:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "9822:5:11"
																},
																"nativeSrc": "9822:16:11",
																"nodeType": "YulFunctionCall",
																"src": "9822:16:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9812:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9812:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "9660:184:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9707:9:11",
														"nodeType": "YulTypedName",
														"src": "9707:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9718:7:11",
														"nodeType": "YulTypedName",
														"src": "9718:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9730:6:11",
														"nodeType": "YulTypedName",
														"src": "9730:6:11",
														"type": ""
													}
												],
												"src": "9660:184:11"
											},
											{
												"body": {
													"nativeSrc": "10023:234:11",
													"nodeType": "YulBlock",
													"src": "10023:234:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10040:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10040:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10051:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10051:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10033:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10033:6:11"
																},
																"nativeSrc": "10033:21:11",
																"nodeType": "YulFunctionCall",
																"src": "10033:21:11"
															},
															"nativeSrc": "10033:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "10033:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10074:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10074:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10085:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10085:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10070:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10070:3:11"
																		},
																		"nativeSrc": "10070:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10070:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10090:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10090:2:11",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10063:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10063:6:11"
																},
																"nativeSrc": "10063:30:11",
																"nodeType": "YulFunctionCall",
																"src": "10063:30:11"
															},
															"nativeSrc": "10063:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "10063:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10113:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10113:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10124:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10124:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10109:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10109:3:11"
																		},
																		"nativeSrc": "10109:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10109:18:11"
																	},
																	{
																		"hexValue": "556e69737761705632526f757465723a20494e53554646494349454e545f414d",
																		"kind": "string",
																		"nativeSrc": "10129:34:11",
																		"nodeType": "YulLiteral",
																		"src": "10129:34:11",
																		"type": "",
																		"value": "UniswapV2Router: INSUFFICIENT_AM"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10102:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10102:6:11"
																},
																"nativeSrc": "10102:62:11",
																"nodeType": "YulFunctionCall",
																"src": "10102:62:11"
															},
															"nativeSrc": "10102:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "10102:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10184:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10184:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10195:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10195:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10180:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10180:3:11"
																		},
																		"nativeSrc": "10180:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10180:18:11"
																	},
																	{
																		"hexValue": "4f554e545f414c4c4f574544",
																		"kind": "string",
																		"nativeSrc": "10200:14:11",
																		"nodeType": "YulLiteral",
																		"src": "10200:14:11",
																		"type": "",
																		"value": "OUNT_ALLOWED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10173:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10173:6:11"
																},
																"nativeSrc": "10173:42:11",
																"nodeType": "YulFunctionCall",
																"src": "10173:42:11"
															},
															"nativeSrc": "10173:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "10173:42:11"
														},
														{
															"nativeSrc": "10224:27:11",
															"nodeType": "YulAssignment",
															"src": "10224:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10236:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10236:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10247:3:11",
																		"nodeType": "YulLiteral",
																		"src": "10247:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10232:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10232:3:11"
																},
																"nativeSrc": "10232:19:11",
																"nodeType": "YulFunctionCall",
																"src": "10232:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10224:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10224:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0bcbbbbe436530a4b61f43295135097bf7668636b4f4254b31ef3e7629e3509__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9849:408:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10000:9:11",
														"nodeType": "YulTypedName",
														"src": "10000:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10014:4:11",
														"nodeType": "YulTypedName",
														"src": "10014:4:11",
														"type": ""
													}
												],
												"src": "9849:408:11"
											},
											{
												"body": {
													"nativeSrc": "10391:145:11",
													"nodeType": "YulBlock",
													"src": "10391:145:11",
													"statements": [
														{
															"nativeSrc": "10401:26:11",
															"nodeType": "YulAssignment",
															"src": "10401:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10413:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10413:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10424:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10424:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10409:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10409:3:11"
																},
																"nativeSrc": "10409:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10409:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10401:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10401:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10443:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10443:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "10458:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10458:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "10474:3:11",
																								"nodeType": "YulLiteral",
																								"src": "10474:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10479:1:11",
																								"nodeType": "YulLiteral",
																								"src": "10479:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "10470:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "10470:3:11"
																						},
																						"nativeSrc": "10470:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10470:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10483:1:11",
																						"nodeType": "YulLiteral",
																						"src": "10483:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "10466:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "10466:3:11"
																				},
																				"nativeSrc": "10466:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10466:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10454:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10454:3:11"
																		},
																		"nativeSrc": "10454:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10454:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10436:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10436:6:11"
																},
																"nativeSrc": "10436:51:11",
																"nodeType": "YulFunctionCall",
																"src": "10436:51:11"
															},
															"nativeSrc": "10436:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "10436:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10507:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10507:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10518:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10518:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10503:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10503:3:11"
																		},
																		"nativeSrc": "10503:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10503:18:11"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10523:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10523:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10496:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10496:6:11"
																},
																"nativeSrc": "10496:34:11",
																"nodeType": "YulFunctionCall",
																"src": "10496:34:11"
															},
															"nativeSrc": "10496:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "10496:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10262:274:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10352:9:11",
														"nodeType": "YulTypedName",
														"src": "10352:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10363:6:11",
														"nodeType": "YulTypedName",
														"src": "10363:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10371:6:11",
														"nodeType": "YulTypedName",
														"src": "10371:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10382:4:11",
														"nodeType": "YulTypedName",
														"src": "10382:4:11",
														"type": ""
													}
												],
												"src": "10262:274:11"
											},
											{
												"body": {
													"nativeSrc": "10619:199:11",
													"nodeType": "YulBlock",
													"src": "10619:199:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "10665:16:11",
																"nodeType": "YulBlock",
																"src": "10665:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10674:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10674:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10677:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10667:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10667:6:11"
																			},
																			"nativeSrc": "10667:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10667:12:11"
																		},
																		"nativeSrc": "10667:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10667:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10640:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "10640:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10649:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10649:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10636:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10636:3:11"
																		},
																		"nativeSrc": "10636:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10636:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10661:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10661:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10632:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10632:3:11"
																},
																"nativeSrc": "10632:32:11",
																"nodeType": "YulFunctionCall",
																"src": "10632:32:11"
															},
															"nativeSrc": "10629:52:11",
															"nodeType": "YulIf",
															"src": "10629:52:11"
														},
														{
															"nativeSrc": "10690:29:11",
															"nodeType": "YulVariableDeclaration",
															"src": "10690:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10709:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10709:9:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10703:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "10703:5:11"
																},
																"nativeSrc": "10703:16:11",
																"nodeType": "YulFunctionCall",
																"src": "10703:16:11"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "10694:5:11",
																	"nodeType": "YulTypedName",
																	"src": "10694:5:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10772:16:11",
																"nodeType": "YulBlock",
																"src": "10772:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10781:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10781:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10784:1:11",
																					"nodeType": "YulLiteral",
																					"src": "10784:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10774:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10774:6:11"
																			},
																			"nativeSrc": "10774:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10774:12:11"
																		},
																		"nativeSrc": "10774:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10774:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10741:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10741:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "10762:5:11",
																								"nodeType": "YulIdentifier",
																								"src": "10762:5:11"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "10755:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "10755:6:11"
																						},
																						"nativeSrc": "10755:13:11",
																						"nodeType": "YulFunctionCall",
																						"src": "10755:13:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10748:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "10748:6:11"
																				},
																				"nativeSrc": "10748:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "10748:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10738:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "10738:2:11"
																		},
																		"nativeSrc": "10738:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10738:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10731:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10731:6:11"
																},
																"nativeSrc": "10731:40:11",
																"nodeType": "YulFunctionCall",
																"src": "10731:40:11"
															},
															"nativeSrc": "10728:60:11",
															"nodeType": "YulIf",
															"src": "10728:60:11"
														},
														{
															"nativeSrc": "10797:15:11",
															"nodeType": "YulAssignment",
															"src": "10797:15:11",
															"value": {
																"name": "value",
																"nativeSrc": "10807:5:11",
																"nodeType": "YulIdentifier",
																"src": "10807:5:11"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10797:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10797:6:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10541:277:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10585:9:11",
														"nodeType": "YulTypedName",
														"src": "10585:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10596:7:11",
														"nodeType": "YulTypedName",
														"src": "10596:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10608:6:11",
														"nodeType": "YulTypedName",
														"src": "10608:6:11",
														"type": ""
													}
												],
												"src": "10541:277:11"
											},
											{
												"body": {
													"nativeSrc": "10980:214:11",
													"nodeType": "YulBlock",
													"src": "10980:214:11",
													"statements": [
														{
															"nativeSrc": "10990:26:11",
															"nodeType": "YulAssignment",
															"src": "10990:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11002:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11002:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11013:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11013:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10998:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10998:3:11"
																},
																"nativeSrc": "10998:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10998:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10990:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10990:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11032:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11032:9:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11047:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11047:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11063:3:11",
																								"nodeType": "YulLiteral",
																								"src": "11063:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11068:1:11",
																								"nodeType": "YulLiteral",
																								"src": "11068:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11059:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11059:3:11"
																						},
																						"nativeSrc": "11059:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11059:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11072:1:11",
																						"nodeType": "YulLiteral",
																						"src": "11072:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11055:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11055:3:11"
																				},
																				"nativeSrc": "11055:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11055:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11043:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11043:3:11"
																		},
																		"nativeSrc": "11043:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11043:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11025:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11025:6:11"
																},
																"nativeSrc": "11025:51:11",
																"nodeType": "YulFunctionCall",
																"src": "11025:51:11"
															},
															"nativeSrc": "11025:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "11025:51:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11096:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11096:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11107:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11107:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11092:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11092:3:11"
																		},
																		"nativeSrc": "11092:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11092:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11116:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11116:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "11132:3:11",
																								"nodeType": "YulLiteral",
																								"src": "11132:3:11",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11137:1:11",
																								"nodeType": "YulLiteral",
																								"src": "11137:1:11",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "11128:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "11128:3:11"
																						},
																						"nativeSrc": "11128:11:11",
																						"nodeType": "YulFunctionCall",
																						"src": "11128:11:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11141:1:11",
																						"nodeType": "YulLiteral",
																						"src": "11141:1:11",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11124:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "11124:3:11"
																				},
																				"nativeSrc": "11124:19:11",
																				"nodeType": "YulFunctionCall",
																				"src": "11124:19:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11112:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11112:3:11"
																		},
																		"nativeSrc": "11112:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11112:32:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11085:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11085:6:11"
																},
																"nativeSrc": "11085:60:11",
																"nodeType": "YulFunctionCall",
																"src": "11085:60:11"
															},
															"nativeSrc": "11085:60:11",
															"nodeType": "YulExpressionStatement",
															"src": "11085:60:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11165:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11165:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11176:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11176:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11161:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11161:3:11"
																		},
																		"nativeSrc": "11161:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11161:18:11"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11181:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11181:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11154:6:11"
																},
																"nativeSrc": "11154:34:11",
																"nodeType": "YulFunctionCall",
																"src": "11154:34:11"
															},
															"nativeSrc": "11154:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "11154:34:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "10823:371:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10933:9:11",
														"nodeType": "YulTypedName",
														"src": "10933:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10944:6:11",
														"nodeType": "YulTypedName",
														"src": "10944:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10952:6:11",
														"nodeType": "YulTypedName",
														"src": "10952:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10960:6:11",
														"nodeType": "YulTypedName",
														"src": "10960:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10971:4:11",
														"nodeType": "YulTypedName",
														"src": "10971:4:11",
														"type": ""
													}
												],
												"src": "10823:371:11"
											},
											{
												"body": {
													"nativeSrc": "11373:243:11",
													"nodeType": "YulBlock",
													"src": "11373:243:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11390:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11390:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11401:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11401:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11383:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11383:6:11"
																},
																"nativeSrc": "11383:21:11",
																"nodeType": "YulFunctionCall",
																"src": "11383:21:11"
															},
															"nativeSrc": "11383:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "11383:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11424:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11424:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11435:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11435:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11420:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11420:3:11"
																		},
																		"nativeSrc": "11420:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11420:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11440:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11440:2:11",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11413:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11413:6:11"
																},
																"nativeSrc": "11413:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11413:30:11"
															},
															"nativeSrc": "11413:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "11413:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11463:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11463:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11474:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11474:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11459:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11459:3:11"
																		},
																		"nativeSrc": "11459:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11459:18:11"
																	},
																	{
																		"hexValue": "556e69737761705632526f757465723a20616d6f756e74496e2073686f756c64",
																		"kind": "string",
																		"nativeSrc": "11479:34:11",
																		"nodeType": "YulLiteral",
																		"src": "11479:34:11",
																		"type": "",
																		"value": "UniswapV2Router: amountIn should"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11452:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11452:6:11"
																},
																"nativeSrc": "11452:62:11",
																"nodeType": "YulFunctionCall",
																"src": "11452:62:11"
															},
															"nativeSrc": "11452:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "11452:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11534:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11534:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11545:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11545:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11530:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11530:3:11"
																		},
																		"nativeSrc": "11530:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11530:18:11"
																	},
																	{
																		"hexValue": "2062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "11550:23:11",
																		"nodeType": "YulLiteral",
																		"src": "11550:23:11",
																		"type": "",
																		"value": " be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11523:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11523:6:11"
																},
																"nativeSrc": "11523:51:11",
																"nodeType": "YulFunctionCall",
																"src": "11523:51:11"
															},
															"nativeSrc": "11523:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "11523:51:11"
														},
														{
															"nativeSrc": "11583:27:11",
															"nodeType": "YulAssignment",
															"src": "11583:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11595:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11595:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11606:3:11",
																		"nodeType": "YulLiteral",
																		"src": "11606:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11591:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11591:3:11"
																},
																"nativeSrc": "11591:19:11",
																"nodeType": "YulFunctionCall",
																"src": "11591:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11583:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11583:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_29acd408d8afda248b568ac22c80ebc7d6d115c93f3fd64f6097ddc942aedfcf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11199:417:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11350:9:11",
														"nodeType": "YulTypedName",
														"src": "11350:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11364:4:11",
														"nodeType": "YulTypedName",
														"src": "11364:4:11",
														"type": ""
													}
												],
												"src": "11199:417:11"
											},
											{
												"body": {
													"nativeSrc": "11795:240:11",
													"nodeType": "YulBlock",
													"src": "11795:240:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11812:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11812:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11823:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11823:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11805:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11805:6:11"
																},
																"nativeSrc": "11805:21:11",
																"nodeType": "YulFunctionCall",
																"src": "11805:21:11"
															},
															"nativeSrc": "11805:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "11805:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11846:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11846:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11857:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11857:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11842:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11842:3:11"
																		},
																		"nativeSrc": "11842:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11842:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11862:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11862:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11835:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11835:6:11"
																},
																"nativeSrc": "11835:30:11",
																"nodeType": "YulFunctionCall",
																"src": "11835:30:11"
															},
															"nativeSrc": "11835:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "11835:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11885:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11885:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11896:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11896:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11881:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11881:3:11"
																		},
																		"nativeSrc": "11881:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11881:18:11"
																	},
																	{
																		"hexValue": "556e69737761705632526f757465723a207061746820636f6e7461696e732061",
																		"kind": "string",
																		"nativeSrc": "11901:34:11",
																		"nodeType": "YulLiteral",
																		"src": "11901:34:11",
																		"type": "",
																		"value": "UniswapV2Router: path contains a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11874:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11874:6:11"
																},
																"nativeSrc": "11874:62:11",
																"nodeType": "YulFunctionCall",
																"src": "11874:62:11"
															},
															"nativeSrc": "11874:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "11874:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11956:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11956:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11967:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11967:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11952:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11952:3:11"
																		},
																		"nativeSrc": "11952:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11952:18:11"
																	},
																	{
																		"hexValue": "74206c65617374203220656c656d656e7473",
																		"kind": "string",
																		"nativeSrc": "11972:20:11",
																		"nodeType": "YulLiteral",
																		"src": "11972:20:11",
																		"type": "",
																		"value": "t least 2 elements"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11945:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11945:6:11"
																},
																"nativeSrc": "11945:48:11",
																"nodeType": "YulFunctionCall",
																"src": "11945:48:11"
															},
															"nativeSrc": "11945:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "11945:48:11"
														},
														{
															"nativeSrc": "12002:27:11",
															"nodeType": "YulAssignment",
															"src": "12002:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12014:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12014:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12025:3:11",
																		"nodeType": "YulLiteral",
																		"src": "12025:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12010:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12010:3:11"
																},
																"nativeSrc": "12010:19:11",
																"nodeType": "YulFunctionCall",
																"src": "12010:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12002:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12002:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc542683e8818ff716879d376d0f2865e4cdfc390a34f54109b63f66fd90d1bf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11621:414:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11772:9:11",
														"nodeType": "YulTypedName",
														"src": "11772:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11786:4:11",
														"nodeType": "YulTypedName",
														"src": "11786:4:11",
														"type": ""
													}
												],
												"src": "11621:414:11"
											},
											{
												"body": {
													"nativeSrc": "12072:95:11",
													"nodeType": "YulBlock",
													"src": "12072:95:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12089:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12089:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12096:3:11",
																				"nodeType": "YulLiteral",
																				"src": "12096:3:11",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12101:10:11",
																				"nodeType": "YulLiteral",
																				"src": "12101:10:11",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12092:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12092:3:11"
																		},
																		"nativeSrc": "12092:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12092:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12082:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12082:6:11"
																},
																"nativeSrc": "12082:31:11",
																"nodeType": "YulFunctionCall",
																"src": "12082:31:11"
															},
															"nativeSrc": "12082:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "12082:31:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12129:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12129:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12132:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12132:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12122:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12122:6:11"
																},
																"nativeSrc": "12122:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12122:15:11"
															},
															"nativeSrc": "12122:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12122:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12153:1:11",
																		"nodeType": "YulLiteral",
																		"src": "12153:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12156:4:11",
																		"nodeType": "YulLiteral",
																		"src": "12156:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12146:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12146:6:11"
																},
																"nativeSrc": "12146:15:11",
																"nodeType": "YulFunctionCall",
																"src": "12146:15:11"
															},
															"nativeSrc": "12146:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "12146:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "12040:127:11",
												"nodeType": "YulFunctionDefinition",
												"src": "12040:127:11"
											},
											{
												"body": {
													"nativeSrc": "12221:79:11",
													"nodeType": "YulBlock",
													"src": "12221:79:11",
													"statements": [
														{
															"nativeSrc": "12231:17:11",
															"nodeType": "YulAssignment",
															"src": "12231:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12243:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12243:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12246:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12246:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12239:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12239:3:11"
																},
																"nativeSrc": "12239:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12239:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12231:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12231:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12272:22:11",
																"nodeType": "YulBlock",
																"src": "12272:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12274:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12274:16:11"
																			},
																			"nativeSrc": "12274:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12274:18:11"
																		},
																		"nativeSrc": "12274:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12274:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12263:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12263:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12269:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12269:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12260:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "12260:2:11"
																},
																"nativeSrc": "12260:11:11",
																"nodeType": "YulFunctionCall",
																"src": "12260:11:11"
															},
															"nativeSrc": "12257:37:11",
															"nodeType": "YulIf",
															"src": "12257:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12172:128:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12203:1:11",
														"nodeType": "YulTypedName",
														"src": "12203:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12206:1:11",
														"nodeType": "YulTypedName",
														"src": "12206:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12212:4:11",
														"nodeType": "YulTypedName",
														"src": "12212:4:11",
														"type": ""
													}
												],
												"src": "12172:128:11"
											},
											{
												"body": {
													"nativeSrc": "12353:77:11",
													"nodeType": "YulBlock",
													"src": "12353:77:11",
													"statements": [
														{
															"nativeSrc": "12363:16:11",
															"nodeType": "YulAssignment",
															"src": "12363:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12374:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12374:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12377:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12377:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12370:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12370:3:11"
																},
																"nativeSrc": "12370:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12370:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12363:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12363:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12402:22:11",
																"nodeType": "YulBlock",
																"src": "12402:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12404:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12404:16:11"
																			},
																			"nativeSrc": "12404:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12404:18:11"
																		},
																		"nativeSrc": "12404:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12404:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12394:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12394:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12397:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12397:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12391:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "12391:2:11"
																},
																"nativeSrc": "12391:10:11",
																"nodeType": "YulFunctionCall",
																"src": "12391:10:11"
															},
															"nativeSrc": "12388:36:11",
															"nodeType": "YulIf",
															"src": "12388:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12305:125:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12336:1:11",
														"nodeType": "YulTypedName",
														"src": "12336:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12339:1:11",
														"nodeType": "YulTypedName",
														"src": "12339:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12345:3:11",
														"nodeType": "YulTypedName",
														"src": "12345:3:11",
														"type": ""
													}
												],
												"src": "12305:125:11"
											},
											{
												"body": {
													"nativeSrc": "12487:116:11",
													"nodeType": "YulBlock",
													"src": "12487:116:11",
													"statements": [
														{
															"nativeSrc": "12497:20:11",
															"nodeType": "YulAssignment",
															"src": "12497:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12512:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12512:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12515:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12515:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12508:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12508:3:11"
																},
																"nativeSrc": "12508:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12508:9:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12497:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "12497:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12575:22:11",
																"nodeType": "YulBlock",
																"src": "12575:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12577:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "12577:16:11"
																			},
																			"nativeSrc": "12577:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12577:18:11"
																		},
																		"nativeSrc": "12577:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12577:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12546:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "12546:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12539:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "12539:6:11"
																				},
																				"nativeSrc": "12539:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12539:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12553:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "12553:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12560:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "12560:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12569:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "12569:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12556:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "12556:3:11"
																						},
																						"nativeSrc": "12556:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "12556:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12550:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "12550:2:11"
																				},
																				"nativeSrc": "12550:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "12550:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12536:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "12536:2:11"
																		},
																		"nativeSrc": "12536:37:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12536:37:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12529:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12529:6:11"
																},
																"nativeSrc": "12529:45:11",
																"nodeType": "YulFunctionCall",
																"src": "12529:45:11"
															},
															"nativeSrc": "12526:71:11",
															"nodeType": "YulIf",
															"src": "12526:71:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12435:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12466:1:11",
														"nodeType": "YulTypedName",
														"src": "12466:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12469:1:11",
														"nodeType": "YulTypedName",
														"src": "12469:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12475:7:11",
														"nodeType": "YulTypedName",
														"src": "12475:7:11",
														"type": ""
													}
												],
												"src": "12435:168:11"
											},
											{
												"body": {
													"nativeSrc": "12654:171:11",
													"nodeType": "YulBlock",
													"src": "12654:171:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "12685:111:11",
																"nodeType": "YulBlock",
																"src": "12685:111:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12706:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12706:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12713:3:11",
																							"nodeType": "YulLiteral",
																							"src": "12713:3:11",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "12718:10:11",
																							"nodeType": "YulLiteral",
																							"src": "12718:10:11",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "12709:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "12709:3:11"
																					},
																					"nativeSrc": "12709:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "12709:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12699:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12699:6:11"
																			},
																			"nativeSrc": "12699:31:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12699:31:11"
																		},
																		"nativeSrc": "12699:31:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12699:31:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12750:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12750:1:11",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12753:4:11",
																					"nodeType": "YulLiteral",
																					"src": "12753:4:11",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12743:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12743:6:11"
																			},
																			"nativeSrc": "12743:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12743:15:11"
																		},
																		"nativeSrc": "12743:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12743:15:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12778:1:11",
																					"nodeType": "YulLiteral",
																					"src": "12778:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12781:4:11",
																					"nodeType": "YulLiteral",
																					"src": "12781:4:11",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12771:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "12771:6:11"
																			},
																			"nativeSrc": "12771:15:11",
																			"nodeType": "YulFunctionCall",
																			"src": "12771:15:11"
																		},
																		"nativeSrc": "12771:15:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "12771:15:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12674:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12674:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12667:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12667:6:11"
																},
																"nativeSrc": "12667:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12667:9:11"
															},
															"nativeSrc": "12664:132:11",
															"nodeType": "YulIf",
															"src": "12664:132:11"
														},
														{
															"nativeSrc": "12805:14:11",
															"nodeType": "YulAssignment",
															"src": "12805:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12814:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12814:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12817:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12817:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12810:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12810:3:11"
																},
																"nativeSrc": "12810:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12810:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12805:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12805:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "12608:217:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12639:1:11",
														"nodeType": "YulTypedName",
														"src": "12639:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12642:1:11",
														"nodeType": "YulTypedName",
														"src": "12642:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "12648:1:11",
														"nodeType": "YulTypedName",
														"src": "12648:1:11",
														"type": ""
													}
												],
												"src": "12608:217:11"
											},
											{
												"body": {
													"nativeSrc": "13004:300:11",
													"nodeType": "YulBlock",
													"src": "13004:300:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13021:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13021:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13032:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13032:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13014:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13014:6:11"
																},
																"nativeSrc": "13014:21:11",
																"nodeType": "YulFunctionCall",
																"src": "13014:21:11"
															},
															"nativeSrc": "13014:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "13014:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13055:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13055:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13066:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13066:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13051:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13051:3:11"
																		},
																		"nativeSrc": "13051:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13051:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13071:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13071:2:11",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13044:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13044:6:11"
																},
																"nativeSrc": "13044:30:11",
																"nodeType": "YulFunctionCall",
																"src": "13044:30:11"
															},
															"nativeSrc": "13044:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "13044:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13094:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13094:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13105:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13105:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13090:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13090:3:11"
																		},
																		"nativeSrc": "13090:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13090:18:11"
																	},
																	{
																		"hexValue": "556e69737761705632526f757465723a20546f6b656e73206172726179206973",
																		"kind": "string",
																		"nativeSrc": "13110:34:11",
																		"nodeType": "YulLiteral",
																		"src": "13110:34:11",
																		"type": "",
																		"value": "UniswapV2Router: Tokens array is"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13083:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13083:6:11"
																},
																"nativeSrc": "13083:62:11",
																"nodeType": "YulFunctionCall",
																"src": "13083:62:11"
															},
															"nativeSrc": "13083:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "13083:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13165:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13165:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13176:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13176:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13161:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13161:3:11"
																		},
																		"nativeSrc": "13161:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13161:18:11"
																	},
																	{
																		"hexValue": "20746f6f206c6f6e672c2072656475636520746865206e756d626572206f6620",
																		"kind": "string",
																		"nativeSrc": "13181:34:11",
																		"nodeType": "YulLiteral",
																		"src": "13181:34:11",
																		"type": "",
																		"value": " too long, reduce the number of "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13154:6:11"
																},
																"nativeSrc": "13154:62:11",
																"nodeType": "YulFunctionCall",
																"src": "13154:62:11"
															},
															"nativeSrc": "13154:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "13154:62:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13236:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13236:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13247:3:11",
																				"nodeType": "YulLiteral",
																				"src": "13247:3:11",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13232:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13232:3:11"
																		},
																		"nativeSrc": "13232:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13232:19:11"
																	},
																	{
																		"hexValue": "746f6b656e73",
																		"kind": "string",
																		"nativeSrc": "13253:8:11",
																		"nodeType": "YulLiteral",
																		"src": "13253:8:11",
																		"type": "",
																		"value": "tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13225:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13225:6:11"
																},
																"nativeSrc": "13225:37:11",
																"nodeType": "YulFunctionCall",
																"src": "13225:37:11"
															},
															"nativeSrc": "13225:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "13225:37:11"
														},
														{
															"nativeSrc": "13271:27:11",
															"nodeType": "YulAssignment",
															"src": "13271:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13283:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13283:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13294:3:11",
																		"nodeType": "YulLiteral",
																		"src": "13294:3:11",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13279:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13279:3:11"
																},
																"nativeSrc": "13279:19:11",
																"nodeType": "YulFunctionCall",
																"src": "13279:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13271:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13271:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0a84dd8250d98c57d65326b71d5da4964385e7fbd92b05a3cbe874c127db80e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12830:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12981:9:11",
														"nodeType": "YulTypedName",
														"src": "12981:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12995:4:11",
														"nodeType": "YulTypedName",
														"src": "12995:4:11",
														"type": ""
													}
												],
												"src": "12830:474:11"
											},
											{
												"body": {
													"nativeSrc": "13359:162:11",
													"nodeType": "YulBlock",
													"src": "13359:162:11",
													"statements": [
														{
															"nativeSrc": "13369:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13369:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13389:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "13389:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13383:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13383:5:11"
																},
																"nativeSrc": "13383:12:11",
																"nodeType": "YulFunctionCall",
																"src": "13383:12:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13373:6:11",
																	"nodeType": "YulTypedName",
																	"src": "13373:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13410:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13410:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13419:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "13419:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13426:4:11",
																				"nodeType": "YulLiteral",
																				"src": "13426:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13415:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13415:3:11"
																		},
																		"nativeSrc": "13415:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13415:16:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13433:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13433:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "13404:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "13404:5:11"
																},
																"nativeSrc": "13404:36:11",
																"nodeType": "YulFunctionCall",
																"src": "13404:36:11"
															},
															"nativeSrc": "13404:36:11",
															"nodeType": "YulExpressionStatement",
															"src": "13404:36:11"
														},
														{
															"nativeSrc": "13449:26:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13449:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13463:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13463:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13468:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13468:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13459:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13459:3:11"
																},
																"nativeSrc": "13459:16:11",
																"nodeType": "YulFunctionCall",
																"src": "13459:16:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13453:2:11",
																	"nodeType": "YulTypedName",
																	"src": "13453:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "13491:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "13491:2:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13495:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13495:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13484:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13484:6:11"
																},
																"nativeSrc": "13484:13:11",
																"nodeType": "YulFunctionCall",
																"src": "13484:13:11"
															},
															"nativeSrc": "13484:13:11",
															"nodeType": "YulExpressionStatement",
															"src": "13484:13:11"
														},
														{
															"nativeSrc": "13506:9:11",
															"nodeType": "YulAssignment",
															"src": "13506:9:11",
															"value": {
																"name": "_1",
																"nativeSrc": "13513:2:11",
																"nodeType": "YulIdentifier",
																"src": "13513:2:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13506:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13506:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "13309:212:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13336:5:11",
														"nodeType": "YulTypedName",
														"src": "13336:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13343:3:11",
														"nodeType": "YulTypedName",
														"src": "13343:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13351:3:11",
														"nodeType": "YulTypedName",
														"src": "13351:3:11",
														"type": ""
													}
												],
												"src": "13309:212:11"
											},
											{
												"body": {
													"nativeSrc": "13915:206:11",
													"nodeType": "YulBlock",
													"src": "13915:206:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13932:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "13932:3:11"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "13937:25:11",
																		"nodeType": "YulLiteral",
																		"src": "13937:25:11",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13925:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13925:6:11"
																},
																"nativeSrc": "13925:38:11",
																"nodeType": "YulFunctionCall",
																"src": "13925:38:11"
															},
															"nativeSrc": "13925:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "13925:38:11"
														},
														{
															"nativeSrc": "13972:49:11",
															"nodeType": "YulVariableDeclaration",
															"src": "13972:49:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14000:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14000:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "14012:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "14012:3:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14017:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14017:2:11",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14008:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14008:3:11"
																		},
																		"nativeSrc": "14008:12:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14008:12:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "13982:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13982:17:11"
																},
																"nativeSrc": "13982:39:11",
																"nodeType": "YulFunctionCall",
																"src": "13982:39:11"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13976:2:11",
																	"nodeType": "YulTypedName",
																	"src": "13976:2:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "14037:2:11",
																		"nodeType": "YulIdentifier",
																		"src": "14037:2:11"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "14041:19:11",
																		"nodeType": "YulLiteral",
																		"src": "14041:19:11",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14030:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14030:6:11"
																},
																"nativeSrc": "14030:31:11",
																"nodeType": "YulFunctionCall",
																"src": "14030:31:11"
															},
															"nativeSrc": "14030:31:11",
															"nodeType": "YulExpressionStatement",
															"src": "14030:31:11"
														},
														{
															"nativeSrc": "14070:45:11",
															"nodeType": "YulAssignment",
															"src": "14070:45:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14095:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14095:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "14107:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "14107:2:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14111:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14111:2:11",
																				"type": "",
																				"value": "17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14103:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14103:3:11"
																		},
																		"nativeSrc": "14103:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14103:11:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "14077:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "14077:17:11"
																},
																"nativeSrc": "14077:38:11",
																"nodeType": "YulFunctionCall",
																"src": "14077:38:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14070:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14070:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13526:595:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13883:3:11",
														"nodeType": "YulTypedName",
														"src": "13883:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13888:6:11",
														"nodeType": "YulTypedName",
														"src": "13888:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13896:6:11",
														"nodeType": "YulTypedName",
														"src": "13896:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13907:3:11",
														"nodeType": "YulTypedName",
														"src": "13907:3:11",
														"type": ""
													}
												],
												"src": "13526:595:11"
											},
											{
												"body": {
													"nativeSrc": "14247:297:11",
													"nodeType": "YulBlock",
													"src": "14247:297:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14264:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14264:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14275:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14275:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14257:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14257:6:11"
																},
																"nativeSrc": "14257:21:11",
																"nodeType": "YulFunctionCall",
																"src": "14257:21:11"
															},
															"nativeSrc": "14257:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "14257:21:11"
														},
														{
															"nativeSrc": "14287:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "14287:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14307:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14307:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14301:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "14301:5:11"
																},
																"nativeSrc": "14301:13:11",
																"nodeType": "YulFunctionCall",
																"src": "14301:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14291:6:11",
																	"nodeType": "YulTypedName",
																	"src": "14291:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14334:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14334:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14345:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14345:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14330:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14330:3:11"
																		},
																		"nativeSrc": "14330:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14330:18:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14350:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14350:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14323:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14323:6:11"
																},
																"nativeSrc": "14323:34:11",
																"nodeType": "YulFunctionCall",
																"src": "14323:34:11"
															},
															"nativeSrc": "14323:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "14323:34:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14376:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14376:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14387:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14387:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14372:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14372:3:11"
																		},
																		"nativeSrc": "14372:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14372:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14396:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14396:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14404:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14404:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14392:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14392:3:11"
																		},
																		"nativeSrc": "14392:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14392:15:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14409:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "14409:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "14366:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "14366:5:11"
																},
																"nativeSrc": "14366:50:11",
																"nodeType": "YulFunctionCall",
																"src": "14366:50:11"
															},
															"nativeSrc": "14366:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "14366:50:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14440:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "14440:9:11"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "14451:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "14451:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14436:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "14436:3:11"
																				},
																				"nativeSrc": "14436:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14436:22:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14460:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14460:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14432:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14432:3:11"
																		},
																		"nativeSrc": "14432:31:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14432:31:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14465:1:11",
																		"nodeType": "YulLiteral",
																		"src": "14465:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14425:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14425:6:11"
																},
																"nativeSrc": "14425:42:11",
																"nodeType": "YulFunctionCall",
																"src": "14425:42:11"
															},
															"nativeSrc": "14425:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "14425:42:11"
														},
														{
															"nativeSrc": "14476:62:11",
															"nodeType": "YulAssignment",
															"src": "14476:62:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14492:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14492:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "14511:6:11",
																								"nodeType": "YulIdentifier",
																								"src": "14511:6:11"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14519:2:11",
																								"nodeType": "YulLiteral",
																								"src": "14519:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "14507:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "14507:3:11"
																						},
																						"nativeSrc": "14507:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "14507:15:11"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14528:2:11",
																								"nodeType": "YulLiteral",
																								"src": "14528:2:11",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "14524:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "14524:3:11"
																						},
																						"nativeSrc": "14524:7:11",
																						"nodeType": "YulFunctionCall",
																						"src": "14524:7:11"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "14503:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "14503:3:11"
																				},
																				"nativeSrc": "14503:29:11",
																				"nodeType": "YulFunctionCall",
																				"src": "14503:29:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14488:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14488:3:11"
																		},
																		"nativeSrc": "14488:45:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14488:45:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14535:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14535:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14484:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14484:3:11"
																},
																"nativeSrc": "14484:54:11",
																"nodeType": "YulFunctionCall",
																"src": "14484:54:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14476:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14476:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14126:418:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14216:9:11",
														"nodeType": "YulTypedName",
														"src": "14216:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14227:6:11",
														"nodeType": "YulTypedName",
														"src": "14227:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14238:4:11",
														"nodeType": "YulTypedName",
														"src": "14238:4:11",
														"type": ""
													}
												],
												"src": "14126:418:11"
											},
											{
												"body": {
													"nativeSrc": "14596:89:11",
													"nodeType": "YulBlock",
													"src": "14596:89:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "14623:22:11",
																"nodeType": "YulBlock",
																"src": "14623:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14625:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "14625:16:11"
																			},
																			"nativeSrc": "14625:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "14625:18:11"
																		},
																		"nativeSrc": "14625:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "14625:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14616:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "14616:5:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14609:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14609:6:11"
																},
																"nativeSrc": "14609:13:11",
																"nodeType": "YulFunctionCall",
																"src": "14609:13:11"
															},
															"nativeSrc": "14606:39:11",
															"nodeType": "YulIf",
															"src": "14606:39:11"
														},
														{
															"nativeSrc": "14654:25:11",
															"nodeType": "YulAssignment",
															"src": "14654:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14665:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "14665:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14676:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14676:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14672:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14672:3:11"
																		},
																		"nativeSrc": "14672:6:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14672:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14661:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14661:3:11"
																},
																"nativeSrc": "14661:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14661:18:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14654:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14654:3:11"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "14549:136:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14578:5:11",
														"nodeType": "YulTypedName",
														"src": "14578:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14588:3:11",
														"nodeType": "YulTypedName",
														"src": "14588:3:11",
														"type": ""
													}
												],
												"src": "14549:136:11"
											},
											{
												"body": {
													"nativeSrc": "14864:182:11",
													"nodeType": "YulBlock",
													"src": "14864:182:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14881:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14881:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14892:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14892:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14874:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14874:6:11"
																},
																"nativeSrc": "14874:21:11",
																"nodeType": "YulFunctionCall",
																"src": "14874:21:11"
															},
															"nativeSrc": "14874:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "14874:21:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14915:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14915:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14926:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14926:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14911:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14911:3:11"
																		},
																		"nativeSrc": "14911:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14911:18:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14931:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14931:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14904:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14904:6:11"
																},
																"nativeSrc": "14904:30:11",
																"nodeType": "YulFunctionCall",
																"src": "14904:30:11"
															},
															"nativeSrc": "14904:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "14904:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14954:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14954:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14965:2:11",
																				"nodeType": "YulLiteral",
																				"src": "14965:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14950:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14950:3:11"
																		},
																		"nativeSrc": "14950:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14950:18:11"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "14970:34:11",
																		"nodeType": "YulLiteral",
																		"src": "14970:34:11",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14943:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14943:6:11"
																},
																"nativeSrc": "14943:62:11",
																"nodeType": "YulFunctionCall",
																"src": "14943:62:11"
															},
															"nativeSrc": "14943:62:11",
															"nodeType": "YulExpressionStatement",
															"src": "14943:62:11"
														},
														{
															"nativeSrc": "15014:26:11",
															"nodeType": "YulAssignment",
															"src": "15014:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15026:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15026:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15037:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15037:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15022:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15022:3:11"
																},
																"nativeSrc": "15022:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15022:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15014:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15014:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14690:356:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14841:9:11",
														"nodeType": "YulTypedName",
														"src": "14841:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14855:4:11",
														"nodeType": "YulTypedName",
														"src": "14855:4:11",
														"type": ""
													}
												],
												"src": "14690:356:11"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_struct$_TokenDetail_$2277_memory_ptr__to_t_struct$_TokenDetail_$2277_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_1, 32)\n        value2 := length\n        value3 := abi_decode_address(add(headStart, 64))\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 96))\n        value4 := value_1\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(length))\n        let array_1 := dst\n        mstore(dst, length)\n        dst := add(dst, 0x20)\n        let srcEnd := add(add(offset, shl(5, length)), 0x20)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, 0x20)\n        for { } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, 0x20)\n        }\n        array := array_1\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let tail_1 := add(headStart, 32)\n        mstore(headStart, 32)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_array_address_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset_2)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(length))\n        let array := dst\n        mstore(dst, length)\n        dst := add(dst, 32)\n        let srcEnd := add(add(_1, shl(5, length)), 32)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_1, 32)\n        for { } lt(src, srcEnd) { src := add(src, 32) }\n        {\n            let value := 0\n            value := calldataload(src)\n            mstore(dst, value)\n            dst := add(dst, 32)\n        }\n        value2 := array\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_6435d47a7cef43416f8f596d66beab1b30970728f1435d971438f7d89b0cfb94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"UniswapV2Router: INVALID_PATH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1a9d3f3429d6f7d601e79a56388ebaeef879c178f6da38e08a509d9e3994b6a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"UniswapV2Router: EXPIRED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d4ea67bea551891ab36be726b8e631181246034dffcfd5c0bbfad1e9d1729432__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"UniswapV2Router: INSUFFICIENT_OU\")\n        mstore(add(headStart, 96), \"TPUT_AMOUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_c0bcbbbbe436530a4b61f43295135097bf7668636b4f4254b31ef3e7629e3509__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"UniswapV2Router: INSUFFICIENT_AM\")\n        mstore(add(headStart, 96), \"OUNT_ALLOWED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_29acd408d8afda248b568ac22c80ebc7d6d115c93f3fd64f6097ddc942aedfcf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"UniswapV2Router: amountIn should\")\n        mstore(add(headStart, 96), \" be greater than zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc542683e8818ff716879d376d0f2865e4cdfc390a34f54109b63f66fd90d1bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"UniswapV2Router: path contains a\")\n        mstore(add(headStart, 96), \"t least 2 elements\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_c0a84dd8250d98c57d65326b71d5da4964385e7fbd92b05a3cbe874c127db80e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 70)\n        mstore(add(headStart, 64), \"UniswapV2Router: Tokens array is\")\n        mstore(add(headStart, 96), \" too long, reduce the number of \")\n        mstore(add(headStart, 128), \"tokens\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let _1 := abi_encode_string(value0, add(pos, 23))\n        mstore(_1, \" is missing role \")\n        end := abi_encode_string(value1, add(_1, 17))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2279": [
									{
										"length": 32,
										"start": 629
									},
									{
										"length": 32,
										"start": 701
									},
									{
										"length": 32,
										"start": 1354
									},
									{
										"length": 32,
										"start": 2160
									},
									{
										"length": 32,
										"start": 2272
									},
									{
										"length": 32,
										"start": 3067
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100fa575f3560e01c8063affa881711610092578063d06ca61f11610062578063d06ca61f1461035b578063d547741f14610387578063dd4be683146103a6578063eb71f7e6146103fe578063fa1c631b1461041d575f5ffd5b8063affa8817146102af578063b6f9de95146102e1578063cf0888aa146102f4578063d02641a014610327575f5ffd5b806388aa8bee116100cd57806388aa8bee146101ae57806391d1485414610232578063a217fddf14610251578063ad5c464814610264575f5ffd5b806301ffc9a7146100fe578063248a9ca3146101325780632f2ff15d1461016e57806336568abe1461018f575b5f5ffd5b348015610109575f5ffd5b5061011d610118366004611320565b61043c565b60405190151581526020015b60405180910390f35b34801561013d575f5ffd5b5061016061014c366004611347565b5f9081526065602052604090206001015490565b604051908152602001610129565b348015610179575f5ffd5b5061018d610188366004611379565b610472565b005b34801561019a575f5ffd5b5061018d6101a9366004611379565b61049b565b3480156101b9575f5ffd5b5061020e6101c83660046113a3565b6040805180820182525f80825260209182018190526001600160a01b03938416815260978252829020825180840190935280548352600101549092169181019190915290565b60408051825181526020928301516001600160a01b03169281019290925201610129565b34801561023d575f5ffd5b5061011d61024c366004611379565b61051e565b34801561025c575f5ffd5b506101605f81565b34801561026f575f5ffd5b506102977f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610129565b3480156102ba575f5ffd5b507f0000000000000000000000000000000000000000000000000000000000000000610297565b61018d6102ef3660046113bc565b610548565b3480156102ff575f5ffd5b506101607fa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e81565b348015610332575f5ffd5b506101606103413660046113a3565b6001600160a01b03165f9081526097602052604090205490565b348015610366575f5ffd5b5061037a610375366004611527565b610a52565b604051610129919061156b565b348015610392575f5ffd5b5061018d6103a1366004611379565b610e0d565b3480156103b1575f5ffd5b506103e16103c03660046113a3565b60976020525f9081526040902080546001909101546001600160a01b031682565b604080519283526001600160a01b03909116602083015201610129565b348015610409575f5ffd5b5061018d6104183660046115ad565b610e31565b348015610428575f5ffd5b5061018d610437366004611694565b610fa5565b5f6001600160e01b03198216637965db0b60e01b148061046c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f8281526065602052604090206001015461048c81611020565b610496838361102d565b505050565b6001600160a01b03811633146105105760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61051a82826110b2565b5050565b5f9182526065602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031684845f818110610584576105846116ce565b905060200201602081019061059991906113a3565b6001600160a01b0316146105ef5760405162461bcd60e51b815260206004820152601d60248201527f556e69737761705632526f757465723a20494e56414c49445f504154480000006044820152606401610507565b4281101561063f5760405162461bcd60e51b815260206004820152601860248201527f556e69737761705632526f757465723a204558504952454400000000000000006044820152606401610507565b5f3490505f610680828787808060200260200160405190810160405280939291908181526020018383602002808284375f92019190915250610a5292505050565b600181518110610692576106926116ce565b602002602001015190505f811180156106ab5750868110155b61070b5760405162461bcd60e51b815260206004820152602b60248201527f556e69737761705632526f757465723a20494e53554646494349454e545f4f5560448201526a1514155517d05353d5539560aa1b6064820152608401610507565b5f60975f88886001818110610722576107226116ce565b905060200201602081019061073791906113a3565b6001600160a01b03166001600160a01b031681526020019081526020015f206001015f9054906101000a90046001600160a01b031690505f87876001818110610782576107826116ce565b905060200201602081019061079791906113a3565b604051636eb1769f60e11b81526001600160a01b038481166004830152306024830152919091169063dd62ed3e90604401602060405180830381865afa1580156107e3573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061080791906116e2565b90508281101561086e5760405162461bcd60e51b815260206004820152602c60248201527f556e69737761705632526f757465723a20494e53554646494349454e545f414d60448201526b13d5539517d0531313d5d15160a21b6064820152608401610507565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0856040518263ffffffff1660e01b81526004015f604051808303818588803b1580156108c7575f5ffd5b505af11580156108d9573d5f5f3e3d5ffd5b50505050507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663a9059cbb89896001818110610920576109206116ce565b905060200201602081019061093591906113a3565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303815f875af115801561097f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109a391906116f9565b50878760018181106109b7576109b76116ce565b90506020020160208101906109cc91906113a3565b6040516323b872dd60e01b81526001600160a01b03848116600483015288811660248301526044820186905291909116906323b872dd906064016020604051808303815f875af1158015610a22573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a4691906116f9565b50505050505050505050565b60605f8311610ac15760405162461bcd60e51b815260206004820152603560248201527f556e69737761705632526f757465723a20616d6f756e74496e2073686f756c646044820152742062652067726561746572207468616e207a65726f60581b6064820152608401610507565b600282511015610b2e5760405162461bcd60e51b815260206004820152603260248201527f556e69737761705632526f757465723a207061746820636f6e7461696e73206160448201527174206c65617374203220656c656d656e747360701b6064820152608401610507565b815167ffffffffffffffff811115610b4857610b4861144e565b604051908082528060200260200182016040528015610b71578160200160208202803683370190505b50905082815f81518110610b8757610b876116ce565b6020026020010181815250505f5b60018351610ba3919061172c565b811015610e065760975f84610bb984600161173f565b81518110610bc957610bc96116ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f01545f14610dd4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316835f81518110610c3557610c356116ce565b60200260200101516001600160a01b031603610cdf5760975f84610c5a84600161173f565b81518110610c6a57610c6a6116ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f015484670de0b6b3a7640000610ca89190611752565b610cb29190611769565b82610cbe83600161173f565b81518110610cce57610cce6116ce565b602002602001018181525050610dfe565b5f670de0b6b3a764000060975f865f81518110610cfe57610cfe6116ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f015486670de0b6b3a7640000610d3c9190611752565b610d469190611752565b610d509190611769565b905060975f85610d6185600161173f565b81518110610d7157610d716116ce565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020015f205f015481610da69190611769565b83610db284600161173f565b81518110610dc257610dc26116ce565b60200260200101818152505050610dfe565b5f82610de183600161173f565b81518110610df157610df16116ce565b6020026020010181815250505b600101610b95565b5092915050565b5f82815260656020526040902060010154610e2781611020565b61049683836110b2565b7fa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e610e5b81611020565b601e84511115610ee25760405162461bcd60e51b815260206004820152604660248201527f556e69737761705632526f757465723a20546f6b656e7320617272617920697360448201527f20746f6f206c6f6e672c2072656475636520746865206e756d626572206f6620606482015265746f6b656e7360d01b608482015260a401610507565b5f5b8451811015610f9e576040518060400160405280848381518110610f0a57610f0a6116ce565b60200260200101518152602001858381518110610f2957610f296116ce565b60200260200101516001600160a01b031681525060975f878481518110610f5257610f526116ce565b6020908102919091018101516001600160a01b0390811683528282019390935260409091015f2083518155920151600192830180546001600160a01b0319169190921617905501610ee4565b5050505050565b7fa451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e610fcf81611020565b506040805180820182529182526001600160a01b0392831660208084019182529484165f90815260979095529320905181559151600190920180546001600160a01b03191692909116919091179055565b61102a8133611118565b50565b611037828261051e565b61051a575f8281526065602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561106e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6110bc828261051e565b1561051a575f8281526065602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b611122828261051e565b61051a5761112f81611171565b61113a836020611183565b60405160200161114b92919061179f565b60408051601f198184030181529082905262461bcd60e51b8252610507916004016117fd565b606061046c6001600160a01b03831660145b60605f611191836002611752565b61119c90600261173f565b67ffffffffffffffff8111156111b4576111b461144e565b6040519080825280601f01601f1916602001820160405280156111de576020820181803683370190505b509050600360fc1b815f815181106111f8576111f86116ce565b60200101906001600160f81b03191690815f1a905350600f60fb1b81600181518110611226576112266116ce565b60200101906001600160f81b03191690815f1a9053505f611248846002611752565b61125390600161173f565b90505b60018111156112ca576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611287576112876116ce565b1a60f81b82828151811061129d5761129d6116ce565b60200101906001600160f81b03191690815f1a90535060049490941c936112c381611832565b9050611256565b5083156113195760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610507565b9392505050565b5f60208284031215611330575f5ffd5b81356001600160e01b031981168114611319575f5ffd5b5f60208284031215611357575f5ffd5b5035919050565b80356001600160a01b0381168114611374575f5ffd5b919050565b5f5f6040838503121561138a575f5ffd5b8235915061139a6020840161135e565b90509250929050565b5f602082840312156113b3575f5ffd5b6113198261135e565b5f5f5f5f5f608086880312156113d0575f5ffd5b85359450602086013567ffffffffffffffff8111156113ed575f5ffd5b8601601f810188136113fd575f5ffd5b803567ffffffffffffffff811115611413575f5ffd5b8860208260051b8401011115611427575f5ffd5b6020919091019450925061143d6040870161135e565b949793965091946060013592915050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561148b5761148b61144e565b604052919050565b5f67ffffffffffffffff8211156114ac576114ac61144e565b5060051b60200190565b5f82601f8301126114c5575f5ffd5b81356114d86114d382611493565b611462565b8082825260208201915060208360051b8601019250858311156114f9575f5ffd5b602085015b8381101561151d5761150f8161135e565b8352602092830192016114fe565b5095945050505050565b5f5f60408385031215611538575f5ffd5b82359150602083013567ffffffffffffffff811115611555575f5ffd5b611561858286016114b6565b9150509250929050565b602080825282518282018190525f918401906040840190835b818110156115a2578351835260209384019390920191600101611584565b509095945050505050565b5f5f5f606084860312156115bf575f5ffd5b833567ffffffffffffffff8111156115d5575f5ffd5b6115e1868287016114b6565b935050602084013567ffffffffffffffff8111156115fd575f5ffd5b611609868287016114b6565b925050604084013567ffffffffffffffff811115611625575f5ffd5b8401601f81018613611635575f5ffd5b80356116436114d382611493565b8082825260208201915060208360051b850101925088831115611664575f5ffd5b6020840193505b8284101561168657833582526020938401939091019061166b565b809450505050509250925092565b5f5f5f606084860312156116a6575f5ffd5b6116af8461135e565b92506116bd6020850161135e565b929592945050506040919091013590565b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156116f2575f5ffd5b5051919050565b5f60208284031215611709575f5ffd5b81518015158114611319575f5ffd5b634e487b7160e01b5f52601160045260245ffd5b8181038181111561046c5761046c611718565b8082018082111561046c5761046c611718565b808202811582820484141761046c5761046c611718565b5f8261178357634e487b7160e01b5f52601260045260245ffd5b500490565b5f81518060208401855e5f93019283525090919050565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081525f6117d06017830185611788565b7001034b99036b4b9b9b4b733903937b6329607d1b81526117f46011820185611788565b95945050505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f8161184057611840611718565b505f19019056fea2646970667358221220b6f335f6f2fb06d29afe929f916428c8161d67a46e67dc1bd46f41021501803b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFA JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAFFA8817 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xD06CA61F GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD06CA61F EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xDD4BE683 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xEB71F7E6 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xFA1C631B EQ PUSH2 0x41D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xAFFA8817 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xB6F9DE95 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xCF0888AA EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x327 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x88AA8BEE GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x88AA8BEE EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x232 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xAD5C4648 EQ PUSH2 0x264 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0x1320 JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x14C CALLDATASIZE PUSH1 0x4 PUSH2 0x1347 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x129 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x49B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x20E PUSH2 0x1C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE PUSH1 0x97 DUP3 MSTORE DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 ADD SLOAD SWAP1 SWAP3 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 MLOAD DUP2 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADD PUSH2 0x129 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11D PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x297 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x129 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH32 0x0 PUSH2 0x297 JUMP JUMPDEST PUSH2 0x18D PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x13BC JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH32 0xA451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x332 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x341 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x97 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x366 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x37A PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1527 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x129 SWAP2 SWAP1 PUSH2 0x156B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1379 JUMP JUMPDEST PUSH2 0xE0D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3E1 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x97 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x129 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x15AD JUMP JUMPDEST PUSH2 0xE31 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x428 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x18D PUSH2 0x437 CALLDATASIZE PUSH1 0x4 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0xFA5 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x46C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x48C DUP2 PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x496 DUP4 DUP4 PUSH2 0x102D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x51A DUP3 DUP3 PUSH2 0x10B2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 PUSH0 DUP2 DUP2 LT PUSH2 0x584 JUMPI PUSH2 0x584 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20494E56414C49445F50415448000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST TIMESTAMP DUP2 LT ISZERO PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20455850495245440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST PUSH0 CALLVALUE SWAP1 POP PUSH0 PUSH2 0x680 DUP3 DUP8 DUP8 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0xA52 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x692 JUMPI PUSH2 0x692 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH0 DUP2 GT DUP1 ISZERO PUSH2 0x6AB JUMPI POP DUP7 DUP2 LT ISZERO JUMPDEST PUSH2 0x70B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20494E53554646494349454E545F4F55 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1514155517D05353D55395 PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST PUSH0 PUSH1 0x97 PUSH0 DUP9 DUP9 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x722 JUMPI PUSH2 0x722 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x737 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP PUSH0 DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x782 JUMPI PUSH2 0x782 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x797 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7E3 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20494E53554646494349454E545F414D PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x13D5539517D0531313D5D151 PUSH1 0xA2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8D9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP10 DUP10 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x920 JUMPI PUSH2 0x920 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x935 SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x97F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST POP DUP8 DUP8 PUSH1 0x1 DUP2 DUP2 LT PUSH2 0x9B7 JUMPI PUSH2 0x9B7 PUSH2 0x16CE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x9CC SWAP2 SWAP1 PUSH2 0x13A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP7 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA22 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA46 SWAP2 SWAP1 PUSH2 0x16F9 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP4 GT PUSH2 0xAC1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20616D6F756E74496E2073686F756C64 PUSH1 0x44 DUP3 ADD MSTORE PUSH21 0x2062652067726561746572207468616E207A65726F PUSH1 0x58 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST PUSH1 0x2 DUP3 MLOAD LT ISZERO PUSH2 0xB2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A207061746820636F6E7461696E732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x74206C65617374203220656C656D656E7473 PUSH1 0x70 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x507 JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB48 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB71 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xB87 JUMPI PUSH2 0xB87 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH0 JUMPDEST PUSH1 0x1 DUP4 MLOAD PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0x172C JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xE06 JUMPI PUSH1 0x97 PUSH0 DUP5 PUSH2 0xBB9 DUP5 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xBC9 JUMPI PUSH2 0xBC9 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH0 EQ PUSH2 0xDD4 JUMPI PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xC35 JUMPI PUSH2 0xC35 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xCDF JUMPI PUSH1 0x97 PUSH0 DUP5 PUSH2 0xC5A DUP5 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xC6A JUMPI PUSH2 0xC6A PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0xCA8 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0xCB2 SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST DUP3 PUSH2 0xCBE DUP4 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xCCE JUMPI PUSH2 0xCCE PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH2 0xDFE JUMP JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 PUSH1 0x97 PUSH0 DUP7 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0xCFE JUMPI PUSH2 0xCFE PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP7 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0xD46 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0xD50 SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP PUSH1 0x97 PUSH0 DUP6 PUSH2 0xD61 DUP6 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xD71 JUMPI PUSH2 0xD71 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD DUP2 PUSH2 0xDA6 SWAP2 SWAP1 PUSH2 0x1769 JUMP JUMPDEST DUP4 PUSH2 0xDB2 DUP5 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xDC2 JUMPI PUSH2 0xDC2 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP PUSH2 0xDFE JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xDE1 DUP4 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xDF1 JUMPI PUSH2 0xDF1 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0xB95 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xE27 DUP2 PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x496 DUP4 DUP4 PUSH2 0x10B2 JUMP JUMPDEST PUSH32 0xA451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E PUSH2 0xE5B DUP2 PUSH2 0x1020 JUMP JUMPDEST PUSH1 0x1E DUP5 MLOAD GT ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x46 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E69737761705632526F757465723A20546F6B656E73206172726179206973 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20746F6F206C6F6E672C2072656475636520746865206E756D626572206F6620 PUSH1 0x64 DUP3 ADD MSTORE PUSH6 0x746F6B656E73 PUSH1 0xD0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x507 JUMP JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xF9E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF0A JUMPI PUSH2 0xF0A PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF29 JUMPI PUSH2 0xF29 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH1 0x97 PUSH0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xF52 JUMPI PUSH2 0xF52 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP4 MSTORE DUP3 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 SWAP2 ADD PUSH0 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP3 ADD MLOAD PUSH1 0x1 SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE ADD PUSH2 0xEE4 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH32 0xA451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E PUSH2 0xFCF DUP2 PUSH2 0x1020 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 DUP1 DUP5 ADD SWAP2 DUP3 MSTORE SWAP5 DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x97 SWAP1 SWAP6 MSTORE SWAP4 KECCAK256 SWAP1 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x102A DUP2 CALLER PUSH2 0x1118 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1037 DUP3 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x51A JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x106E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x10BC DUP3 DUP3 PUSH2 0x51E JUMP JUMPDEST ISZERO PUSH2 0x51A JUMPI PUSH0 DUP3 DUP2 MSTORE PUSH1 0x65 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x1122 DUP3 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x51A JUMPI PUSH2 0x112F DUP2 PUSH2 0x1171 JUMP JUMPDEST PUSH2 0x113A DUP4 PUSH1 0x20 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x114B SWAP3 SWAP2 SWAP1 PUSH2 0x179F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x507 SWAP2 PUSH1 0x4 ADD PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x46C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x14 JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x1191 DUP4 PUSH1 0x2 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x119C SWAP1 PUSH1 0x2 PUSH2 0x173F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x11B4 JUMPI PUSH2 0x11B4 PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11DE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x11F8 JUMPI PUSH2 0x11F8 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1226 JUMPI PUSH2 0x1226 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH2 0x1248 DUP5 PUSH1 0x2 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x1253 SWAP1 PUSH1 0x1 PUSH2 0x173F JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12CA JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1287 JUMPI PUSH2 0x1287 PUSH2 0x16CE JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x129D JUMPI PUSH2 0x129D PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x12C3 DUP2 PUSH2 0x1832 JUMP JUMPDEST SWAP1 POP PUSH2 0x1256 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x1319 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x507 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1330 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1319 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1357 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1374 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x138A JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x139A PUSH1 0x20 DUP5 ADD PUSH2 0x135E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1319 DUP3 PUSH2 0x135E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13D0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x13ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x13FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1413 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x1427 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP5 POP SWAP3 POP PUSH2 0x143D PUSH1 0x40 DUP8 ADD PUSH2 0x135E JUMP JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x60 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x148B JUMPI PUSH2 0x148B PUSH2 0x144E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14AC JUMPI PUSH2 0x14AC PUSH2 0x144E JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14D8 PUSH2 0x14D3 DUP3 PUSH2 0x1493 JUMP JUMPDEST PUSH2 0x1462 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP7 ADD ADD SWAP3 POP DUP6 DUP4 GT ISZERO PUSH2 0x14F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x151D JUMPI PUSH2 0x150F DUP2 PUSH2 0x135E JUMP JUMPDEST DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x14FE JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1538 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1555 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1561 DUP6 DUP3 DUP7 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15A2 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1584 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15BF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15E1 DUP7 DUP3 DUP8 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15FD JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1609 DUP7 DUP3 DUP8 ADD PUSH2 0x14B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1625 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x1635 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x1643 PUSH2 0x14D3 DUP3 PUSH2 0x1493 JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP4 PUSH1 0x5 SHL DUP6 ADD ADD SWAP3 POP DUP9 DUP4 GT ISZERO PUSH2 0x1664 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x1686 JUMPI DUP4 CALLDATALOAD DUP3 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x166B JUMP JUMPDEST DUP1 SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x16AF DUP5 PUSH2 0x135E JUMP JUMPDEST SWAP3 POP PUSH2 0x16BD PUSH1 0x20 DUP6 ADD PUSH2 0x135E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1709 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1319 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1718 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1718 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x46C JUMPI PUSH2 0x46C PUSH2 0x1718 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1783 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH0 PUSH2 0x17D0 PUSH1 0x17 DUP4 ADD DUP6 PUSH2 0x1788 JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL DUP2 MSTORE PUSH2 0x17F4 PUSH1 0x11 DUP3 ADD DUP6 PUSH2 0x1788 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x1840 JUMPI PUSH2 0x1840 PUSH2 0x1718 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 RETURN CALLDATALOAD 0xF6 CALLCODE 0xFB MOD 0xD2 SWAP11 INVALID SWAP3 SWAP16 SWAP2 PUSH5 0x28C8161D67 LOG4 PUSH15 0x67DC1BD46F41021501803B64736F6C PUSH4 0x4300081C STOP CALLER ",
							"sourceMap": "1874:5299:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3050:213:0;;;;;;;;;;-1:-1:-1;3050:213:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:11;;463:22;445:41;;433:2;418:18;3050:213:0;;;;;;;;4855:129;;;;;;;;;;-1:-1:-1;4855:129:0;;;;;:::i;:::-;4929:7;4955:12;;;:6;:12;;;;;:22;;;;4855:129;;;;874:25:11;;;862:2;847:18;4855:129:0;728:177:11;5280:145:0;;;;;;;;;;-1:-1:-1;5280:145:0;;;;;:::i;:::-;;:::i;:::-;;6389:214;;;;;;;;;;-1:-1:-1;6389:214:0;;;;;:::i;:::-;;:::i;5610:166:10:-;;;;;;;;;;-1:-1:-1;5610:166:10;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;5743:26:10;;;;;:12;:26;;;;;5736:33;;;;;;;;;;;;;;;;;;;;;;;;;;5610:166;;;;;1806:13:11;;1788:32;;1880:4;1868:17;;;1862:24;-1:-1:-1;;;;;1858:50:11;1836:20;;;1829:80;;;;1761:18;5610:166:10;1584:331:11;3350:145:0;;;;;;;;;;-1:-1:-1;3350:145:0;;;;;:::i;:::-;;:::i;2320:49::-;;;;;;;;;;-1:-1:-1;2320:49:0;2365:4;2320:49;;2025:29:10;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2084:32:11;;;2066:51;;2054:2;2039:18;2025:29:10;1920:203:11;5383:84:10;;;;;;;;;;-1:-1:-1;5456:4:10;5383:84;;3196:1002;;;;;;:::i;:::-;;:::i;2119:66::-;;;;;;;;;;;;2159:26;2119:66;;5473:131;;;;;;;;;;-1:-1:-1;5473:131:10;;;;;:::i;:::-;-1:-1:-1;;;;;5565:26:10;5539:7;5565:26;;;:12;:26;;;;;:32;;5473:131;4210:1167;;;;;;;;;;-1:-1:-1;4210:1167:10;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5705:147:0:-;;;;;;;;;;-1:-1:-1;5705:147:0;;;;;:::i;:::-;;:::i;2061:51:10:-;;;;;;;;;;-1:-1:-1;2061:51:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2061:51:10;;;;;;;5771:25:11;;;-1:-1:-1;;;;;5832:32:11;;;5827:2;5812:18;;5805:60;5744:18;2061:51:10;5597:274:11;2649:541:10;;;;;;;;;;-1:-1:-1;2649:541:10;;;;;:::i;:::-;;:::i;2420:223::-;;;;;;;;;;-1:-1:-1;2420:223:10;;;;;:::i;:::-;;:::i;3050:213:0:-;3135:4;-1:-1:-1;;;;;;3158:58:0;;-1:-1:-1;;;3158:58:0;;:98;;-1:-1:-1;;;;;;;;;;1189:51:6;;;3220:36:0;3151:105;3050:213;-1:-1:-1;;3050:213:0:o;5280:145::-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5393:25:::1;5404:4;5410:7;5393:10;:25::i;:::-;5280:145:::0;;;:::o;6389:214::-;-1:-1:-1;;;;;6484:23:0;;965:10:4;6484:23:0;6476:83;;;;-1:-1:-1;;;6476:83:0;;7886:2:11;6476:83:0;;;7868:21:11;7925:2;7905:18;;;7898:30;7964:34;7944:18;;;7937:62;-1:-1:-1;;;8015:18:11;;;8008:45;8070:19;;6476:83:0;;;;;;;;;6570:26;6582:4;6588:7;6570:11;:26::i;:::-;6389:214;;:::o;3350:145::-;3436:4;3459:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3459:29:0;;;;;;;;;;;;;;;3350:145::o;3196:1002:10:-;3418:4;-1:-1:-1;;;;;3407:15:10;:4;;3412:1;3407:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3407:15:10;;3399:57;;;;-1:-1:-1;;;3399:57:10;;8434:2:11;3399:57:10;;;8416:21:11;8473:2;8453:18;;;8446:30;8512:31;8492:18;;;8485:59;8561:18;;3399:57:10;8232:353:11;3399:57:10;3486:15;3474:8;:27;;3466:64;;;;-1:-1:-1;;;3466:64:10;;8792:2:11;3466:64:10;;;8774:21:11;8831:2;8811:18;;;8804:30;8870:26;8850:18;;;8843:54;8914:18;;3466:64:10;8590:348:11;3466:64:10;3541:13;3557:9;3541:25;;3577:14;3594:29;3608:8;3618:4;;3594:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3594:13:10;;-1:-1:-1;;;3594:29:10:i;:::-;3624:1;3594:32;;;;;;;;:::i;:::-;;;;;;;3577:49;;3669:1;3657:9;:13;:42;;;;;3687:12;3674:9;:25;;3657:42;3636:132;;;;-1:-1:-1;;;3636:132:10;;9145:2:11;3636:132:10;;;9127:21:11;9184:2;9164:18;;;9157:30;9223:34;9203:18;;;9196:62;-1:-1:-1;;;9274:18:11;;;9267:41;9325:19;;3636:132:10;8943:407:11;3636:132:10;3779:15;3797:12;:21;3810:4;;3815:1;3810:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3797:21:10;-1:-1:-1;;;;;3797:21:10;;;;;;;;;;;;:34;;;;;;;;;;-1:-1:-1;;;;;3797:34:10;3779:52;;3841:17;3867:4;;3872:1;3867:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3861:48;;-1:-1:-1;;;3861:48:10;;-1:-1:-1;;;;;9547:32:11;;;3861:48:10;;;9529:51:11;3903:4:10;9596:18:11;;;9589:60;3861:24:10;;;;;;;9502:18:11;;3861:48:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3841:68;;3953:9;3940;:22;;3919:113;;;;-1:-1:-1;;;3919:113:10;;10051:2:11;3919:113:10;;;10033:21:11;10090:2;10070:18;;;10063:30;10129:34;10109:18;;;10102:62;-1:-1:-1;;;10180:18:11;;;10173:42;10232:19;;3919:113:10;9849:408:11;3919:113:10;4049:4;-1:-1:-1;;;;;4043:19:10;;4070:8;4043:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4097:4;-1:-1:-1;;;;;4091:20:10;;4112:4;;4117:1;4112:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4091:39;;-1:-1:-1;;;;;;4091:39:10;;;;;;;-1:-1:-1;;;;;10454:32:11;;;4091:39:10;;;10436:51:11;10503:18;;;10496:34;;;10409:18;;4091:39:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4146:4;;4151:1;4146:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4140:51;;-1:-1:-1;;;4140:51:10;;-1:-1:-1;;;;;11043:32:11;;;4140:51:10;;;11025::11;11112:32;;;11092:18;;;11085:60;11161:18;;;11154:34;;;4140:27:10;;;;;;;10998:18:11;;4140:51:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3380:818;;;;3196:1002;;;;;:::o;4210:1167::-;4316:21;4385:1;4374:8;:12;4353:112;;;;-1:-1:-1;;;4353:112:10;;11401:2:11;4353:112:10;;;11383:21:11;11440:2;11420:18;;;11413:30;11479:34;11459:18;;;11452:62;-1:-1:-1;;;11530:18:11;;;11523:51;11591:19;;4353:112:10;11199:417:11;4353:112:10;4511:1;4496:4;:11;:16;;4475:113;;;;-1:-1:-1;;;4475:113:10;;11823:2:11;4475:113:10;;;11805:21:11;11862:2;11842:18;;;11835:30;11901:34;11881:18;;;11874:62;-1:-1:-1;;;11952:18:11;;;11945:48;12010:19;;4475:113:10;11621:414:11;4475:113:10;4620:4;:11;4609:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4609:23:10;;4599:33;;4655:8;4642:7;4650:1;4642:10;;;;;;;;:::i;:::-;;;;;;:21;;;;;4679:6;4674:672;4705:1;4691:4;:11;:15;;;;:::i;:::-;4687:1;:19;4674:672;;;4731:12;:25;4744:4;4749:5;:1;4753;4749:5;:::i;:::-;4744:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4731:25:10;-1:-1:-1;;;;;4731:25:10;;;;;;;;;;;;:31;;;4766:1;4731:36;4727:609;;4802:4;-1:-1:-1;;;;;4791:15:10;:4;4796:1;4791:7;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4791:15:10;;4787:478;;4915:12;:25;4928:4;4933:5;:1;4937;4933:5;:::i;:::-;4928:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;4915:25:10;-1:-1:-1;;;;;4915:25:10;;;;;;;;;;;;:31;;;4872:8;4883:4;4872:15;;;;:::i;:::-;4871:75;;;;:::i;:::-;4830:7;4838:5;:1;4842;4838:5;:::i;:::-;4830:14;;;;;;;;:::i;:::-;;;;;;:116;;;;;4727:609;;4787:478;4993:16;5110:4;5079:12;:21;5092:4;5097:1;5092:7;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5079:21:10;-1:-1:-1;;;;;5079:21:10;;;;;;;;;;;;:27;;;5013:8;5048:4;5013:39;;;;:::i;:::-;:93;;;;:::i;:::-;5012:102;;;;:::i;:::-;4993:121;-1:-1:-1;5215:12:10;:25;5228:4;5233:5;:1;5237;5233:5;:::i;:::-;5228:11;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;5215:25:10;-1:-1:-1;;;;;5215:25:10;;;;;;;;;;;;:31;;;5177:11;:69;;;;:::i;:::-;5136:7;5144:5;:1;5148;5144:5;:::i;:::-;5136:14;;;;;;;;:::i;:::-;;;;;;:110;;;;;4971:294;4727:609;;;5320:1;5303:7;5311:5;:1;5315;5311:5;:::i;:::-;5303:14;;;;;;;;:::i;:::-;;;;;;:18;;;;;4727:609;4708:3;;4674:672;;;;4210:1167;;;;:::o;5705:147:0:-;4929:7;4955:12;;;:6;:12;;;;;:22;;;2798:16;2809:4;2798:10;:16::i;:::-;5819:26:::1;5831:4;5837:7;5819:11;:26::i;2649:541:10:-:0;2159:26;2798:16:0;2809:4;2798:10;:16::i;:::-;2882:2:10::1;2857:14;:21;:27;;2836:144;;;::::0;-1:-1:-1;;;2836:144:10;;13032:2:11;2836:144:10::1;::::0;::::1;13014:21:11::0;13071:2;13051:18;;;13044:30;13110:34;13090:18;;;13083:62;13181:34;13161:18;;;13154:62;-1:-1:-1;;;13232:19:11;;;13225:37;13279:19;;2836:144:10::1;12830:474:11::0;2836:144:10::1;2996:9;2991:193;3011:14;:21;3007:1;:25;2991:193;;;3087:86;;;;;;;;3116:6;3123:1;3116:9;;;;;;;;:::i;:::-;;;;;;;3087:86;;;;3143:13;3157:1;3143:16;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;3087:86:10::1;;;::::0;3053:12:::1;:31;3066:14;3081:1;3066:17;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;3053:31:10;;::::1;::::0;;;;::::1;::::0;;;;;;;;-1:-1:-1;3053:31:10;:120;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;3053:120:10::1;::::0;;;::::1;;::::0;;3034:3:::1;2991:193;;;;2649:541:::0;;;;:::o;2420:223::-;2159:26;2798:16:0;2809:4;2798:10;:16::i;:::-;-1:-1:-1;2604:32:10::1;::::0;;;;::::1;::::0;;;;;-1:-1:-1;;;;;2604:32:10;;::::1;;::::0;;::::1;::::0;;;2575:26;;::::1;-1:-1:-1::0;2575:26:10;;;:12:::1;:26:::0;;;;;:61;;;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;2575:61:10::1;::::0;;;::::1;::::0;;;::::1;::::0;;2420:223::o;3789:103:0:-;3855:30;3866:4;965:10:4;3855::0;:30::i;:::-;3789:103;:::o;7938:233::-;8021:22;8029:4;8035:7;8021;:22::i;:::-;8016:149;;8059:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8059:29:0;;;;;;;;;:36;;-1:-1:-1;;8059:36:0;8091:4;8059:36;;;8141:12;965:10:4;;886:96;8141:12:0;-1:-1:-1;;;;;8114:40:0;8132:7;-1:-1:-1;;;;;8114:40:0;8126:4;8114:40;;;;;;;;;;7938:233;;:::o;8342:234::-;8425:22;8433:4;8439:7;8425;:22::i;:::-;8421:149;;;8495:5;8463:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8463:29:0;;;;;;;;;;:37;;-1:-1:-1;;8463:37:0;;;8519:40;965:10:4;;8463:12:0;;8519:40;;8495:5;8519:40;8342:234;;:::o;4173:501::-;4261:22;4269:4;4275:7;4261;:22::i;:::-;4256:412;;4444:39;4475:7;4444:30;:39::i;:::-;4554:49;4593:4;4600:2;4554:30;:49::i;:::-;4351:274;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4351:274:0;;;;;;;;;;-1:-1:-1;;;4299:358:0;;;;;;;:::i;2473:149:5:-;2531:13;2563:52;-1:-1:-1;;;;;2575:22:5;;376:2;1884:437;1959:13;1984:19;2016:10;2020:6;2016:1;:10;:::i;:::-;:14;;2029:1;2016:14;:::i;:::-;2006:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2006:25:5;;1984:47;;-1:-1:-1;;;2041:6:5;2048:1;2041:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2041:15:5;;;;;;;;;-1:-1:-1;;;2066:6:5;2073:1;2066:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2066:15:5;;;;;;;;-1:-1:-1;2096:9:5;2108:10;2112:6;2108:1;:10;:::i;:::-;:14;;2121:1;2108:14;:::i;:::-;2096:26;;2091:128;2128:1;2124;:5;2091:128;;;-1:-1:-1;;;2171:5:5;2179:3;2171:11;2162:21;;;;;;;:::i;:::-;;;;2150:6;2157:1;2150:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2150:33:5;;;;;;;;-1:-1:-1;2207:1:5;2197:11;;;;;2131:3;;;:::i;:::-;;;2091:128;;;-1:-1:-1;2236:10:5;;2228:55;;;;-1:-1:-1;;;2228:55:5;;14892:2:11;2228:55:5;;;14874:21:11;;;14911:18;;;14904:30;14970:34;14950:18;;;14943:62;15022:18;;2228:55:5;14690:356:11;2228:55:5;2307:6;1884:437;-1:-1:-1;;;1884:437:5:o;14:286:11:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:11;;209:43;;199:71;;266:1;263;256:12;497:226;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;670:23:11;;497:226;-1:-1:-1;497:226:11:o;910:173::-;978:20;;-1:-1:-1;;;;;1027:31:11;;1017:42;;1007:70;;1073:1;1070;1063:12;1007:70;910:173;;;:::o;1088:300::-;1156:6;1164;1217:2;1205:9;1196:7;1192:23;1188:32;1185:52;;;1233:1;1230;1223:12;1185:52;1278:23;;;-1:-1:-1;1344:38:11;1378:2;1363:18;;1344:38;:::i;:::-;1334:48;;1088:300;;;;;:::o;1393:186::-;1452:6;1505:2;1493:9;1484:7;1480:23;1476:32;1473:52;;;1521:1;1518;1511:12;1473:52;1544:29;1563:9;1544:29;:::i;2128:919::-;2241:6;2249;2257;2265;2273;2326:3;2314:9;2305:7;2301:23;2297:33;2294:53;;;2343:1;2340;2333:12;2294:53;2388:23;;;-1:-1:-1;2486:2:11;2471:18;;2458:32;2513:18;2502:30;;2499:50;;;2545:1;2542;2535:12;2499:50;2568:22;;2621:4;2613:13;;2609:27;-1:-1:-1;2599:55:11;;2650:1;2647;2640:12;2599:55;2690:2;2677:16;2716:18;2708:6;2705:30;2702:50;;;2748:1;2745;2738:12;2702:50;2801:7;2796:2;2786:6;2783:1;2779:14;2775:2;2771:23;2767:32;2764:45;2761:65;;;2822:1;2819;2812:12;2761:65;2853:2;2845:11;;;;;-1:-1:-1;2875:6:11;-1:-1:-1;2900:38:11;2934:2;2919:18;;2900:38;:::i;:::-;2128:919;;;;-1:-1:-1;2128:919:11;;3011:2;2996:18;2983:32;;2128:919;-1:-1:-1;;2128:919:11:o;3234:127::-;3295:10;3290:3;3286:20;3283:1;3276:31;3326:4;3323:1;3316:15;3350:4;3347:1;3340:15;3366:275;3437:2;3431:9;3502:2;3483:13;;-1:-1:-1;;3479:27:11;3467:40;;3537:18;3522:34;;3558:22;;;3519:62;3516:88;;;3584:18;;:::i;:::-;3620:2;3613:22;3366:275;;-1:-1:-1;3366:275:11:o;3646:183::-;3706:4;3739:18;3731:6;3728:30;3725:56;;;3761:18;;:::i;:::-;-1:-1:-1;3806:1:11;3802:14;3818:4;3798:25;;3646:183::o;3834:675::-;3888:5;3941:3;3934:4;3926:6;3922:17;3918:27;3908:55;;3959:1;3956;3949:12;3908:55;3999:6;3986:20;4026:64;4042:47;4082:6;4042:47;:::i;:::-;4026:64;:::i;:::-;4114:3;4138:6;4133:3;4126:19;4170:4;4165:3;4161:14;4154:21;;4231:4;4221:6;4218:1;4214:14;4206:6;4202:27;4198:38;4184:52;;4259:3;4251:6;4248:15;4245:35;;;4276:1;4273;4266:12;4245:35;4312:4;4304:6;4300:17;4326:152;4342:6;4337:3;4334:15;4326:152;;;4410:23;4429:3;4410:23;:::i;:::-;4398:36;;4463:4;4454:14;;;;4359;4326:152;;;-1:-1:-1;4496:7:11;3834:675;-1:-1:-1;;;;;3834:675:11:o;4514:462::-;4607:6;4615;4668:2;4656:9;4647:7;4643:23;4639:32;4636:52;;;4684:1;4681;4674:12;4636:52;4729:23;;;-1:-1:-1;4827:2:11;4812:18;;4799:32;4854:18;4843:30;;4840:50;;;4886:1;4883;4876:12;4840:50;4909:61;4962:7;4953:6;4942:9;4938:22;4909:61;:::i;:::-;4899:71;;;4514:462;;;;;:::o;4981:611::-;5171:2;5183:21;;;5253:13;;5156:18;;;5275:22;;;5123:4;;5354:15;;;5328:2;5313:18;;;5123:4;5397:169;5411:6;5408:1;5405:13;5397:169;;;5472:13;;5460:26;;5515:2;5541:15;;;;5506:12;;;;5433:1;5426:9;5397:169;;;-1:-1:-1;5583:3:11;;4981:611;-1:-1:-1;;;;;4981:611:11:o;5876:1424::-;6028:6;6036;6044;6097:2;6085:9;6076:7;6072:23;6068:32;6065:52;;;6113:1;6110;6103:12;6065:52;6153:9;6140:23;6186:18;6178:6;6175:30;6172:50;;;6218:1;6215;6208:12;6172:50;6241:61;6294:7;6285:6;6274:9;6270:22;6241:61;:::i;:::-;6231:71;;;6355:2;6344:9;6340:18;6327:32;6384:18;6374:8;6371:32;6368:52;;;6416:1;6413;6406:12;6368:52;6439:63;6494:7;6483:8;6472:9;6468:24;6439:63;:::i;:::-;6429:73;;;6555:2;6544:9;6540:18;6527:32;6584:18;6574:8;6571:32;6568:52;;;6616:1;6613;6606:12;6568:52;6639:24;;6694:4;6686:13;;6682:27;-1:-1:-1;6672:55:11;;6723:1;6720;6713:12;6672:55;6763:2;6750:16;6786:64;6802:47;6842:6;6802:47;:::i;6786:64::-;6872:3;6896:6;6891:3;6884:19;6928:2;6923:3;6919:12;6912:19;;6983:2;6973:6;6970:1;6966:14;6962:2;6958:23;6954:32;6940:46;;7009:7;7001:6;6998:19;6995:39;;;7030:1;7027;7020:12;6995:39;7062:2;7058;7054:11;7043:22;;7074:196;7090:6;7085:3;7082:15;7074:196;;;7180:17;;7210:18;;7257:2;7107:12;;;;7248;;;;7074:196;;;7289:5;7279:15;;;;;;5876:1424;;;;;:::o;7305:374::-;7382:6;7390;7398;7451:2;7439:9;7430:7;7426:23;7422:32;7419:52;;;7467:1;7464;7457:12;7419:52;7490:29;7509:9;7490:29;:::i;:::-;7480:39;;7538:38;7572:2;7561:9;7557:18;7538:38;:::i;:::-;7305:374;;7528:48;;-1:-1:-1;;;7645:2:11;7630:18;;;;7617:32;;7305:374::o;8100:127::-;8161:10;8156:3;8152:20;8149:1;8142:31;8192:4;8189:1;8182:15;8216:4;8213:1;8206:15;9660:184;9730:6;9783:2;9771:9;9762:7;9758:23;9754:32;9751:52;;;9799:1;9796;9789:12;9751:52;-1:-1:-1;9822:16:11;;9660:184;-1:-1:-1;9660:184:11:o;10541:277::-;10608:6;10661:2;10649:9;10640:7;10636:23;10632:32;10629:52;;;10677:1;10674;10667:12;10629:52;10709:9;10703:16;10762:5;10755:13;10748:21;10741:5;10738:32;10728:60;;10784:1;10781;10774:12;12040:127;12101:10;12096:3;12092:20;12089:1;12082:31;12132:4;12129:1;12122:15;12156:4;12153:1;12146:15;12172:128;12239:9;;;12260:11;;;12257:37;;;12274:18;;:::i;12305:125::-;12370:9;;;12391:10;;;12388:36;;;12404:18;;:::i;12435:168::-;12508:9;;;12539;;12556:15;;;12550:22;;12536:37;12526:71;;12577:18;;:::i;12608:217::-;12648:1;12674;12664:132;;12718:10;12713:3;12709:20;12706:1;12699:31;12753:4;12750:1;12743:15;12781:4;12778:1;12771:15;12664:132;-1:-1:-1;12810:9:11;;12608:217::o;13309:212::-;13351:3;13389:5;13383:12;13433:6;13426:4;13419:5;13415:16;13410:3;13404:36;13495:1;13459:16;;13484:13;;;-1:-1:-1;13459:16:11;;13309:212;-1:-1:-1;13309:212:11:o;13526:595::-;13937:25;13932:3;13925:38;13907:3;13982:39;14017:2;14012:3;14008:12;14000:6;13982:39;:::i;:::-;-1:-1:-1;;;14037:2:11;14030:31;14077:38;14111:2;14107;14103:11;14095:6;14077:38;:::i;:::-;14070:45;13526:595;-1:-1:-1;;;;;13526:595:11:o;14126:418::-;14275:2;14264:9;14257:21;14238:4;14307:6;14301:13;14350:6;14345:2;14334:9;14330:18;14323:34;14409:6;14404:2;14396:6;14392:15;14387:2;14376:9;14372:18;14366:50;14465:1;14460:2;14451:6;14440:9;14436:22;14432:31;14425:42;14535:2;14528;14524:7;14519:2;14511:6;14507:15;14503:29;14492:9;14488:45;14484:54;14476:62;;;14126:418;;;;:::o;14549:136::-;14588:3;14616:5;14606:39;;14625:18;;:::i;:::-;-1:-1:-1;;;14661:18:11;;14549:136::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1253800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "260",
								"PRICE_MANAGER()": "261",
								"WETH()": "infinite",
								"getAmountsOut(uint256,address[])": "infinite",
								"getRoleAdmin(bytes32)": "2487",
								"getTokenDetails(address)": "4855",
								"getTokenPrice(address)": "2623",
								"getWETHAddress()": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2695",
								"renounceRole(bytes32,address)": "29086",
								"revokeRole(bytes32,address)": "infinite",
								"setTokenDetails(address,address,uint256)": "infinite",
								"setTokensDetails(address[],address[],uint256[])": "infinite",
								"supportsInterface(bytes4)": "447",
								"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "infinite",
								"tokenDetails(address)": "4754"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2192,
									"end": 2414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2192,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2229,
									"end": 2241,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2229,
									"end": 2241,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2229,
									"end": 2241,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2229,
									"end": 2241,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2295,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2365,
									"end": 2369,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 2251,
									"end": 2261,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2251,
									"end": 2295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2251,
									"end": 2295,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 2251,
									"end": 2295,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2305,
									"end": 2344,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2159,
									"end": 2185,
									"name": "PUSH",
									"source": 10,
									"value": "A451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 2251,
									"end": 2261,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 2251,
									"end": 2295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2305,
									"end": 2344,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 2305,
									"end": 2344,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2388,
									"end": 2392,
									"name": "PUSH",
									"source": 10,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2394,
									"end": 2406,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2394,
									"end": 2404,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2394,
									"end": 2404,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2394,
									"end": 2404,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2394,
									"end": 2406,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2394,
									"end": 2406,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 2394,
									"end": 2406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2394,
									"end": 2406,
									"name": "tag",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 2394,
									"end": 2406,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2407,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2366,
									"name": "PUSH",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2373,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2354,
									"end": 2407,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 886,
									"end": 982,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 886,
									"end": 982,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 965,
									"end": 975,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7938,
									"end": 8171,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7938,
									"end": 8171,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3436,
									"end": 3440,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3465,
									"name": "PUSH",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3471,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3459,
									"end": 3488,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8016,
									"end": 8165,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8016,
									"end": 8165,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8065,
									"name": "PUSH",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8071,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8059,
									"end": 8088,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8088,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8088,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8088,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8088,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8088,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8088,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8088,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8088,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8095,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8095,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8059,
									"end": 8095,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8091,
									"end": 8095,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8059,
									"end": 8095,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8095,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8059,
									"end": 8095,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 8141,
									"end": 8153,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 886,
									"end": 982,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8141,
									"end": 8153,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 8141,
									"end": 8153,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8132,
									"end": 8139,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8126,
									"end": 8130,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8114,
									"end": 8154,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 8016,
									"end": 8165,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8016,
									"end": 8165,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7938,
									"end": 8171,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7938,
									"end": 8171,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7938,
									"end": 8171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "2279"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1874,
									"end": 7173,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b6f335f6f2fb06d29afe929f916428c8161d67a46e67dc1bd46f41021501803b64736f6c634300081c0033",
									".code": [
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "AFFA8817"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "D06CA61F"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "D06CA61F"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "DD4BE683"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "EB71F7E6"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "FA1C631B"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "AFFA8817"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "B6F9DE95"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "CF0888AA"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "D02641A0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "88AA8BEE"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "88AA8BEE"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "AD5C4648"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 7173,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4855,
											"end": 4984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 874,
											"end": 899,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 874,
											"end": 899,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 874,
											"end": 899,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 862,
											"end": 864,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4855,
											"end": 4984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 728,
											"end": 905,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 5610,
											"end": 5776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5755,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 5769,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5736,
											"end": 5769,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1819,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1806,
											"end": 1819,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1788,
											"end": 1820,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1788,
											"end": 1820,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1880,
											"end": 1884,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1868,
											"end": 1885,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1868,
											"end": 1885,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1868,
											"end": 1885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1862,
											"end": 1886,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1908,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1836,
											"end": 1856,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1836,
											"end": 1856,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1836,
											"end": 1856,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1909,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1909,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1909,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1829,
											"end": 1909,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5610,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1584,
											"end": 1915,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2320,
											"end": 2369,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "2279"
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2084,
											"end": 2116,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2117,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2066,
											"end": 2117,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2039,
											"end": 2057,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2025,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1920,
											"end": 2123,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5456,
											"end": 5460,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "2279"
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 5383,
											"end": 5467,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 3196,
											"end": 4198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 3196,
											"end": 4198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2159,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "A451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E"
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2185,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 5473,
											"end": 5604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5565,
											"end": 5591,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5539,
											"end": 5546,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5565,
											"end": 5591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5577,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 5565,
											"end": 5591,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5565,
											"end": 5591,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5591,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5565,
											"end": 5591,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5591,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5565,
											"end": 5597,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5473,
											"end": 5604,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 4210,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4210,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 4210,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5705,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5705,
											"end": 5852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 2061,
											"end": 2112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5771,
											"end": 5796,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5832,
											"end": 5864,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5832,
											"end": 5864,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5832,
											"end": 5864,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5827,
											"end": 5829,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5812,
											"end": 5830,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5805,
											"end": 5865,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2061,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 5597,
											"end": 5871,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2649,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2649,
											"end": 3190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2420,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2420,
											"end": 2643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3135,
											"end": 3139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3158,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1189,
											"end": 1240,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3220,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3220,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3151,
											"end": 3256,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3050,
											"end": 3263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5404,
											"end": 5408,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5417,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 5393,
											"end": 5418,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5393,
											"end": 5418,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5280,
											"end": 5425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6507,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7886,
											"end": 7888,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7868,
											"end": 7889,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7925,
											"end": 7927,
											"name": "PUSH",
											"source": 11,
											"value": "2F"
										},
										{
											"begin": 7905,
											"end": 7923,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7905,
											"end": 7923,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7905,
											"end": 7923,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7898,
											"end": 7928,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7998,
											"name": "PUSH",
											"source": 11,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 7944,
											"end": 7962,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 7944,
											"end": 7962,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7944,
											"end": 7962,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7937,
											"end": 7999,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103937B632B9903337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8015,
											"end": 8033,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8015,
											"end": 8033,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8015,
											"end": 8033,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8008,
											"end": 8053,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8070,
											"end": 8089,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8070,
											"end": 8089,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6476,
											"end": 6559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6582,
											"end": 6586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6588,
											"end": 6595,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 6570,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6389,
											"end": 6603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3350,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3436,
											"end": 3440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3465,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3459,
											"end": 3488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3350,
											"end": 3495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3422,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "2279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3407,
											"end": 3422,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3411,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3411,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3412,
											"end": 3413,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3407,
											"end": 3414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3407,
											"end": 3414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3407,
											"end": 3422,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3422,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8434,
											"end": 8436,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8416,
											"end": 8437,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8473,
											"end": 8475,
											"name": "PUSH",
											"source": 11,
											"value": "1D"
										},
										{
											"begin": 8453,
											"end": 8471,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8453,
											"end": 8471,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8453,
											"end": 8471,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8446,
											"end": 8476,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8512,
											"end": 8543,
											"name": "PUSH",
											"source": 11,
											"value": "556E69737761705632526F757465723A20494E56414C49445F50415448000000"
										},
										{
											"begin": 8492,
											"end": 8510,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8492,
											"end": 8510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8492,
											"end": 8510,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8485,
											"end": 8544,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8561,
											"end": 8579,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 8232,
											"end": 8585,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 3399,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3486,
											"end": 3501,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3474,
											"end": 3501,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8792,
											"end": 8794,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8774,
											"end": 8795,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8831,
											"end": 8833,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8804,
											"end": 8834,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8870,
											"end": 8896,
											"name": "PUSH",
											"source": 11,
											"value": "556E69737761705632526F757465723A20455850495245440000000000000000"
										},
										{
											"begin": 8850,
											"end": 8868,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8850,
											"end": 8868,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8850,
											"end": 8868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8843,
											"end": 8897,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8932,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 8914,
											"end": 8932,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 8590,
											"end": 8938,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 3466,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 3566,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3591,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3608,
											"end": 3616,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3622,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3618,
											"end": 3622,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3594,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3594,
											"end": 3607,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3594,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3594,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3594,
											"end": 3626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3594,
											"end": 3626,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3577,
											"end": 3626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3669,
											"end": 3670,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3666,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3670,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3699,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3699,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3657,
											"end": 3699,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3687,
											"end": 3699,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3674,
											"end": 3683,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3674,
											"end": 3699,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3674,
											"end": 3699,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3657,
											"end": 3699,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3657,
											"end": 3699,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9145,
											"end": 9147,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9127,
											"end": 9148,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9186,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9164,
											"end": 9182,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9157,
											"end": 9187,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9223,
											"end": 9257,
											"name": "PUSH",
											"source": 11,
											"value": "556E69737761705632526F757465723A20494E53554646494349454E545F4F55"
										},
										{
											"begin": 9203,
											"end": 9221,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9203,
											"end": 9221,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9203,
											"end": 9221,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9196,
											"end": 9258,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1514155517D05353D55395"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9274,
											"end": 9292,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9267,
											"end": 9308,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9325,
											"end": 9344,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9325,
											"end": 9344,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 8943,
											"end": 9350,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "tag",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3636,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3809,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3810,
											"end": 3814,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3814,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3815,
											"end": 3816,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3810,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3810,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3818,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3797,
											"end": 3831,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3779,
											"end": 3831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3867,
											"end": 3871,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3871,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3867,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3867,
											"end": 3874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3867,
											"end": 3874,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9547,
											"end": 9579,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9547,
											"end": 9579,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9547,
											"end": 9579,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9529,
											"end": 9580,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3903,
											"end": 3907,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9596,
											"end": 9614,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9589,
											"end": 9649,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3861,
											"end": 3885,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3885,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3885,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3885,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 3861,
											"end": 3885,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 9502,
											"end": 9520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3861,
											"end": 3909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3861,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3909,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3841,
											"end": 3909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3949,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3962,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3940,
											"end": 3962,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10051,
											"end": 10053,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10033,
											"end": 10054,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10090,
											"end": 10092,
											"name": "PUSH",
											"source": 11,
											"value": "2C"
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10063,
											"end": 10093,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10129,
											"end": 10163,
											"name": "PUSH",
											"source": 11,
											"value": "556E69737761705632526F757465723A20494E53554646494349454E545F414D"
										},
										{
											"begin": 10109,
											"end": 10127,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10109,
											"end": 10127,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10127,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10164,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13D5539517D0531313D5D151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10180,
											"end": 10198,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10180,
											"end": 10198,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10180,
											"end": 10198,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10173,
											"end": 10215,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10232,
											"end": 10251,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 10232,
											"end": 10251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 9849,
											"end": 10257,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 3919,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4049,
											"end": 4053,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "2279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4062,
											"name": "PUSH",
											"source": 10,
											"value": "D0E30DB0"
										},
										{
											"begin": 4070,
											"end": 4078,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4043,
											"end": 4081,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4097,
											"end": 4101,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "2279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4111,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4111,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4116,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 4117,
											"end": 4118,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4112,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4112,
											"end": 4119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 4112,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10454,
											"end": 10486,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10436,
											"end": 10487,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10503,
											"end": 10521,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10503,
											"end": 10521,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10503,
											"end": 10521,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10530,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10530,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10496,
											"end": 10530,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 10409,
											"end": 10427,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4091,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4091,
											"end": 4130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4150,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4146,
											"end": 4153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 4146,
											"end": 4153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 4146,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11043,
											"end": 11075,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11043,
											"end": 11075,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11043,
											"end": 11075,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11025,
											"end": 11076,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11112,
											"end": 11144,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 11112,
											"end": 11144,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11112,
											"end": 11144,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11110,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11092,
											"end": 11110,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11092,
											"end": 11110,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11085,
											"end": 11145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11161,
											"end": 11179,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11161,
											"end": 11179,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11161,
											"end": 11179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11154,
											"end": 11188,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11154,
											"end": 11188,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11154,
											"end": 11188,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 4140,
											"end": 4167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4140,
											"end": 4191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4140,
											"end": 4191,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 4198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 4198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 4198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 4198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 4198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4316,
											"end": 4337,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4385,
											"end": 4386,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4374,
											"end": 4382,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4374,
											"end": 4386,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11401,
											"end": 11403,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11383,
											"end": 11404,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11440,
											"end": 11442,
											"name": "PUSH",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 11420,
											"end": 11438,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11420,
											"end": 11438,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11420,
											"end": 11438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11413,
											"end": 11443,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11479,
											"end": 11513,
											"name": "PUSH",
											"source": 11,
											"value": "556E69737761705632526F757465723A20616D6F756E74496E2073686F756C64"
										},
										{
											"begin": 11459,
											"end": 11477,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11459,
											"end": 11477,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11459,
											"end": 11477,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11452,
											"end": 11514,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2062652067726561746572207468616E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11530,
											"end": 11548,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11530,
											"end": 11548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11530,
											"end": 11548,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11523,
											"end": 11574,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11591,
											"end": 11610,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 11591,
											"end": 11610,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 11199,
											"end": 11616,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 4353,
											"end": 4465,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4511,
											"end": 4512,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 4496,
											"end": 4500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4507,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4512,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4496,
											"end": 4512,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11823,
											"end": 11825,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11805,
											"end": 11826,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11864,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 11842,
											"end": 11860,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 11842,
											"end": 11860,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11842,
											"end": 11860,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11835,
											"end": 11865,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11901,
											"end": 11935,
											"name": "PUSH",
											"source": 11,
											"value": "556E69737761705632526F757465723A207061746820636F6E7461696E732061"
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11881,
											"end": 11899,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11874,
											"end": 11936,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74206C65617374203220656C656D656E7473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11952,
											"end": 11970,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11952,
											"end": 11970,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11952,
											"end": 11970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11945,
											"end": 11993,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12010,
											"end": 12029,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 12010,
											"end": 12029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 11621,
											"end": 12035,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4475,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4624,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4620,
											"end": 4631,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 4609,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "tag",
											"source": 10,
											"value": "198"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4609,
											"end": 4632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4599,
											"end": 4632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4599,
											"end": 4632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4655,
											"end": 4663,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4649,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4650,
											"end": 4651,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4642,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4652,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4679,
											"end": 4685,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "tag",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4705,
											"end": 4706,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4691,
											"end": 4695,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4702,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4691,
											"end": 4706,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4706,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4706,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4691,
											"end": 4706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4691,
											"end": 4706,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4691,
											"end": 4706,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4688,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4687,
											"end": 4706,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4743,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4748,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4749,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4749,
											"end": 4750,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4753,
											"end": 4754,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4749,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4749,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4749,
											"end": 4754,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4749,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4744,
											"end": 4755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4744,
											"end": 4755,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4756,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4762,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4762,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4766,
											"end": 4767,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4731,
											"end": 4767,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4802,
											"end": 4806,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "2279"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4791,
											"end": 4806,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4795,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4796,
											"end": 4797,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4791,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4798,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4791,
											"end": 4806,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4791,
											"end": 4806,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4787,
											"end": 5265,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4927,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4932,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4933,
											"end": 4934,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4937,
											"end": 4938,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4933,
											"end": 4938,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4933,
											"end": 4938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4933,
											"end": 4938,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 4933,
											"end": 4938,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4928,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4939,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4940,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4946,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4915,
											"end": 4946,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4946,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4880,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4883,
											"end": 4887,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 4872,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 4872,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 4871,
											"end": 4946,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4946,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 4871,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4946,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 4871,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4837,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4838,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4838,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4843,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 4838,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 4830,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4946,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4946,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4946,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4830,
											"end": 4946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 5265,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 4787,
											"end": 5265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4993,
											"end": 5009,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5110,
											"end": 5114,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5079,
											"end": 5091,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5096,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5097,
											"end": 5098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5092,
											"end": 5099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5100,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5106,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5021,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5048,
											"end": 5052,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5013,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5013,
											"end": 5052,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5052,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5013,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5052,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 5013,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5013,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5012,
											"end": 5114,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5114,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5012,
											"end": 5114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5012,
											"end": 5114,
											"name": "tag",
											"source": 10,
											"value": "231"
										},
										{
											"begin": 5012,
											"end": 5114,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4993,
											"end": 5114,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5227,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5232,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5233,
											"end": 5234,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5237,
											"end": 5238,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5233,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5233,
											"end": 5238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5233,
											"end": 5238,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 5233,
											"end": 5238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5228,
											"end": 5239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "tag",
											"source": 10,
											"value": "234"
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5239,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5240,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5215,
											"end": 5246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5215,
											"end": 5246,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5177,
											"end": 5246,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5177,
											"end": 5246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5177,
											"end": 5246,
											"name": "tag",
											"source": 10,
											"value": "235"
										},
										{
											"begin": 5177,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5143,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5144,
											"end": 5145,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5148,
											"end": 5149,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5144,
											"end": 5149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5136,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5150,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5246,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5246,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5136,
											"end": 5246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4971,
											"end": 5265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5320,
											"end": 5321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5303,
											"end": 5310,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5311,
											"end": 5312,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5315,
											"end": 5316,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5311,
											"end": 5316,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 5311,
											"end": 5316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5311,
											"end": 5316,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 5311,
											"end": 5316,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 5303,
											"end": 5317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5317,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5303,
											"end": 5321,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 4727,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4708,
											"end": 4711,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4708,
											"end": 4711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4674,
											"end": 5346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4210,
											"end": 5377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 5705,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 4936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4977,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 5831,
											"end": 5835,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5837,
											"end": 5844,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5819,
											"end": 5830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 5819,
											"end": 5845,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "A451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2882,
											"end": 2884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 2857,
											"end": 2871,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2884,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2857,
											"end": 2884,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2836,
											"end": 2980,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2836,
											"end": 2980,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2836,
											"end": 2980,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2980,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13032,
											"end": 13034,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2836,
											"end": 2980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13014,
											"end": 13035,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13071,
											"end": 13073,
											"name": "PUSH",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13044,
											"end": 13074,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13110,
											"end": 13144,
											"name": "PUSH",
											"source": 11,
											"value": "556E69737761705632526F757465723A20546F6B656E73206172726179206973"
										},
										{
											"begin": 13090,
											"end": 13108,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 13090,
											"end": 13108,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13090,
											"end": 13108,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13083,
											"end": 13145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13181,
											"end": 13215,
											"name": "PUSH",
											"source": 11,
											"value": "20746F6F206C6F6E672C2072656475636520746865206E756D626572206F6620"
										},
										{
											"begin": 13161,
											"end": 13179,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 13161,
											"end": 13179,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13161,
											"end": 13179,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13154,
											"end": 13216,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13232,
											"end": 13251,
											"name": "PUSH",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 13232,
											"end": 13251,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13232,
											"end": 13251,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13225,
											"end": 13262,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13279,
											"end": 13298,
											"name": "PUSH",
											"source": 11,
											"value": "A4"
										},
										{
											"begin": 13279,
											"end": 13298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 12830,
											"end": 13304,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2836,
											"end": 2980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2836,
											"end": 2980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2996,
											"end": 3005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3011,
											"end": 3025,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3011,
											"end": 3032,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3008,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3007,
											"end": 3032,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3123,
											"end": 3124,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3116,
											"end": 3125,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "258"
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3116,
											"end": 3125,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3156,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3157,
											"end": 3158,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3143,
											"end": 3159,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3143,
											"end": 3159,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3087,
											"end": 3173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3053,
											"end": 3084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3080,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3082,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3066,
											"end": 3083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "262"
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3066,
											"end": 3083,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3053,
											"end": 3084,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3053,
											"end": 3173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3173,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3034,
											"end": 3037,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3184,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2649,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2420,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2159,
											"end": 2185,
											"name": "PUSH",
											"source": 10,
											"value": "A451215B66F023BB76F9A9E7BC5C64156446B47B26061A8A32EAA319C45F695E"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2809,
											"end": 2813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2798,
											"end": 2814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2798,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2604,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 2636,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2575,
											"end": 2636,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2420,
											"end": 2643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3866,
											"end": 3870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3855,
											"end": 3865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 3855,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 3855,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3789,
											"end": 3892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8035,
											"end": 8042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8021,
											"end": 8043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 8021,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 8016,
											"end": 8165,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8065,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8091,
											"end": 8095,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 886,
											"end": 982,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 8141,
											"end": 8153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8132,
											"end": 8139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8126,
											"end": 8130,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8114,
											"end": 8154,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7938,
											"end": 8171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8433,
											"end": 8437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8439,
											"end": 8446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 8425,
											"end": 8447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 8425,
											"end": 8447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 8421,
											"end": 8570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8469,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8500,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8463,
											"end": 8475,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8519,
											"end": 8559,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8342,
											"end": 8576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 4173,
											"end": 4674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 4269,
											"end": 4273,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4261,
											"end": 4283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4256,
											"end": 4668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 4475,
											"end": 4482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 4444,
											"end": 4483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 4444,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 4593,
											"end": 4597,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 4554,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 4554,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 4351,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4351,
											"end": 4625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4299,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 4299,
											"end": 4657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "tag",
											"source": 5,
											"value": "284"
										},
										{
											"begin": 2473,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2544,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2563,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2597,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 376,
											"end": 378,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1972,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1984,
											"end": 2003,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 2020,
											"end": 2026,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2016,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 2016,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2030,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2016,
											"end": 2030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 2016,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2006,
											"end": 2031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1984,
											"end": 2031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2041,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2072,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2066,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2096,
											"end": 2105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2112,
											"end": 2118,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 2108,
											"end": 2118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2108,
											"end": 2118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2122,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2108,
											"end": 2122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 2108,
											"end": 2122,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2122,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2124,
											"end": 2129,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "181899199A1A9B1B9C1CB0B131B232B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2171,
											"end": 2176,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2182,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 2171,
											"end": 2182,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2162,
											"end": 2183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 2162,
											"end": 2183,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2158,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2150,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2159,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2183,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2208,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2197,
											"end": 2208,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "313"
										},
										{
											"begin": 2131,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 2091,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2246,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14892,
											"end": 14894,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14874,
											"end": 14895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14874,
											"end": 14895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14874,
											"end": 14895,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14911,
											"end": 14929,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 14911,
											"end": 14929,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14911,
											"end": 14929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14904,
											"end": 14934,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14970,
											"end": 15004,
											"name": "PUSH",
											"source": 11,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 14950,
											"end": 14968,
											"name": "PUSH",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 14950,
											"end": 14968,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14950,
											"end": 14968,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14943,
											"end": 15005,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 15022,
											"end": 15040,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 14690,
											"end": 15046,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 2228,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2313,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1884,
											"end": 2321,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1884,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 497,
											"end": 723,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 497,
											"end": 723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 556,
											"end": 562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 606,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 584,
											"end": 607,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 577,
											"end": 629,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 577,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 627,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 577,
											"end": 629,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 670,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 670,
											"end": 693,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 497,
											"end": 723,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 910,
											"end": 1083,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 910,
											"end": 1083,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 978,
											"end": 998,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 978,
											"end": 998,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1027,
											"end": 1058,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1027,
											"end": 1058,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1017,
											"end": 1059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1017,
											"end": 1059,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 1007,
											"end": 1077,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1063,
											"end": 1075,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1007,
											"end": 1077,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 1007,
											"end": 1077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 910,
											"end": 1083,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 910,
											"end": 1083,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 910,
											"end": 1083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 910,
											"end": 1083,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1388,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1088,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1162,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1196,
											"end": 1203,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1192,
											"end": 1215,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1188,
											"end": 1220,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1237,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 1185,
											"end": 1237,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1233,
											"end": 1234,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1231,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1235,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1185,
											"end": 1237,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 1185,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1278,
											"end": 1301,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 1378,
											"end": 1380,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1363,
											"end": 1381,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 1344,
											"end": 1382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 1344,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1382,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1382,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1388,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1388,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1388,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1388,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1088,
											"end": 1388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1393,
											"end": 1579,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1393,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1452,
											"end": 1458,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1505,
											"end": 1507,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1493,
											"end": 1502,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1484,
											"end": 1491,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1480,
											"end": 1503,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1476,
											"end": 1508,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1525,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 1473,
											"end": 1525,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1521,
											"end": 1522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1511,
											"end": 1523,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1473,
											"end": 1525,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 1473,
											"end": 1525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1544,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 1563,
											"end": 1572,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1544,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 1544,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 3047,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 2128,
											"end": 3047,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2263,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2326,
											"end": 2329,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 2314,
											"end": 2323,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2305,
											"end": 2312,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2301,
											"end": 2324,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2297,
											"end": 2330,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2347,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 2294,
											"end": 2347,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2343,
											"end": 2344,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2333,
											"end": 2345,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2347,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 2294,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2411,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2488,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2471,
											"end": 2489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2458,
											"end": 2490,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2513,
											"end": 2531,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2502,
											"end": 2532,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2502,
											"end": 2532,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2549,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 2499,
											"end": 2549,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2543,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2547,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2549,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 2499,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2568,
											"end": 2590,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2568,
											"end": 2590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2621,
											"end": 2625,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2613,
											"end": 2626,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2613,
											"end": 2626,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2654,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 2599,
											"end": 2654,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2650,
											"end": 2651,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2648,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2652,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2599,
											"end": 2654,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 2599,
											"end": 2654,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2692,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2716,
											"end": 2734,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2735,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2752,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 2702,
											"end": 2752,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2752,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 2702,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2801,
											"end": 2808,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2796,
											"end": 2798,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2779,
											"end": 2793,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 2775,
											"end": 2777,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2771,
											"end": 2794,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2767,
											"end": 2799,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2764,
											"end": 2809,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2826,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2761,
											"end": 2826,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2823,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2820,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2824,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2826,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2761,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2853,
											"end": 2855,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2856,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2845,
											"end": 2856,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2845,
											"end": 2856,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2845,
											"end": 2856,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2845,
											"end": 2856,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2875,
											"end": 2881,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2900,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 2934,
											"end": 2936,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2900,
											"end": 2938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 2900,
											"end": 2938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2900,
											"end": 2938,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 2900,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 3047,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 3047,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 3047,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 3047,
											"name": "SWAP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2128,
											"end": 3047,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 3047,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3011,
											"end": 3013,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2996,
											"end": 3014,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3015,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3015,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2128,
											"end": 3047,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2128,
											"end": 3047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3234,
											"end": 3361,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3234,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3305,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 3290,
											"end": 3293,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3286,
											"end": 3306,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3276,
											"end": 3307,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3326,
											"end": 3330,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3316,
											"end": 3331,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3350,
											"end": 3354,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 3347,
											"end": 3348,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3355,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3641,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3366,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3437,
											"end": 3439,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3440,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3502,
											"end": 3504,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3479,
											"end": 3506,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3467,
											"end": 3507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3467,
											"end": 3507,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3537,
											"end": 3555,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3522,
											"end": 3556,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3556,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3519,
											"end": 3581,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3516,
											"end": 3604,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3516,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 3516,
											"end": 3604,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3584,
											"end": 3602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 3584,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3620,
											"end": 3622,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3613,
											"end": 3635,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3641,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3366,
											"end": 3641,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3366,
											"end": 3641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3829,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3646,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3706,
											"end": 3710,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3757,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3731,
											"end": 3737,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3728,
											"end": 3758,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3725,
											"end": 3781,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3725,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3725,
											"end": 3781,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 3761,
											"end": 3779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3806,
											"end": 3807,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3802,
											"end": 3816,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3818,
											"end": 3822,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3823,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3798,
											"end": 3823,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3646,
											"end": 3829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 4509,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 3834,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3888,
											"end": 3893,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3934,
											"end": 3938,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3926,
											"end": 3932,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3922,
											"end": 3939,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3918,
											"end": 3945,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 3908,
											"end": 3963,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3956,
											"end": 3957,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3949,
											"end": 3961,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 3963,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 3908,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3999,
											"end": 4005,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4006,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 4042,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4042,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 4042,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4042,
											"end": 4089,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 4042,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 4026,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4026,
											"end": 4090,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 4026,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4114,
											"end": 4117,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4138,
											"end": 4144,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4133,
											"end": 4136,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4126,
											"end": 4145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4170,
											"end": 4174,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4165,
											"end": 4168,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4161,
											"end": 4175,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4175,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4154,
											"end": 4175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4231,
											"end": 4235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4221,
											"end": 4227,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4214,
											"end": 4228,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 4206,
											"end": 4212,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4202,
											"end": 4229,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4198,
											"end": 4236,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4236,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4184,
											"end": 4236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4259,
											"end": 4262,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4251,
											"end": 4257,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4248,
											"end": 4263,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4280,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 4245,
											"end": 4280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4276,
											"end": 4277,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4274,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 4278,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4245,
											"end": 4280,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 4245,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4312,
											"end": 4316,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4304,
											"end": 4310,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4300,
											"end": 4317,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4478,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 4326,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4342,
											"end": 4348,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4337,
											"end": 4340,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4334,
											"end": 4349,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4478,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 4326,
											"end": 4478,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 4429,
											"end": 4432,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 4410,
											"end": 4433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4433,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 4410,
											"end": 4433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4434,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4398,
											"end": 4434,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4463,
											"end": 4467,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4454,
											"end": 4468,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4454,
											"end": 4468,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4454,
											"end": 4468,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4454,
											"end": 4468,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4359,
											"end": 4373,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 4326,
											"end": 4478,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4326,
											"end": 4478,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 4326,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4496,
											"end": 4503,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3834,
											"end": 4509,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3834,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4976,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 4514,
											"end": 4976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4607,
											"end": 4613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4668,
											"end": 4670,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4656,
											"end": 4665,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4647,
											"end": 4654,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4643,
											"end": 4666,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4639,
											"end": 4671,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4685,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4682,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4686,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 4636,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4752,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4752,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4729,
											"end": 4752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4799,
											"end": 4831,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4854,
											"end": 4872,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4886,
											"end": 4887,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4884,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4888,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 4840,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 4962,
											"end": 4969,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4938,
											"end": 4960,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4909,
											"end": 4970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4909,
											"end": 4970,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 4909,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4970,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4899,
											"end": 4970,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4976,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4976,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4976,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4981,
											"end": 5592,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 4981,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5171,
											"end": 5173,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5183,
											"end": 5204,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5204,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5204,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5253,
											"end": 5266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5253,
											"end": 5266,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5174,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5174,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5156,
											"end": 5174,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5297,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5297,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5275,
											"end": 5297,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5354,
											"end": 5369,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5354,
											"end": 5369,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5354,
											"end": 5369,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5328,
											"end": 5330,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5313,
											"end": 5331,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5313,
											"end": 5331,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5313,
											"end": 5331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5123,
											"end": 5127,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5566,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 5397,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5411,
											"end": 5417,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5409,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5405,
											"end": 5418,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5566,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 5397,
											"end": 5566,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5485,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5472,
											"end": 5485,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5486,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5486,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5517,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5541,
											"end": 5556,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5556,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5541,
											"end": 5556,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5506,
											"end": 5518,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5433,
											"end": 5434,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5426,
											"end": 5435,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 5397,
											"end": 5566,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5397,
											"end": 5566,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 5397,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5583,
											"end": 5586,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5583,
											"end": 5586,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4981,
											"end": 5592,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4981,
											"end": 5592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5876,
											"end": 7300,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 5876,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6028,
											"end": 6034,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6042,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6050,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6099,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6085,
											"end": 6094,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6083,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6072,
											"end": 6095,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6068,
											"end": 6100,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6117,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6065,
											"end": 6117,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6110,
											"end": 6111,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6065,
											"end": 6117,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 6065,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6140,
											"end": 6163,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6186,
											"end": 6204,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6178,
											"end": 6184,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6175,
											"end": 6205,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6172,
											"end": 6222,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6172,
											"end": 6222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6172,
											"end": 6222,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6218,
											"end": 6219,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6220,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6172,
											"end": 6222,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 6172,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 6294,
											"end": 6301,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6285,
											"end": 6291,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6274,
											"end": 6283,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6270,
											"end": 6292,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6302,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 6241,
											"end": 6302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6241,
											"end": 6302,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 6241,
											"end": 6302,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6231,
											"end": 6302,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 6231,
											"end": 6302,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6231,
											"end": 6302,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6355,
											"end": 6357,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6344,
											"end": 6353,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6327,
											"end": 6359,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6374,
											"end": 6382,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6371,
											"end": 6403,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6368,
											"end": 6420,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6368,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 6368,
											"end": 6420,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6416,
											"end": 6417,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6414,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6406,
											"end": 6418,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6368,
											"end": 6420,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 6368,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6439,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 6494,
											"end": 6501,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6483,
											"end": 6491,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6472,
											"end": 6481,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6468,
											"end": 6492,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6439,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 6439,
											"end": 6502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6439,
											"end": 6502,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 6439,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6429,
											"end": 6502,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6429,
											"end": 6502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6429,
											"end": 6502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6555,
											"end": 6557,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6544,
											"end": 6553,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6540,
											"end": 6558,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6527,
											"end": 6559,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6584,
											"end": 6602,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6582,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6571,
											"end": 6603,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6620,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 6568,
											"end": 6620,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6616,
											"end": 6617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6614,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6618,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6620,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 6568,
											"end": 6620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6639,
											"end": 6663,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6639,
											"end": 6663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6686,
											"end": 6699,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6686,
											"end": 6699,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6682,
											"end": 6709,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 6672,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 6672,
											"end": 6727,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6723,
											"end": 6724,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6721,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6725,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6672,
											"end": 6727,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 6672,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6763,
											"end": 6765,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6750,
											"end": 6766,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 6802,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 6842,
											"end": 6848,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6802,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 6802,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6786,
											"end": 6850,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 6786,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6872,
											"end": 6875,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6896,
											"end": 6902,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6891,
											"end": 6894,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6884,
											"end": 6903,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6928,
											"end": 6930,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6923,
											"end": 6926,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6919,
											"end": 6931,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6912,
											"end": 6931,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6912,
											"end": 6931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6983,
											"end": 6985,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6973,
											"end": 6979,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6970,
											"end": 6971,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6966,
											"end": 6980,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 6962,
											"end": 6964,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6958,
											"end": 6981,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6954,
											"end": 6986,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6940,
											"end": 6986,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6940,
											"end": 6986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7009,
											"end": 7016,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 7001,
											"end": 7007,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6998,
											"end": 7017,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7034,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 6995,
											"end": 7034,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7030,
											"end": 7031,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7020,
											"end": 7032,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7034,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 6995,
											"end": 7034,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7062,
											"end": 7064,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7058,
											"end": 7060,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7054,
											"end": 7065,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7043,
											"end": 7065,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7043,
											"end": 7065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7074,
											"end": 7270,
											"name": "tag",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 7074,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7090,
											"end": 7096,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7085,
											"end": 7088,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7082,
											"end": 7097,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7074,
											"end": 7270,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7074,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 7074,
											"end": 7270,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7197,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7197,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7228,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7210,
											"end": 7228,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7257,
											"end": 7259,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7107,
											"end": 7119,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7107,
											"end": 7119,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7107,
											"end": 7119,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7107,
											"end": 7119,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7248,
											"end": 7260,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7248,
											"end": 7260,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7248,
											"end": 7260,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7248,
											"end": 7260,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7074,
											"end": 7270,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "385"
										},
										{
											"begin": 7074,
											"end": 7270,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7074,
											"end": 7270,
											"name": "tag",
											"source": 11,
											"value": "387"
										},
										{
											"begin": 7074,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7289,
											"end": 7294,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7279,
											"end": 7294,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 7279,
											"end": 7294,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7279,
											"end": 7294,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7279,
											"end": 7294,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7279,
											"end": 7294,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7279,
											"end": 7294,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5876,
											"end": 7300,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5876,
											"end": 7300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5876,
											"end": 7300,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5876,
											"end": 7300,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5876,
											"end": 7300,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5876,
											"end": 7300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7305,
											"end": 7679,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 7305,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7382,
											"end": 7388,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7404,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7453,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7439,
											"end": 7448,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7430,
											"end": 7437,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7426,
											"end": 7449,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7422,
											"end": 7454,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7419,
											"end": 7471,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7419,
											"end": 7471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 7419,
											"end": 7471,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7467,
											"end": 7468,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7469,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7419,
											"end": 7471,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 7419,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 7509,
											"end": 7518,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7519,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 7490,
											"end": 7519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7490,
											"end": 7519,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 7490,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7480,
											"end": 7519,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7480,
											"end": 7519,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7538,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 7572,
											"end": 7574,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7561,
											"end": 7570,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7575,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7538,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 7538,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7538,
											"end": 7576,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 7538,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7305,
											"end": 7679,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7305,
											"end": 7679,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 7528,
											"end": 7576,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7528,
											"end": 7576,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7645,
											"end": 7647,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7630,
											"end": 7648,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7649,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7649,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7305,
											"end": 7679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8100,
											"end": 8227,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 8100,
											"end": 8227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8161,
											"end": 8171,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 8156,
											"end": 8159,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 8152,
											"end": 8172,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 8149,
											"end": 8150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8142,
											"end": 8173,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8192,
											"end": 8196,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 8189,
											"end": 8190,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8182,
											"end": 8197,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8213,
											"end": 8214,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8206,
											"end": 8221,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9660,
											"end": 9844,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 9660,
											"end": 9844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9730,
											"end": 9736,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9783,
											"end": 9785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9771,
											"end": 9780,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9758,
											"end": 9781,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9754,
											"end": 9786,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9751,
											"end": 9803,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9751,
											"end": 9803,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 9751,
											"end": 9803,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9799,
											"end": 9800,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9796,
											"end": 9797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9789,
											"end": 9801,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9751,
											"end": 9803,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 9751,
											"end": 9803,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9822,
											"end": 9838,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9822,
											"end": 9838,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9660,
											"end": 9844,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9660,
											"end": 9844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10541,
											"end": 10818,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 10541,
											"end": 10818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10608,
											"end": 10614,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10661,
											"end": 10663,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10649,
											"end": 10658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10640,
											"end": 10647,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 10636,
											"end": 10659,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10632,
											"end": 10664,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10681,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 10629,
											"end": 10681,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10677,
											"end": 10678,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10674,
											"end": 10675,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10667,
											"end": 10679,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10629,
											"end": 10681,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 10629,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10709,
											"end": 10718,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10703,
											"end": 10719,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10762,
											"end": 10767,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10755,
											"end": 10768,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10748,
											"end": 10769,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10738,
											"end": 10770,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 10728,
											"end": 10788,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10784,
											"end": 10785,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10774,
											"end": 10786,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12040,
											"end": 12167,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 12040,
											"end": 12167,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12101,
											"end": 12111,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 12096,
											"end": 12099,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 12092,
											"end": 12112,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 12089,
											"end": 12090,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12082,
											"end": 12113,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12132,
											"end": 12136,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 12129,
											"end": 12130,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12122,
											"end": 12137,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12160,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12153,
											"end": 12154,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12146,
											"end": 12161,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12172,
											"end": 12300,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 12172,
											"end": 12300,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12239,
											"end": 12248,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12239,
											"end": 12248,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12239,
											"end": 12248,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12271,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12271,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12271,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12257,
											"end": 12294,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12257,
											"end": 12294,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 12257,
											"end": 12294,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12274,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 12274,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 12274,
											"end": 12292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12305,
											"end": 12430,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 12305,
											"end": 12430,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12370,
											"end": 12379,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12370,
											"end": 12379,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12370,
											"end": 12379,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12391,
											"end": 12401,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12391,
											"end": 12401,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12391,
											"end": 12401,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12388,
											"end": 12424,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12388,
											"end": 12424,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 12388,
											"end": 12424,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12404,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 12404,
											"end": 12422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 12404,
											"end": 12422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12435,
											"end": 12603,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 12435,
											"end": 12603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12508,
											"end": 12517,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12539,
											"end": 12548,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12539,
											"end": 12548,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12556,
											"end": 12571,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12556,
											"end": 12571,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12556,
											"end": 12571,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12550,
											"end": 12572,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12550,
											"end": 12572,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12536,
											"end": 12573,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 12526,
											"end": 12597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 12526,
											"end": 12597,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12577,
											"end": 12595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 12577,
											"end": 12595,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 12577,
											"end": 12595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12608,
											"end": 12825,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 12608,
											"end": 12825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 12649,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12674,
											"end": 12675,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12664,
											"end": 12796,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 12664,
											"end": 12796,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12718,
											"end": 12728,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B71"
										},
										{
											"begin": 12713,
											"end": 12716,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 12709,
											"end": 12729,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 12706,
											"end": 12707,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12753,
											"end": 12757,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 12750,
											"end": 12751,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12743,
											"end": 12758,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12781,
											"end": 12785,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 12778,
											"end": 12779,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12771,
											"end": 12786,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12664,
											"end": 12796,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 12664,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12810,
											"end": 12819,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12810,
											"end": 12819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12608,
											"end": 12825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13309,
											"end": 13521,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 13309,
											"end": 13521,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13351,
											"end": 13354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13389,
											"end": 13394,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13383,
											"end": 13395,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13433,
											"end": 13439,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13426,
											"end": 13430,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13419,
											"end": 13424,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13415,
											"end": 13431,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13410,
											"end": 13413,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13404,
											"end": 13440,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 13495,
											"end": 13496,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13459,
											"end": 13475,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13459,
											"end": 13475,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13484,
											"end": 13497,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13484,
											"end": 13497,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13484,
											"end": 13497,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13459,
											"end": 13475,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13459,
											"end": 13475,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13309,
											"end": 13521,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13309,
											"end": 13521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13526,
											"end": 14121,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 13526,
											"end": 14121,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13937,
											"end": 13962,
											"name": "PUSH",
											"source": 11,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 13932,
											"end": 13935,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13925,
											"end": 13963,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13907,
											"end": 13910,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 14017,
											"end": 14019,
											"name": "PUSH",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 14012,
											"end": 14015,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14008,
											"end": 14020,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14000,
											"end": 14006,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13982,
											"end": 14021,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 13982,
											"end": 14021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13982,
											"end": 14021,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 13982,
											"end": 14021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1034B99036B4B9B9B4B733903937B6329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14037,
											"end": 14039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14030,
											"end": 14061,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14077,
											"end": 14115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 14111,
											"end": 14113,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 14107,
											"end": 14109,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14103,
											"end": 14114,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14095,
											"end": 14101,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14077,
											"end": 14115,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 14077,
											"end": 14115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14077,
											"end": 14115,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 14077,
											"end": 14115,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14070,
											"end": 14115,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 13526,
											"end": 14121,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13526,
											"end": 14121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14126,
											"end": 14544,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 14126,
											"end": 14544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14275,
											"end": 14277,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14264,
											"end": 14273,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14257,
											"end": 14278,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14238,
											"end": 14242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14307,
											"end": 14313,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14301,
											"end": 14314,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14350,
											"end": 14356,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14345,
											"end": 14347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14334,
											"end": 14343,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14330,
											"end": 14348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14323,
											"end": 14357,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14409,
											"end": 14415,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14404,
											"end": 14406,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14396,
											"end": 14402,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14392,
											"end": 14407,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14387,
											"end": 14389,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14376,
											"end": 14385,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14372,
											"end": 14390,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14366,
											"end": 14416,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 14465,
											"end": 14466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14460,
											"end": 14462,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14451,
											"end": 14457,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14440,
											"end": 14449,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 14436,
											"end": 14458,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14432,
											"end": 14463,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14425,
											"end": 14467,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14528,
											"end": 14530,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14524,
											"end": 14531,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 14519,
											"end": 14521,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 14511,
											"end": 14517,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14507,
											"end": 14522,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14503,
											"end": 14532,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14492,
											"end": 14501,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14488,
											"end": 14533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14484,
											"end": 14538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14476,
											"end": 14538,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14476,
											"end": 14538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14476,
											"end": 14538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14126,
											"end": 14544,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14126,
											"end": 14544,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14126,
											"end": 14544,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14126,
											"end": 14544,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14126,
											"end": 14544,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14549,
											"end": 14685,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 14549,
											"end": 14685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14588,
											"end": 14591,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14616,
											"end": 14621,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14606,
											"end": 14645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 14606,
											"end": 14645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14625,
											"end": 14643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 14625,
											"end": 14643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 14625,
											"end": 14643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14625,
											"end": 14643,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 14625,
											"end": 14643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 14661,
											"end": 14679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14661,
											"end": 14679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14549,
											"end": 14685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
								"uniswap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PRICE_MANAGER()": "cf0888aa",
							"WETH()": "ad5c4648",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getTokenDetails(address)": "88aa8bee",
							"getTokenPrice(address)": "d02641a0",
							"getWETHAddress()": "affa8817",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setTokenDetails(address,address,uint256)": "fa1c631b",
							"setTokensDetails(address[],address[],uint256[])": "eb71f7e6",
							"supportsInterface(bytes4)": "01ffc9a7",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"tokenDetails(address)": "dd4be683"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRICE_MANAGER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenManager\",\"type\":\"address\"}],\"internalType\":\"struct UniswapV2Router02.TokenDetail\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"getTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWETHAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenManager\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setTokenDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"tokenAddresses\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"tokenManagers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"prices\",\"type\":\"uint256[]\"}],\"name\":\"setTokensDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenManager\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"uniswap.sol\":\"UniswapV2Router02\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0xc8710577334e8d0799ae2b2a731b1924a7bddd64319da9787ddd2dc69bdd1ce5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b83b7afa4d2372da3ba5402fb10860a105c35d79812c60dc61007be2afc17618\",\"dweb:/ipfs/QmYX9xPmbNVSKXrepKiUZiG5oL3SdzFp9a4kqspxX1sEUx\"]},\"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol\":{\"keccak256\":\"0xb8f5302f12138c5561362e88a78d061573e6298b7a1a5afe84a1e2c8d4d5aeaa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://740cf4dc535e3082560cf5a031473029f322690fc8037fe9d5e3a8bef42e757c\",\"dweb:/ipfs/QmTQxFdfxcaueQa23VX34wAPqzruZbkzyeN58tZK2yav2b\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xb96dc79b65b7c37937919dcdb356a969ce0aa2e8338322bf4dc027a3c9c9a7eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8613145881436fc0480fff22da4868d611e2b0c0c3da083334eb4362ce1945a\",\"dweb:/ipfs/QmPqpP3YeRbBdTJRe6Gv2eGsUaANf4J6RwTNRW36iYahfV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xd90d7723512df65ae417adaf0801042940f0dabd60039ceeaffe34aa5b238da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b13befeb3413749292f9fb229de1c7a509a5ce2c8047d9094fc004ca9d3af89\",\"dweb:/ipfs/QmRzJ2hZSwRtMejHUZAYTPRKgZsnfb112Fno9Jf3EiDfwA\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol\":{\"keccak256\":\"0x2bc0007987c229ae7624eb29be6a9b84f6a6a5872f76248b15208b131ea41c4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b2835c737d073ef8b82a4cc246495a9740f43e7ff2cf130906b2449ff9bfb91\",\"dweb:/ipfs/QmSCWfNoSvvTN57ic7o1RW6NqSxxGAqbBTnLKc7QHe27qB\"]},\"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol\":{\"keccak256\":\"0x88f6b7bba3ee33eeb741f9a0f5bc98b6e6e352d0fe4905377bb328590f84095a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88ace2d60f265752f18903d839910be4e4e104340b2957678585b812447825d4\",\"dweb:/ipfs/QmXFkNxMc3AAGzhs2wUEZyErWQjsvoTGyYjuU5oZkFki5Z\"]},\"uniswap.sol\":{\"keccak256\":\"0xfa39f0a84ba0fcb5d8cc953633cad3be340202e5aed84c7f621e401f114db6fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cdd5ccc4fa62360526d59bacb17ecb5841b518e70183c22c72d49f6d8a2e7a6\",\"dweb:/ipfs/QmT755SXNptA4XyF8BDYUnyESLA1Xs3oBbSS5JskDgD7TW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 416,
								"contract": "uniswap.sol:UniswapV2Router02",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 419,
								"contract": "uniswap.sol:UniswapV2Router02",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 958,
								"contract": "uniswap.sol:UniswapV2Router02",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1232,
								"contract": "uniswap.sol:UniswapV2Router02",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 28,
								"contract": "uniswap.sol:UniswapV2Router02",
								"label": "_roles",
								"offset": 0,
								"slot": "101",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)"
							},
							{
								"astId": 335,
								"contract": "uniswap.sol:UniswapV2Router02",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2284,
								"contract": "uniswap.sol:UniswapV2Router02",
								"label": "tokenDetails",
								"offset": 0,
								"slot": "151",
								"type": "t_mapping(t_address,t_struct(TokenDetail)2277_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(TokenDetail)2277_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct UniswapV2Router02.TokenDetail)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenDetail)2277_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)23_storage"
							},
							"t_struct(RoleData)23_storage": {
								"encoding": "inplace",
								"label": "struct AccessControlUpgradeable.RoleData",
								"members": [
									{
										"astId": 20,
										"contract": "uniswap.sol:UniswapV2Router02",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 22,
										"contract": "uniswap.sol:UniswapV2Router02",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(TokenDetail)2277_storage": {
								"encoding": "inplace",
								"label": "struct UniswapV2Router02.TokenDetail",
								"members": [
									{
										"astId": 2274,
										"contract": "uniswap.sol:UniswapV2Router02",
										"label": "price",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2276,
										"contract": "uniswap.sol:UniswapV2Router02",
										"label": "tokenManager",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							336
						],
						"ContextUpgradeable": [
							959
						],
						"ERC165Upgradeable": [
							1233
						],
						"IAccessControlUpgradeable": [
							409
						],
						"IERC165Upgradeable": [
							1245
						],
						"Initializable": [
							578
						],
						"MathUpgradeable": [
							2111
						],
						"SignedMathUpgradeable": [
							2216
						],
						"StringsUpgradeable": [
							1188
						]
					},
					"id": 337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
							"file": "./IAccessControlUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 410,
							"src": "133:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 960,
							"src": "175:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
							"file": "../utils/StringsUpgradeable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 1189,
							"src": "217:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 1234,
							"src": "259:54:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 337,
							"sourceUnit": 579,
							"src": "314:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 578,
										"src": "322:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Initializable",
										"nameLocations": [
											"2086:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "2086:13:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "2086:13:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2101:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 959,
										"src": "2101:18:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2101:18:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IAccessControlUpgradeable",
										"nameLocations": [
											"2121:25:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "2121:25:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2121:25:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2148:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1233,
										"src": "2148:17:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2148:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "379:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 336,
							"linearizedBaseContracts": [
								336,
								1233,
								1245,
								409,
								959,
								578
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2058:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 23,
									"members": [
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2223:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "2198:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 19,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2198:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 18,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2217:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2248:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 23,
											"src": "2240:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 21,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2240:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2179:8:0",
									"nodeType": "StructDefinition",
									"scope": 336,
									"src": "2172:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2307:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "2270:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
									},
									"typeName": {
										"id": 27,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 24,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2278:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2270:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 26,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 25,
												"name": "RoleData",
												"nameLocations": [
													"2289:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 23,
												"src": "2289:8:0"
											},
											"referencedDeclaration": 23,
											"src": "2289:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$23_storage_ptr",
												"typeString": "struct AccessControlUpgradeable.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 31,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2344:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "2320:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 29,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2320:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2365:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "2788:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 37,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 34,
															"src": "2809:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 36,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															147
														],
														"referencedDeclaration": 108,
														"src": "2798:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "2798:16:0"
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "2824:1:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "2376:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 42,
									"name": "onlyRole",
									"nameLocation": "2765:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2782:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "2774:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 33,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2773:14:0"
									},
									"src": "2756:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "2896:7:0",
										"statements": []
									},
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 45,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 44,
												"name": "onlyInitializing",
												"nameLocations": [
													"2879:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "2879:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2879:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "2847:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2867:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2896:0:0"
									},
									"scope": 336,
									"src": "2838:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "2977:7:0",
										"statements": []
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 51,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 50,
												"name": "onlyInitializing",
												"nameLocations": [
													"2960:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "2960:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2960:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "2918:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2948:2:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2977:0:0"
									},
									"scope": 336,
									"src": "2909:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "3141:122:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 63,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "3158:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 65,
																		"name": "IAccessControlUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 409,
																		"src": "3178:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$409_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControlUpgradeable_$409_$",
																			"typeString": "type(contract IAccessControlUpgradeable)"
																		}
																	],
																	"id": 64,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3173:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3173:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControlUpgradeable_$409",
																	"typeString": "type(contract IAccessControlUpgradeable)"
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3205:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3173:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3158:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 71,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 57,
																"src": "3244:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 69,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3220:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$336_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3226:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1227,
															"src": "3220:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3220:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3158:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 62,
												"id": 74,
												"nodeType": "Return",
												"src": "3151:105:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "2989:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 76,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3059:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 59,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3117:8:0"
									},
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3084:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3077:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 56,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3077:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:20:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "3135:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 60,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3135:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:6:0"
									},
									"scope": 336,
									"src": "3050:213:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										376
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "3442:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 87,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "3459:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 89,
															"indexExpression": {
																"id": 88,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "3466:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3459:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$23_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3472:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "3459:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 92,
													"indexExpression": {
														"id": 91,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "3480:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3459:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 86,
												"id": 93,
												"nodeType": "Return",
												"src": "3452:36:0"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "3269:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3359:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3418:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3375:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3367:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3381:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:31:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "3436:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 84,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:6:0"
									},
									"scope": 336,
									"src": "3350:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "3845:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "3866:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 103,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "3872:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3872:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															108,
															147
														],
														"referencedDeclaration": 147,
														"src": "3855:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3855:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "3855:30:0"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "3501:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3798:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3817:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "3809:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 97,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:14:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3845:0:0"
									},
									"scope": 336,
									"src": "3789:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4246:428:0",
										"statements": [
											{
												"condition": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4260:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 117,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "4269:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 118,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "4275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 116,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4261:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4261:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "IfStatement",
												"src": "4256:412:0",
												"trueBody": {
													"id": 144,
													"nodeType": "Block",
													"src": "4285:383:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 126,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4393:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 129,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 113,
																								"src": "4475:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 127,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1188,
																								"src": "4444:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$1188_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 128,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4463:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1162,
																							"src": "4444:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 130,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4444:39:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 131,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4509:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 136,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 111,
																										"src": "4593:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 135,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4585:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 134,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4585:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 137,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4585:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 138,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4600:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 132,
																								"name": "StringsUpgradeable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1188,
																								"src": "4554:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_StringsUpgradeable_$1188_$",
																									"typeString": "type(library StringsUpgradeable)"
																								}
																							},
																							"id": 133,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4573:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1142,
																							"src": "4554:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 139,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4554:49:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 124,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4351:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 125,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4355:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4351:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 140,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4351:274:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4323:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 122,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "4323:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4323:320:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 121,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "4299:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 142,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4299:358:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 143,
															"nodeType": "ExpressionStatement",
															"src": "4299:358:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "3898:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4182:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4201:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4215:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4207:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:31:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4246:0:0"
									},
									"scope": 336,
									"src": "4173:501:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										384
									],
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "4938:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 156,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "4955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 158,
														"indexExpression": {
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4962:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4955:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$23_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4968:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 22,
													"src": "4955:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 155,
												"id": 160,
												"nodeType": "Return",
												"src": "4948:29:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4680:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4864:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 152,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4911:8:0"
									},
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4885:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4877:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4876:14:0"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "4929:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 153,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4928:9:0"
									},
									"scope": 336,
									"src": "4855:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										392
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "5383:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 177,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5404:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 178,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "5410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 176,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "5393:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5393:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "ExpressionStatement",
												"src": "5393:25:0"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "4990:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 172,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5376:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 171,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5363:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5363:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 174,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 170,
												"name": "onlyRole",
												"nameLocations": [
													"5354:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "5354:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5354:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5289:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5345:8:0"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5307:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5299:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 164,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5299:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5321:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5313:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:31:0"
									},
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 336,
									"src": "5280:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										400
									],
									"body": {
										"id": 201,
										"nodeType": "Block",
										"src": "5809:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 197,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5831:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 198,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5837:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 196,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "5819:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5819:26:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5431:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 202,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 192,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5802:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 191,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "5789:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5789:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 194,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "onlyRole",
												"nameLocations": [
													"5780:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "5780:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5780:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5714:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 189,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5771:8:0"
									},
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5733:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5725:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 184,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "5739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:31:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5809:0:0"
									},
									"scope": 336,
									"src": "5705:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "6466:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 212,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 207,
																"src": "6484:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 213,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "6495:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6495:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6484:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6509:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6476:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 218,
												"nodeType": "ExpressionStatement",
												"src": "6476:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 220,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 205,
															"src": "6582:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 221,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "6588:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 219,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 330,
														"src": "6570:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6570:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 223,
												"nodeType": "ExpressionStatement",
												"src": "6570:26:0"
											}
										]
									},
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "5858:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6398:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 209,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6457:8:0"
									},
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6411:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 204,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6411:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "6425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6410:31:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6466:0:0"
									},
									"scope": 336,
									"src": "6389:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "7356:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 235,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "7383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 233,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "7366:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7366:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "7366:25:0"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "6609:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "7297:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7316:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7308:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7330:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "7322:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7322:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7307:31:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7356:0:0"
									},
									"scope": 336,
									"src": "7288:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "7596:174:0",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7614:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 266,
														"src": "7606:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 247,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 252,
												"initialValue": {
													"arguments": [
														{
															"id": 250,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7647:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 249,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "7634:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7634:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7606:46:0"
											},
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 253,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "7662:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 255,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "7669:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7662:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$23_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 256,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7675:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "7662:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "7687:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7662:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "7662:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 261,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "7728:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 262,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "7734:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "7753:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 260,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "7711:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7711:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "EmitStatement",
												"src": "7706:57:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "7404:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7532:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7546:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "7560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 243,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7545:33:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7596:0:0"
									},
									"scope": 336,
									"src": "7523:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "8006:165:0",
										"statements": [
											{
												"condition": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8020:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 276,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "8029:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 277,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8035:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 275,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "8021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8021:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 297,
												"nodeType": "IfStatement",
												"src": "8016:149:0",
												"trueBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "8045:120:0",
													"statements": [
														{
															"expression": {
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 280,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "8059:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 282,
																			"indexExpression": {
																				"id": 281,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 270,
																				"src": "8066:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8059:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$23_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8072:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "8059:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 285,
																	"indexExpression": {
																		"id": 284,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8080:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8059:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8091:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "8059:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 288,
															"nodeType": "ExpressionStatement",
															"src": "8059:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 290,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 270,
																		"src": "8126:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 291,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 272,
																		"src": "8132:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 292,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "8141:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8141:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 289,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "8114:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8114:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 295,
															"nodeType": "EmitStatement",
															"src": "8109:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "7776:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7947:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7966:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7958:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 269,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7980:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "7972:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7972:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7957:31:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8006:0:0"
									},
									"scope": 336,
									"src": "7938:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "8411:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 308,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "8433:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 309,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "8439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 307,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "8425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8425:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "8421:149:0",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "8449:121:0",
													"statements": [
														{
															"expression": {
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 311,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 28,
																				"src": "8463:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$23_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 313,
																			"indexExpression": {
																				"id": 312,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 302,
																				"src": "8470:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8463:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$23_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 314,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8476:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 20,
																		"src": "8463:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 316,
																	"indexExpression": {
																		"id": 315,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8484:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8463:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8495:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8463:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 319,
															"nodeType": "ExpressionStatement",
															"src": "8463:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 321,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 302,
																		"src": "8531:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 322,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 304,
																		"src": "8537:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 323,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "8546:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8546:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 320,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "8519:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8519:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 326,
															"nodeType": "EmitStatement",
															"src": "8514:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "8177:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8351:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8371:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8363:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 301,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8385:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "8377:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8362:31:0"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8411:0:0"
									},
									"scope": 336,
									"src": "8342:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "8582:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 335,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "8861:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 336,
									"src": "8841:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 332,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "8841:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 334,
										"length": {
											"hexValue": "3439",
											"id": 333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "8849:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "8841:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 337,
							"src": "2040:6829:0",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366,
								424
							]
						}
					],
					"src": "108:8762:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/IAccessControlUpgradeable.sol",
					"exportedSymbols": {
						"IAccessControlUpgradeable": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 339,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "IAccessControlUpgradeable",
							"nameLocation": "219:25:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "251:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 348,
									"name": "RoleAdminChanged",
									"nameLocation": "554:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "587:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "571:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 341,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "571:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "609:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "593:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 343,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "644:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "628:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 345,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "628:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "570:87:1"
									},
									"src": "548:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "664:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 357,
									"name": "RoleGranted",
									"nameLocation": "887:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "915:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "899:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "937:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "921:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "962:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "946:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "946:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "898:71:1"
									},
									"src": "881:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "976:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 366,
									"name": "RoleRevoked",
									"nameLocation": "1262:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1290:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1274:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1312:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1296:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1296:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1337:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1321:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:71:1"
									},
									"src": "1256:89:1"
								},
								{
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1351:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 376,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1441:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1471:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1463:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1448:31:1"
									},
									"returnParameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 376,
												"src": "1503:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 373,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1503:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1502:6:1"
									},
									"scope": 409,
									"src": "1432:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1515:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 384,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1713:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1734:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1726:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 378,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1726:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1725:14:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1763:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:9:1"
									},
									"scope": 409,
									"src": "1704:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1778:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2031:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2049:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2041:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 386,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2063:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "2055:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:31:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2080:0:1"
									},
									"scope": 409,
									"src": "2022:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "2087:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2324:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2343:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2335:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2357:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2349:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2334:31:1"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:1"
									},
									"scope": 409,
									"src": "2315:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2381:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2875:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2896:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2888:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2910:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2902:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2902:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2887:31:1"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2927:0:1"
									},
									"scope": 409,
									"src": "2866:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 410,
							"src": "209:2721:1",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366
							]
						}
					],
					"src": "94:2837:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							908
						],
						"Initializable": [
							578
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 909,
							"src": "138:44:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 413,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:2",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "Initializable",
							"nameLocation": "2412:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:2",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 416,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "2546:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 415,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:2",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 419,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "2675:26:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 418,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:2",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 424,
									"name": "Initialized",
									"nameLocation": "2809:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "2821:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 421,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:2"
									},
									"src": "2803:33:2"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "3269:483:2",
										"statements": [
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 479,
														"src": "3279:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 427,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:2",
													"subExpression": {
														"id": 429,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "3302:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 433,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 428,
																			"src": "3347:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 436,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 434,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "3365:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 435,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 438,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:2",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 443,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$578",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$578",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 442,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 441,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:2",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 444,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 439,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 908,
																						"src": "3388:18:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$908_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 440,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:2",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 596,
																					"src": "3388:29:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 447,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 416,
																				"src": "3436:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 448,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 451,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:2"
											},
											{
												"expression": {
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 456,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "3536:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:2"
											},
											{
												"condition": {
													"id": 460,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "3566:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 466,
												"nodeType": "IfStatement",
												"src": "3562:65:2",
												"trueBody": {
													"id": 465,
													"nodeType": "Block",
													"src": "3582:45:2",
													"statements": [
														{
															"expression": {
																"id": 463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 461,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "3596:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 464,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:2"
														}
													]
												}
											},
											{
												"id": 467,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:2"
											},
											{
												"condition": {
													"id": 468,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 428,
													"src": "3651:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "3647:99:2",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "3667:79:2",
													"statements": [
														{
															"expression": {
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 469,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "3681:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 472,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 473,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3721:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "EmitStatement",
															"src": "3716:19:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:2",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 480,
									"name": "initializer",
									"nameLocation": "3255:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:2"
									},
									"src": "3246:506:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "4863:255:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:2",
																"subExpression": {
																	"id": 486,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "4882:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 488,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "4899:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 489,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "4914:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:2"
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 495,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "4982:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "4997:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:2"
											},
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 499,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "5014:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:2"
											},
											{
												"id": 503,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:2"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "5055:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 509,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "5103:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 508,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 424,
														"src": "5091:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "EmitStatement",
												"src": "5086:25:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:2",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 513,
									"name": "reinitializer",
									"nameLocation": "4834:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4848:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 482,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:2"
									},
									"src": "4825:293:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "5356:97:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 517,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "5374:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:2"
											},
											{
												"id": 521,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:2"
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:2",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 523,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:2"
									},
									"src": "5328:125:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 558,
										"nodeType": "Block",
										"src": "5988:231:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:2",
															"subExpression": {
																"id": 528,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 419,
																"src": "6007:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 533,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "6078:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 535,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 534,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 557,
												"nodeType": "IfStatement",
												"src": "6074:139:2",
												"trueBody": {
													"id": 556,
													"nodeType": "Block",
													"src": "6111:102:2",
													"statements": [
														{
															"expression": {
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 540,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "6125:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 543,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 542,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:2",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 541,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:2",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 547,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 551,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 550,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:2",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 549,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:2",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 548,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "6174:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 555,
															"nodeType": "EmitStatement",
															"src": "6169:33:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:2",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 559,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:2"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:2"
									},
									"scope": 578,
									"src": "5939:280:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "6393:36:2",
										"statements": [
											{
												"expression": {
													"id": 565,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 416,
													"src": "6410:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 564,
												"id": 566,
												"nodeType": "Return",
												"src": "6403:19:2"
											}
										]
									},
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:2",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "6386:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 562,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:2"
									},
									"scope": 578,
									"src": "6329:100:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "6601:37:2",
										"statements": [
											{
												"expression": {
													"id": 574,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 419,
													"src": "6618:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 573,
												"id": 575,
												"nodeType": "Return",
												"src": "6611:20:2"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:2",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:2"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "6595:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:2"
									},
									"scope": 578,
									"src": "6545:93:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 579,
							"src": "2394:4246:2",
							"usedErrors": [],
							"usedEvents": [
								424
							]
						}
					],
					"src": "113:6528:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							908
						]
					},
					"id": 909,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 581,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 908,
							"linearizedBaseContracts": [
								908
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "1489:254:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 589,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "1713:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:3",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 588,
												"id": 594,
												"nodeType": "Return",
												"src": "1706:30:3"
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1443:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:3"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1483:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 586,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:3"
									},
									"scope": 908,
									"src": "1423:320:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "2729:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 607,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$908",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$908",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 605,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 610,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "2772:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 604,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:3"
											},
											{
												"assignments": [
													616,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 629,
														"src": "2824:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 623,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 617,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 599,
																"src": "2842:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 619,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "2864:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 625,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "2893:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:3"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2677:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2704:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:3"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:3"
									},
									"scope": 908,
									"src": "2658:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "3801:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "3840:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "3848:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 640,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															688,
															732
														],
														"referencedDeclaration": 732,
														"src": "3818:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 639,
												"id": 646,
												"nodeType": "Return",
												"src": "3811:79:3"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3734:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3750:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:3"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3787:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:3"
									},
									"scope": 908,
									"src": "3712:185:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "4266:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 661,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4305:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 662,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "4313:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 664,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "4322:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 660,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															688,
															732
														],
														"referencedDeclaration": 732,
														"src": "4283:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 659,
												"id": 666,
												"nodeType": "Return",
												"src": "4276:59:3"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "4150:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "4174:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 652,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "4201:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "4252:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 657,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:3"
									},
									"scope": 908,
									"src": "4119:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "4817:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "4856:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 682,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "4864:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 683,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "4870:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 680,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															688,
															732
														],
														"referencedDeclaration": 732,
														"src": "4834:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 679,
												"id": 686,
												"nodeType": "Return",
												"src": "4827:94:3"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "4735:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "4751:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 672,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "4770:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:3"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "4803:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 677,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:3"
									},
									"scope": 908,
									"src": "4704:224:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "5355:267:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 705,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$908",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$908",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 703,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:3",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 708,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "5398:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:3"
											},
											{
												"assignments": [
													714,
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "5457:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 713,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "5471:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 715,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [
														{
															"id": 721,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "5524:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 717,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 691,
																"src": "5498:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:3",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 719,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "5517:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "5573:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "5581:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 727,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5590:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 728,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "5602:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 724,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "5546:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 701,
												"id": 730,
												"nodeType": "Return",
												"src": "5539:76:3"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5216:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5240:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5267:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5290:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:3"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "5341:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 699,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:3"
									},
									"scope": 908,
									"src": "5176:446:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "5899:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "5935:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "5943:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 742,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															749,
															778
														],
														"referencedDeclaration": 778,
														"src": "5916:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 741,
												"id": 747,
												"nodeType": "Return",
												"src": "5909:80:3"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "5827:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "5843:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "5885:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 739,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:3"
									},
									"scope": 908,
									"src": "5799:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "6338:168:3",
										"statements": [
											{
												"assignments": [
													762,
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "6349:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 761,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "6363:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 763,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"arguments": [
														{
															"id": 767,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "6408:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 765,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "6390:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:3",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 771,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "6457:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "6465:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 773,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "6474:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 774,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "6486:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 770,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "6430:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 760,
												"id": 776,
												"nodeType": "Return",
												"src": "6423:76:3"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6217:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6241:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 753,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6268:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 755,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "6324:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 758,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:3"
									},
									"scope": 908,
									"src": "6180:326:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "6782:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "6820:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "6828:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 788,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															795,
															824
														],
														"referencedDeclaration": 824,
														"src": "6799:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 787,
												"id": 793,
												"nodeType": "Return",
												"src": "6792:84:3"
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "6715:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "6731:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:3"
									},
									"returnParameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "6768:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 785,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:3"
									},
									"scope": 908,
									"src": "6685:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 823,
										"nodeType": "Block",
										"src": "7224:170:3",
										"statements": [
											{
												"assignments": [
													808,
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "7235:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 807,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 823,
														"src": "7249:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 809,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [
														{
															"id": 813,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 800,
															"src": "7296:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 811,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "7276:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:3",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 798,
															"src": "7345:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "7353:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 819,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "7362:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 820,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "7374:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 816,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "7318:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 806,
												"id": 822,
												"nodeType": "Return",
												"src": "7311:76:3"
											}
										]
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7108:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7132:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7159:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:3"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "7210:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:3"
									},
									"scope": 908,
									"src": "7069:325:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "7876:434:3",
										"statements": [
											{
												"condition": {
													"id": 838,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 829,
													"src": "7890:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 860,
													"nodeType": "Block",
													"src": "8246:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 856,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "8268:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 857,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 833,
																		"src": "8280:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 855,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "8260:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 859,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:3"
														}
													]
												},
												"id": 861,
												"nodeType": "IfStatement",
												"src": "7886:418:3",
												"trueBody": {
													"id": 854,
													"nodeType": "Block",
													"src": "7899:341:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 842,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 839,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "7917:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:3",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 851,
															"nodeType": "IfStatement",
															"src": "7913:286:3",
															"trueBody": {
																"id": 850,
																"nodeType": "Block",
																"src": "7941:258:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 845,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 827,
																							"src": "8143:6:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 844,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 596,
																						"src": "8132:10:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 846,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 847,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 843,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 848,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 849,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:3"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 852,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "8219:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 837,
															"id": 853,
															"nodeType": "Return",
															"src": "8212:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:3",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "7727:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "7751:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "7773:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "7806:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 832,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:3"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "7862:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 835,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:3"
									},
									"scope": 908,
									"src": "7682:628:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "8691:135:3",
										"statements": [
											{
												"condition": {
													"id": 875,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 866,
													"src": "8705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "8762:58:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 880,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "8784:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 881,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "8796:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 879,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "8776:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 883,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:3"
														}
													]
												},
												"id": 885,
												"nodeType": "IfStatement",
												"src": "8701:119:3",
												"trueBody": {
													"id": 878,
													"nodeType": "Block",
													"src": "8714:42:3",
													"statements": [
														{
															"expression": {
																"id": 876,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "8735:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 874,
															"id": 877,
															"nodeType": "Return",
															"src": "8728:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:3",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "8566:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "8588:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 867,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "8621:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 869,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:3"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "8677:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 872,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:3"
									},
									"scope": 908,
									"src": "8531:295:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "8915:457:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 894,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "8991:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 904,
													"nodeType": "Block",
													"src": "9321:45:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 901,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 891,
																		"src": "9342:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 900,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 903,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:3"
														}
													]
												},
												"id": 905,
												"nodeType": "IfStatement",
												"src": "8987:379:3",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "9014:301:3",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:3",
																"nodeType": "YulBlock",
																"src": "9172:133:3",
																"statements": [
																	{
																		"nativeSrc": "9190:40:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:3"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:3"
																			},
																			"nativeSrc": "9213:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:3"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:3",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:3",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:3",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:3",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:3"
																					},
																					"nativeSrc": "9254:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:3"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:3"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:3"
																			},
																			"nativeSrc": "9247:44:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:3"
																		},
																		"nativeSrc": "9247:44:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:3"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 889,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:3",
																	"valueSize": 1
																},
																{
																	"declaration": 889,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:3",
																	"valueSize": 1
																}
															],
															"id": 898,
															"nodeType": "InlineAssembly",
															"src": "9163:142:3"
														}
													]
												}
											}
										]
									},
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "8849:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 888,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "8874:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 890,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:3"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:3"
									},
									"scope": 908,
									"src": "8832:540:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 909,
							"src": "194:9180:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							959
						],
						"Initializable": [
							578
						]
					},
					"id": 960,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 910,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 960,
							"sourceUnit": 579,
							"src": "125:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 911,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 578,
										"src": "133:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 914,
										"name": "Initializable",
										"nameLocations": [
											"727:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "727:13:4"
									},
									"id": 915,
									"nodeType": "InheritanceSpecifier",
									"src": "727:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 913,
								"nodeType": "StructuredDocumentation",
								"src": "190:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 959,
							"linearizedBaseContracts": [
								959,
								578
							],
							"name": "ContextUpgradeable",
							"nameLocation": "705:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "799:7:4",
										"statements": []
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 918,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 917,
												"name": "onlyInitializing",
												"nameLocations": [
													"782:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "782:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "782:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "756:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:4"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:0:4"
									},
									"scope": 959,
									"src": "747:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "874:7:4",
										"statements": []
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 924,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 923,
												"name": "onlyInitializing",
												"nameLocations": [
													"857:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "857:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "857:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "821:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:2:4"
									},
									"returnParameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:4"
									},
									"scope": 959,
									"src": "812:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "948:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 932,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "965:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "969:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "965:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 931,
												"id": 934,
												"nodeType": "Return",
												"src": "958:17:4"
											}
										]
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "895:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:4"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "939:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:9:4"
									},
									"scope": 959,
									"src": "886:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "1055:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 941,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1072:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1076:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1072:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 940,
												"id": 943,
												"nodeType": "Return",
												"src": "1065:15:4"
											}
										]
									},
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "997:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:4"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1039:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1039:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:16:4"
									},
									"scope": 959,
									"src": "988:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 952,
										"nodeType": "Block",
										"src": "1165:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1182:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 949,
												"id": 951,
												"nodeType": "Return",
												"src": "1175:8:4"
											}
										]
									},
									"id": 953,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1102:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:4"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1156:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:9:4"
									},
									"scope": 959,
									"src": "1093:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "1196:254:4",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 958,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1475:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 959,
									"src": "1455:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 955,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1455:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 957,
										"length": {
											"hexValue": "3530",
											"id": 956,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1463:2:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1455:11:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 960,
							"src": "687:796:4",
							"usedErrors": [],
							"usedEvents": [
								424
							]
						}
					],
					"src": "101:1383:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2111
						],
						"SignedMathUpgradeable": [
							2216
						],
						"StringsUpgradeable": [
							1188
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 961,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
							"file": "./math/MathUpgradeable.sol",
							"id": 962,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 2112,
							"src": "126:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
							"file": "./math/SignedMathUpgradeable.sol",
							"id": 963,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 2217,
							"src": "163:42:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StringsUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 964,
								"nodeType": "StructuredDocumentation",
								"src": "207:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188
							],
							"name": "StringsUpgradeable",
							"nameLocation": "250:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 967,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "300:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "275:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 965,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "275:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 966,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 970,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "358:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1188,
									"src": "335:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 968,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 969,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "376:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "551:636:5",
										"statements": [
											{
												"id": 1016,
												"nodeType": "UncheckedBlock",
												"src": "561:620:5",
												"statements": [
													{
														"assignments": [
															979
														],
														"declarations": [
															{
																"constant": false,
																"id": 979,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "593:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1016,
																"src": "585:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 978,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "585:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 986,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 982,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 973,
																		"src": "624:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 980,
																		"name": "MathUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2111,
																		"src": "602:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2111_$",
																			"typeString": "type(library MathUpgradeable)"
																		}
																	},
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "618:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1948,
																	"src": "602:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "602:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "633:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "602:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "585:49:5"
													},
													{
														"assignments": [
															988
														],
														"declarations": [
															{
																"constant": false,
																"id": 988,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "662:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 1016,
																"src": "648:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 987,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "648:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 993,
														"initialValue": {
															"arguments": [
																{
																	"id": 991,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 979,
																	"src": "682:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 990,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "671:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 989,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "675:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "671:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "648:41:5"
													},
													{
														"assignments": [
															995
														],
														"declarations": [
															{
																"constant": false,
																"id": 995,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "711:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 1016,
																"src": "703:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 994,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "703:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 996,
														"nodeType": "VariableDeclarationStatement",
														"src": "703:11:5"
													},
													{
														"AST": {
															"nativeSrc": "784:67:5",
															"nodeType": "YulBlock",
															"src": "784:67:5",
															"statements": [
																{
																	"nativeSrc": "802:35:5",
																	"nodeType": "YulAssignment",
																	"src": "802:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "813:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "813:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "825:2:5",
																						"nodeType": "YulLiteral",
																						"src": "825:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "829:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "829:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "821:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "821:3:5"
																				},
																				"nativeSrc": "821:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "821:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "809:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "809:3:5"
																		},
																		"nativeSrc": "809:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "809:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "802:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "802:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 988,
																"isOffset": false,
																"isSlot": false,
																"src": "813:6:5",
																"valueSize": 1
															},
															{
																"declaration": 979,
																"isOffset": false,
																"isSlot": false,
																"src": "829:6:5",
																"valueSize": 1
															},
															{
																"declaration": 995,
																"isOffset": false,
																"isSlot": false,
																"src": "802:3:5",
																"valueSize": 1
															}
														],
														"id": 997,
														"nodeType": "InlineAssembly",
														"src": "775:76:5"
													},
													{
														"body": {
															"id": 1012,
															"nodeType": "Block",
															"src": "877:267:5",
															"statements": [
																{
																	"expression": {
																		"id": 1000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "895:5:5",
																		"subExpression": {
																			"id": 999,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 995,
																			"src": "895:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1001,
																	"nodeType": "ExpressionStatement",
																	"src": "895:5:5"
																},
																{
																	"AST": {
																		"nativeSrc": "978:84:5",
																		"nodeType": "YulBlock",
																		"src": "978:84:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1008:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "1008:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1022:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "1022:5:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1029:2:5",
																											"nodeType": "YulLiteral",
																											"src": "1029:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1018:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "1018:3:5"
																									},
																									"nativeSrc": "1018:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "1018:14:5"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "1034:8:5",
																									"nodeType": "YulIdentifier",
																									"src": "1034:8:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1013:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "1013:4:5"
																							},
																							"nativeSrc": "1013:30:5",
																							"nodeType": "YulFunctionCall",
																							"src": "1013:30:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1000:7:5",
																						"nodeType": "YulIdentifier",
																						"src": "1000:7:5"
																					},
																					"nativeSrc": "1000:44:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1000:44:5"
																				},
																				"nativeSrc": "1000:44:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "1000:44:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 967,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1034:8:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 995,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1008:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 973,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1022:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 1002,
																	"nodeType": "InlineAssembly",
																	"src": "969:93:5"
																},
																{
																	"expression": {
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1003,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 973,
																			"src": "1079:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1088:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1079:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1006,
																	"nodeType": "ExpressionStatement",
																	"src": "1079:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1007,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 973,
																			"src": "1112:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1121:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1112:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1011,
																	"nodeType": "IfStatement",
																	"src": "1108:21:5",
																	"trueBody": {
																		"id": 1010,
																		"nodeType": "Break",
																		"src": "1124:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "871:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1013,
														"nodeType": "WhileStatement",
														"src": "864:280:5"
													},
													{
														"expression": {
															"id": 1014,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "1164:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 977,
														"id": 1015,
														"nodeType": "Return",
														"src": "1157:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "385:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "489:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "506:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "498:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "497:15:5"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "536:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 975,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "536:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:15:5"
									},
									"scope": 1188,
									"src": "480:707:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "1357:114:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1030,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1021,
																			"src": "1398:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1406:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1398:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1416:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1398:20:5",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1410:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1039,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1021,
																					"src": "1455:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1037,
																					"name": "SignedMathUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2216,
																					"src": "1429:21:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMathUpgradeable_$2216_$",
																						"typeString": "type(library SignedMathUpgradeable)"
																					}
																				},
																				"id": 1038,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1451:3:5",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2215,
																				"src": "1429:25:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1429:32:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1036,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1018,
																			1046
																		],
																		"referencedDeclaration": 1018,
																		"src": "1420:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1420:42:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1028,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1381:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1385:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1381:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1381:82:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1374:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1026,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1374:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1374:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1044,
												"nodeType": "Return",
												"src": "1367:97:5"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "1193:89:5",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1296:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1312:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1305:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1020,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1305:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1304:14:5"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "1342:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1023,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1342:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:15:5"
									},
									"scope": 1188,
									"src": "1287:184:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "1650:111:5",
										"statements": [
											{
												"id": 1064,
												"nodeType": "UncheckedBlock",
												"src": "1660:95:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1055,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "1703:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1058,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "1733:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1056,
																				"name": "MathUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2111,
																				"src": "1710:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_MathUpgradeable_$2111_$",
																					"typeString": "type(library MathUpgradeable)"
																				}
																			},
																			"id": 1057,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1726:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2071,
																			"src": "1710:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1710:29:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1710:33:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1054,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1066,
																	1142,
																	1162
																],
																"referencedDeclaration": 1142,
																"src": "1691:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1691:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1053,
														"id": 1063,
														"nodeType": "Return",
														"src": "1684:60:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "1477:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1585:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1605:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1597:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:15:5"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1635:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1051,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1635:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:15:5"
									},
									"scope": 1188,
									"src": "1576:185:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1141,
										"nodeType": "Block",
										"src": "1974:347:5",
										"statements": [
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1997:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 1141,
														"src": "1984:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1076,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1984:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1080,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2016:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1081,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "2020:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2016:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2029:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2016:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2006:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1078,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2010:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1984:47:5"
											},
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1087,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "2041:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1089,
														"indexExpression": {
															"hexValue": "30",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2048:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2041:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2053:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2041:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "2041:15:5"
											},
											{
												"expression": {
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1093,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "2066:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1095,
														"indexExpression": {
															"hexValue": "31",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2073:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2066:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2078:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2066:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1098,
												"nodeType": "ExpressionStatement",
												"src": "2066:15:5"
											},
											{
												"body": {
													"id": 1127,
													"nodeType": "Block",
													"src": "2136:83:5",
													"statements": [
														{
															"expression": {
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1113,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1077,
																		"src": "2150:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1115,
																	"indexExpression": {
																		"id": 1114,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1100,
																		"src": "2157:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2150:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1116,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "2162:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1120,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1117,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1069,
																			"src": "2171:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2179:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2171:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2162:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2150:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1122,
															"nodeType": "ExpressionStatement",
															"src": "2150:33:5"
														},
														{
															"expression": {
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1123,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "2197:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2207:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2197:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "2197:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1107,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1100,
														"src": "2124:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2128:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2124:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"initializationExpression": {
													"assignments": [
														1100
													],
													"declarations": [
														{
															"constant": false,
															"id": 1100,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2104:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 1128,
															"src": "2096:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1099,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2096:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1106,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2108:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1102,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "2112:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2108:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2121:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2108:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2096:26:5"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2131:3:5",
														"subExpression": {
															"id": 1110,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "2133:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1112,
													"nodeType": "ExpressionStatement",
													"src": "2131:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2091:128:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "2236:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2245:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2248:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1129,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2228:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "2228:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1138,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "2307:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2300:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1136,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2300:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2300:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1075,
												"id": 1140,
												"nodeType": "Return",
												"src": "2293:21:5"
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "1767:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1893:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1913:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1905:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1905:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1928:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1920:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1904:31:5"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "1959:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1073,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1959:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:15:5"
									},
									"scope": 1188,
									"src": "1884:437:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "2546:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1155,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "2591:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2583:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1153,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2583:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2583:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2575:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1151,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2575:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2575:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1158,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "2599:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1150,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1066,
															1142,
															1162
														],
														"referencedDeclaration": 1142,
														"src": "2563:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1149,
												"id": 1160,
												"nodeType": "Return",
												"src": "2556:59:5"
											}
										]
									},
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "2327:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2482:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2502:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "2494:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2494:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2493:14:5"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "2531:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1147,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2531:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:15:5"
									},
									"scope": 1188,
									"src": "2473:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "2777:66:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1175,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "2810:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2804:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1173,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2804:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2804:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1172,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2794:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2794:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1181,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1167,
																		"src": "2833:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2827:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1179,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2827:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2827:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1178,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2817:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2817:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2794:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1171,
												"id": 1185,
												"nodeType": "Return",
												"src": "2787:49:5"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "2628:66:5",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2708:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2728:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2714:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1164,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2714:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2745:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2731:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1166,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2731:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2713:34:5"
									},
									"returnParameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1188,
									"src": "2699:144:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1189,
							"src": "242:2603:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2745:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1233
						],
						"IERC165Upgradeable": [
							1245
						],
						"Initializable": [
							578
						]
					},
					"id": 1234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "./IERC165Upgradeable.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 1246,
							"src": "124:34:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1234,
							"sourceUnit": 579,
							"src": "159:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1192,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 578,
										"src": "167:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1195,
										"name": "Initializable",
										"nameLocations": [
											"843:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "843:13:6"
									},
									"id": 1196,
									"nodeType": "InheritanceSpecifier",
									"src": "843:13:6"
								},
								{
									"baseName": {
										"id": 1197,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"858:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1245,
										"src": "858:18:6"
									},
									"id": 1198,
									"nodeType": "InheritanceSpecifier",
									"src": "858:18:6"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1194,
								"nodeType": "StructuredDocumentation",
								"src": "227:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1233,
							"linearizedBaseContracts": [
								1233,
								1245,
								578
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "822:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "934:7:6",
										"statements": []
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1200,
												"name": "onlyInitializing",
												"nameLocations": [
													"917:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "917:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "917:16:6"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "892:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:6"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:0:6"
									},
									"scope": 1233,
									"src": "883:58:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "1008:7:6",
										"statements": []
									},
									"id": 1210,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1206,
												"name": "onlyInitializing",
												"nameLocations": [
													"991:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 523,
												"src": "991:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "991:16:6"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "956:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "979:2:6"
									},
									"returnParameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1008:0:6"
									},
									"scope": 1233,
									"src": "947:68:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1244
									],
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "1172:75:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1219,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "1189:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1221,
																	"name": "IERC165Upgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "1209:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1245_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165Upgradeable_$1245_$",
																		"typeString": "type(contract IERC165Upgradeable)"
																	}
																],
																"id": 1220,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1204:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1204:24:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165Upgradeable_$1245",
																"typeString": "type(contract IERC165Upgradeable)"
															}
														},
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1229:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1204:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1189:51:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1218,
												"id": 1225,
												"nodeType": "Return",
												"src": "1182:58:6"
											}
										]
									},
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "1020:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1090:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1215,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1148:8:6"
									},
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1115:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1108:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1108:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:20:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1166:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1166:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:6:6"
									},
									"scope": 1233,
									"src": "1081:166:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1253:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1232,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1532:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1233,
									"src": "1512:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1229,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1512:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1231,
										"length": {
											"hexValue": "3530",
											"id": 1230,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1520:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1512:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1234,
							"src": "804:736:6",
							"usedErrors": [],
							"usedEvents": [
								424
							]
						}
					],
					"src": "99:1442:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1245
						]
					},
					"id": 1246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1236,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1245,
							"linearizedBaseContracts": [
								1245
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "812:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:7"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "855:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:7"
									},
									"scope": 1245,
									"src": "785:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1246,
							"src": "405:458:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/MathUpgradeable.sol",
					"exportedSymbols": {
						"MathUpgradeable": [
							2111
						]
					},
					"id": 2112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1248,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2111,
							"linearizedBaseContracts": [
								2111
							],
							"name": "MathUpgradeable",
							"nameLocation": "210:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "MathUpgradeable.Rounding",
									"id": 1252,
									"members": [
										{
											"id": 1249,
											"name": "Down",
											"nameLocation": "256:4:8",
											"nodeType": "EnumValue",
											"src": "256:4:8"
										},
										{
											"id": 1250,
											"name": "Up",
											"nameLocation": "298:2:8",
											"nodeType": "EnumValue",
											"src": "298:2:8"
										},
										{
											"id": 1251,
											"name": "Zero",
											"nameLocation": "329:4:8",
											"nodeType": "EnumValue",
											"src": "329:4:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "237:8:8",
									"nodeType": "EnumDefinition",
									"src": "232:122:8"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "491:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1262,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1255,
															"src": "508:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1263,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "512:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "508:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1266,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "520:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "508:13:8",
													"trueExpression": {
														"id": 1265,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "516:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1268,
												"nodeType": "Return",
												"src": "501:20:8"
											}
										]
									},
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "360:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "433:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "445:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "437:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "456:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "448:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "436:22:8"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "482:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:8"
									},
									"scope": 2111,
									"src": "424:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "666:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1282,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1280,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "683:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1281,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "687:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "683:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1284,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "695:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "683:13:8",
													"trueExpression": {
														"id": 1283,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "691:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1286,
												"nodeType": "Return",
												"src": "676:20:8"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "534:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "608:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "631:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "623:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "611:22:8"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "657:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:9:8"
									},
									"scope": 2111,
									"src": "599:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "887:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1298,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "942:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1299,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "946:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "942:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1301,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "941:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1302,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1291,
																		"src": "952:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1303,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1293,
																		"src": "956:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "952:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1305,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "951:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "961:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "951:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "941:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1297,
												"id": 1309,
												"nodeType": "Return",
												"src": "934:28:8"
											}
										]
									},
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "709:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "825:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "841:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "833:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "852:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "844:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:22:8"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "878:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:8"
									},
									"scope": 2111,
									"src": "816:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "1239:123:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1321,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "1327:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1332:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1327:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1325,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1314,
																			"src": "1341:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1345:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1341:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1328,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1340:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1329,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1316,
																"src": "1350:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1340:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1354:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1340:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1327:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1334,
												"nodeType": "Return",
												"src": "1320:35:8"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "975:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1177:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1193:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1185:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1204:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1196:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:22:8"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "1230:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:9:8"
									},
									"scope": 2111,
									"src": "1168:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "1776:4115:8",
										"statements": [
											{
												"id": 1457,
												"nodeType": "UncheckedBlock",
												"src": "1786:4099:8",
												"statements": [
													{
														"assignments": [
															1349
														],
														"declarations": [
															{
																"constant": false,
																"id": 1349,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2115:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1457,
																"src": "2107:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1348,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2107:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1350,
														"nodeType": "VariableDeclarationStatement",
														"src": "2107:13:8"
													},
													{
														"assignments": [
															1352
														],
														"declarations": [
															{
																"constant": false,
																"id": 1352,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2187:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1457,
																"src": "2179:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1351,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2179:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1353,
														"nodeType": "VariableDeclarationStatement",
														"src": "2179:13:8"
													},
													{
														"AST": {
															"nativeSrc": "2259:157:8",
															"nodeType": "YulBlock",
															"src": "2259:157:8",
															"statements": [
																{
																	"nativeSrc": "2277:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2277:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2294:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2294:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2297:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2297:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2304:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2304:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2300:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2300:3:8"
																				},
																				"nativeSrc": "2300:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2300:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2287:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2287:6:8"
																		},
																		"nativeSrc": "2287:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2281:2:8",
																			"nodeType": "YulTypedName",
																			"src": "2281:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2324:18:8",
																	"nodeType": "YulAssignment",
																	"src": "2324:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2337:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2337:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2340:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2340:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2333:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:8"
																		},
																		"nativeSrc": "2333:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2333:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2324:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2324:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2359:43:8",
																	"nodeType": "YulAssignment",
																	"src": "2359:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2376:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2376:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2380:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2380:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2372:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2372:3:8"
																				},
																				"nativeSrc": "2372:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2372:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2391:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2391:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2395:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2395:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2388:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2388:2:8"
																				},
																				"nativeSrc": "2388:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2388:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2368:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2368:3:8"
																		},
																		"nativeSrc": "2368:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2368:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2359:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2359:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1349,
																"isOffset": false,
																"isSlot": false,
																"src": "2324:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1349,
																"isOffset": false,
																"isSlot": false,
																"src": "2380:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1349,
																"isOffset": false,
																"isSlot": false,
																"src": "2395:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1352,
																"isOffset": false,
																"isSlot": false,
																"src": "2359:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1339,
																"isOffset": false,
																"isSlot": false,
																"src": "2294:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1339,
																"isOffset": false,
																"isSlot": false,
																"src": "2337:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1341,
																"isOffset": false,
																"isSlot": false,
																"src": "2297:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1341,
																"isOffset": false,
																"isSlot": false,
																"src": "2340:1:8",
																"valueSize": 1
															}
														],
														"id": 1354,
														"nodeType": "InlineAssembly",
														"src": "2250:166:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1355,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "2497:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2506:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2497:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1363,
														"nodeType": "IfStatement",
														"src": "2493:368:8",
														"trueBody": {
															"id": 1362,
															"nodeType": "Block",
															"src": "2509:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1358,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1349,
																			"src": "2827:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1359,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1343,
																			"src": "2835:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2827:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1347,
																	"id": 1361,
																	"nodeType": "Return",
																	"src": "2820:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1365,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "2971:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1366,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "2985:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2971:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2992:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1364,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2963:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2963:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1370,
														"nodeType": "ExpressionStatement",
														"src": "2963:53:8"
													},
													{
														"assignments": [
															1372
														],
														"declarations": [
															{
																"constant": false,
																"id": 1372,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3280:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1457,
																"src": "3272:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1371,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3272:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1373,
														"nodeType": "VariableDeclarationStatement",
														"src": "3272:17:8"
													},
													{
														"AST": {
															"nativeSrc": "3312:291:8",
															"nodeType": "YulBlock",
															"src": "3312:291:8",
															"statements": [
																{
																	"nativeSrc": "3381:38:8",
																	"nodeType": "YulAssignment",
																	"src": "3381:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3401:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3401:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3404:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3404:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3407:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "3407:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3394:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3394:6:8"
																		},
																		"nativeSrc": "3394:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3394:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3381:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "3381:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3501:41:8",
																	"nodeType": "YulAssignment",
																	"src": "3501:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3514:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3514:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3524:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3524:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3535:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3535:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3521:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3521:2:8"
																				},
																				"nativeSrc": "3521:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3521:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3510:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3510:3:8"
																		},
																		"nativeSrc": "3510:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3510:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3501:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3501:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3559:30:8",
																	"nodeType": "YulAssignment",
																	"src": "3559:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3572:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3572:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3579:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3568:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3568:3:8"
																		},
																		"nativeSrc": "3568:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3568:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3559:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3559:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1343,
																"isOffset": false,
																"isSlot": false,
																"src": "3407:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1349,
																"isOffset": false,
																"isSlot": false,
																"src": "3535:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1349,
																"isOffset": false,
																"isSlot": false,
																"src": "3559:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1349,
																"isOffset": false,
																"isSlot": false,
																"src": "3572:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1352,
																"isOffset": false,
																"isSlot": false,
																"src": "3501:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1352,
																"isOffset": false,
																"isSlot": false,
																"src": "3514:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1372,
																"isOffset": false,
																"isSlot": false,
																"src": "3381:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1372,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1372,
																"isOffset": false,
																"isSlot": false,
																"src": "3579:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1339,
																"isOffset": false,
																"isSlot": false,
																"src": "3401:1:8",
																"valueSize": 1
															},
															{
																"declaration": 1341,
																"isOffset": false,
																"isSlot": false,
																"src": "3404:1:8",
																"valueSize": 1
															}
														],
														"id": 1374,
														"nodeType": "InlineAssembly",
														"src": "3303:300:8"
													},
													{
														"assignments": [
															1376
														],
														"declarations": [
															{
																"constant": false,
																"id": 1376,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3918:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1457,
																"src": "3910:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1375,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3910:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1384,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1377,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "3925:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1381,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3940:12:8",
																			"subExpression": {
																				"id": 1378,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1343,
																				"src": "3941:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3955:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3940:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1382,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3939:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3925:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3910:47:8"
													},
													{
														"AST": {
															"nativeSrc": "3980:362:8",
															"nodeType": "YulBlock",
															"src": "3980:362:8",
															"statements": [
																{
																	"nativeSrc": "4045:37:8",
																	"nodeType": "YulAssignment",
																	"src": "4045:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4064:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "4064:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4077:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4077:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4060:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4060:3:8"
																		},
																		"nativeSrc": "4060:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4060:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4045:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "4045:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "4149:25:8",
																	"nodeType": "YulAssignment",
																	"src": "4149:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4162:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4162:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4169:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4169:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4158:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:8"
																		},
																		"nativeSrc": "4158:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4149:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4149:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "4289:39:8",
																	"nodeType": "YulAssignment",
																	"src": "4289:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4309:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4309:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4312:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "4312:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4305:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4305:3:8"
																						},
																						"nativeSrc": "4305:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4305:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4319:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4319:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4301:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4301:3:8"
																				},
																				"nativeSrc": "4301:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4301:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4326:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4326:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4297:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4297:3:8"
																		},
																		"nativeSrc": "4297:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4297:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4289:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "4289:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1343,
																"isOffset": false,
																"isSlot": false,
																"src": "4045:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1343,
																"isOffset": false,
																"isSlot": false,
																"src": "4064:11:8",
																"valueSize": 1
															},
															{
																"declaration": 1349,
																"isOffset": false,
																"isSlot": false,
																"src": "4149:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1349,
																"isOffset": false,
																"isSlot": false,
																"src": "4162:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1376,
																"isOffset": false,
																"isSlot": false,
																"src": "4077:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1376,
																"isOffset": false,
																"isSlot": false,
																"src": "4169:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1376,
																"isOffset": false,
																"isSlot": false,
																"src": "4289:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1376,
																"isOffset": false,
																"isSlot": false,
																"src": "4312:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1376,
																"isOffset": false,
																"isSlot": false,
																"src": "4319:4:8",
																"valueSize": 1
															}
														],
														"id": 1385,
														"nodeType": "InlineAssembly",
														"src": "3971:371:8"
													},
													{
														"expression": {
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1386,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1349,
																"src": "4408:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1387,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "4417:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1388,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "4425:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4417:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4408:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1391,
														"nodeType": "ExpressionStatement",
														"src": "4408:21:8"
													},
													{
														"assignments": [
															1393
														],
														"declarations": [
															{
																"constant": false,
																"id": 1393,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4755:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1457,
																"src": "4747:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4747:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1400,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4766:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1395,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1343,
																			"src": "4770:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4766:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4765:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4785:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4765:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4747:39:8"
													},
													{
														"expression": {
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1401,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5003:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5014:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1403,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "5018:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1404,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "5032:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5018:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5014:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5003:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1408,
														"nodeType": "ExpressionStatement",
														"src": "5003:36:8"
													},
													{
														"expression": {
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1409,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5072:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5083:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1411,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "5087:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1412,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "5101:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5087:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5083:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5072:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1416,
														"nodeType": "ExpressionStatement",
														"src": "5072:36:8"
													},
													{
														"expression": {
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1417,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5142:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5153:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1419,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "5157:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1420,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "5171:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5157:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5153:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5142:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1424,
														"nodeType": "ExpressionStatement",
														"src": "5142:36:8"
													},
													{
														"expression": {
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1425,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5212:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5223:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1427,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "5227:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1428,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "5241:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5227:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5223:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5212:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1432,
														"nodeType": "ExpressionStatement",
														"src": "5212:36:8"
													},
													{
														"expression": {
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1433,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5282:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5293:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1435,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "5297:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1436,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "5311:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5297:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5293:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5282:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1440,
														"nodeType": "ExpressionStatement",
														"src": "5282:36:8"
													},
													{
														"expression": {
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1441,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "5353:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5364:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1443,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1343,
																		"src": "5368:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1444,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1393,
																		"src": "5382:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5368:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5364:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5353:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1448,
														"nodeType": "ExpressionStatement",
														"src": "5353:36:8"
													},
													{
														"expression": {
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1449,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1346,
																"src": "5823:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1450,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1349,
																	"src": "5832:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1451,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "5840:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5832:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5823:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1454,
														"nodeType": "ExpressionStatement",
														"src": "5823:24:8"
													},
													{
														"expression": {
															"id": 1455,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "5868:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1347,
														"id": 1456,
														"nodeType": "Return",
														"src": "5861:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "1368:305:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1687:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1702:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1694:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1713:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1705:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1724:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1716:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1716:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:43:8"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1768:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1760:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:16:8"
									},
									"scope": 2111,
									"src": "1678:4213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "6133:189:8",
										"statements": [
											{
												"assignments": [
													1475
												],
												"declarations": [
													{
														"constant": false,
														"id": 1475,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6151:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1502,
														"src": "6143:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1474,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6143:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1481,
												"initialValue": {
													"arguments": [
														{
															"id": 1477,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "6167:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1478,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1464,
															"src": "6170:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1479,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "6173:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1476,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1459,
															1503
														],
														"referencedDeclaration": 1459,
														"src": "6160:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6160:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6143:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1252",
															"typeString": "enum MathUpgradeable.Rounding"
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1482,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "6199:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1252",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1483,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "6211:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1252_$",
																	"typeString": "type(enum MathUpgradeable.Rounding)"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6220:2:8",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1250,
															"src": "6211:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1252",
																"typeString": "enum MathUpgradeable.Rounding"
															}
														},
														"src": "6199:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1487,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1462,
																	"src": "6233:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1488,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1464,
																	"src": "6236:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1489,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1466,
																	"src": "6239:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1486,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6226:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6226:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6254:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6226:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6199:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1499,
												"nodeType": "IfStatement",
												"src": "6195:98:8",
												"trueBody": {
													"id": 1498,
													"nodeType": "Block",
													"src": "6257:36:8",
													"statements": [
														{
															"expression": {
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1494,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "6271:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6281:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6271:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1497,
															"nodeType": "ExpressionStatement",
															"src": "6271:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1500,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1475,
													"src": "6309:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1501,
												"nodeType": "Return",
												"src": "6302:13:8"
											}
										]
									},
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "5897:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6032:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6047:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "6039:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6058:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "6050:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6069:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "6061:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6091:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "6082:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1252",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 1468,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1467,
														"name": "Rounding",
														"nameLocations": [
															"6082:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1252,
														"src": "6082:8:8"
													},
													"referencedDeclaration": 1252,
													"src": "6082:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1252",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6038:62:8"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "6124:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6124:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6123:9:8"
									},
									"scope": 2111,
									"src": "6023:299:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "6598:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1511,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "6612:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1512,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6617:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6612:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1517,
												"nodeType": "IfStatement",
												"src": "6608:45:8",
												"trueBody": {
													"id": 1516,
													"nodeType": "Block",
													"src": "6620:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6641:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1510,
															"id": 1515,
															"nodeType": "Return",
															"src": "6634:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7340:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1614,
														"src": "7332:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1528,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7349:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1522,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1506,
																			"src": "7360:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1521,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1783,
																			1819
																		],
																		"referencedDeclaration": 1783,
																		"src": "7355:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7355:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7366:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7355:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1526,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7354:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7349:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7332:36:8"
											},
											{
												"id": 1613,
												"nodeType": "UncheckedBlock",
												"src": "7769:408:8",
												"statements": [
													{
														"expression": {
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1529,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "7793:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1530,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "7803:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1531,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "7812:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1532,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "7816:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7812:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7803:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1535,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7802:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7827:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7802:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7793:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1539,
														"nodeType": "ExpressionStatement",
														"src": "7793:35:8"
													},
													{
														"expression": {
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1540,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "7842:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1541,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "7852:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1542,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "7861:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1543,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "7865:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7861:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7852:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1546,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7851:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7876:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7851:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7842:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1550,
														"nodeType": "ExpressionStatement",
														"src": "7842:35:8"
													},
													{
														"expression": {
															"id": 1560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1551,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "7891:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1552,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "7901:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1553,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "7910:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1554,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "7914:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7910:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7901:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1557,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7900:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7925:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7900:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7891:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1561,
														"nodeType": "ExpressionStatement",
														"src": "7891:35:8"
													},
													{
														"expression": {
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1562,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "7940:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1563,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "7950:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1564,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "7959:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1565,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "7963:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7959:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7950:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1568,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7949:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7974:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7949:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7940:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1572,
														"nodeType": "ExpressionStatement",
														"src": "7940:35:8"
													},
													{
														"expression": {
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1573,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "7989:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1574,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "7999:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1575,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "8008:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1576,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "8012:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8008:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7999:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1579,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7998:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8023:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7998:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7989:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1583,
														"nodeType": "ExpressionStatement",
														"src": "7989:35:8"
													},
													{
														"expression": {
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1584,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "8038:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1589,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1585,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "8048:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1586,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "8057:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1587,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "8061:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8057:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8048:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1590,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8047:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8072:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8047:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8038:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1594,
														"nodeType": "ExpressionStatement",
														"src": "8038:35:8"
													},
													{
														"expression": {
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1595,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "8087:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1596,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1519,
																				"src": "8097:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1599,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1597,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1506,
																					"src": "8106:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1598,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1519,
																					"src": "8110:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8106:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8097:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1601,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8096:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8121:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8096:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8087:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1605,
														"nodeType": "ExpressionStatement",
														"src": "8087:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1607,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1519,
																	"src": "8147:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1608,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "8155:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1609,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "8159:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8155:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1606,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1288,
																"src": "8143:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8143:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1510,
														"id": 1612,
														"nodeType": "Return",
														"src": "8136:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "6328:208:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6550:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6563:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "6555:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6555:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6554:11:8"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "6589:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6589:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6588:9:8"
									},
									"scope": 2111,
									"src": "6541:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "8359:161:8",
										"statements": [
											{
												"id": 1649,
												"nodeType": "UncheckedBlock",
												"src": "8369:145:8",
												"statements": [
													{
														"assignments": [
															1627
														],
														"declarations": [
															{
																"constant": false,
																"id": 1627,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8401:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1649,
																"src": "8393:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1626,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8393:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1631,
														"initialValue": {
															"arguments": [
																{
																	"id": 1629,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1618,
																	"src": "8415:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1628,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1615,
																	1651
																],
																"referencedDeclaration": 1615,
																"src": "8410:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8410:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8393:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1632,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "8438:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1252",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 1636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1633,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1621,
																					"src": "8448:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1252",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1634,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "8460:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1252_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 1635,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8469:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1250,
																					"src": "8460:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1252",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "8448:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1639,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1637,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1627,
																						"src": "8475:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1638,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1627,
																						"src": "8484:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8475:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1640,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1618,
																					"src": "8493:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8475:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8448:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8501:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8448:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8497:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1646,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8447:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8438:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1625,
														"id": 1648,
														"nodeType": "Return",
														"src": "8431:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1616,
										"nodeType": "StructuredDocumentation",
										"src": "8189:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8292:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8305:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "8297:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8297:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8317:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "8308:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1252",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 1620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1619,
														"name": "Rounding",
														"nameLocations": [
															"8308:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1252,
														"src": "8308:8:8"
													},
													"referencedDeclaration": 1252,
													"src": "8308:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1252",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8296:30:8"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "8350:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8350:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8349:9:8"
									},
									"scope": 2111,
									"src": "8283:237:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "8705:922:8",
										"statements": [
											{
												"assignments": [
													1660
												],
												"declarations": [
													{
														"constant": false,
														"id": 1660,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8723:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1782,
														"src": "8715:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1659,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8715:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1662,
												"initialValue": {
													"hexValue": "30",
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8732:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8715:18:8"
											},
											{
												"id": 1779,
												"nodeType": "UncheckedBlock",
												"src": "8743:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1663,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "8771:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8780:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8771:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8786:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8771:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1677,
														"nodeType": "IfStatement",
														"src": "8767:99:8",
														"trueBody": {
															"id": 1676,
															"nodeType": "Block",
															"src": "8789:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1668,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "8807:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8817:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8807:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1671,
																	"nodeType": "ExpressionStatement",
																	"src": "8807:13:8"
																},
																{
																	"expression": {
																		"id": 1674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1672,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "8838:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8848:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8838:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1675,
																	"nodeType": "ExpressionStatement",
																	"src": "8838:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1678,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "8883:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8892:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8883:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8897:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8883:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1692,
														"nodeType": "IfStatement",
														"src": "8879:96:8",
														"trueBody": {
															"id": 1691,
															"nodeType": "Block",
															"src": "8900:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1683,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "8918:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8928:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8918:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1686,
																	"nodeType": "ExpressionStatement",
																	"src": "8918:12:8"
																},
																{
																	"expression": {
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1687,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "8948:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8958:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8948:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1690,
																	"nodeType": "ExpressionStatement",
																	"src": "8948:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "8992:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9001:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8992:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9006:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8992:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1707,
														"nodeType": "IfStatement",
														"src": "8988:96:8",
														"trueBody": {
															"id": 1706,
															"nodeType": "Block",
															"src": "9009:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1698,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "9027:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9037:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9027:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1701,
																	"nodeType": "ExpressionStatement",
																	"src": "9027:12:8"
																},
																{
																	"expression": {
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1702,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "9057:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9067:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9057:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1705,
																	"nodeType": "ExpressionStatement",
																	"src": "9057:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1708,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "9101:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9110:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9101:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9115:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9101:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1722,
														"nodeType": "IfStatement",
														"src": "9097:96:8",
														"trueBody": {
															"id": 1721,
															"nodeType": "Block",
															"src": "9118:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "9136:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9146:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9136:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1716,
																	"nodeType": "ExpressionStatement",
																	"src": "9136:12:8"
																},
																{
																	"expression": {
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1717,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "9166:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9176:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9166:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1720,
																	"nodeType": "ExpressionStatement",
																	"src": "9166:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "9210:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9219:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9210:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9223:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9210:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1737,
														"nodeType": "IfStatement",
														"src": "9206:93:8",
														"trueBody": {
															"id": 1736,
															"nodeType": "Block",
															"src": "9226:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1728,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "9244:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9254:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9244:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1731,
																	"nodeType": "ExpressionStatement",
																	"src": "9244:11:8"
																},
																{
																	"expression": {
																		"id": 1734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1732,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "9273:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9283:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9273:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1735,
																	"nodeType": "ExpressionStatement",
																	"src": "9273:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1738,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "9316:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9325:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9316:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9329:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9316:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1752,
														"nodeType": "IfStatement",
														"src": "9312:93:8",
														"trueBody": {
															"id": 1751,
															"nodeType": "Block",
															"src": "9332:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1743,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "9350:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9360:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9350:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1746,
																	"nodeType": "ExpressionStatement",
																	"src": "9350:11:8"
																},
																{
																	"expression": {
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1747,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "9379:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9389:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9379:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1750,
																	"nodeType": "ExpressionStatement",
																	"src": "9379:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "9422:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9431:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9422:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9435:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9422:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1767,
														"nodeType": "IfStatement",
														"src": "9418:93:8",
														"trueBody": {
															"id": 1766,
															"nodeType": "Block",
															"src": "9438:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1654,
																			"src": "9456:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9466:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9456:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1761,
																	"nodeType": "ExpressionStatement",
																	"src": "9456:11:8"
																},
																{
																	"expression": {
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1762,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "9485:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9495:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9485:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1765,
																	"nodeType": "ExpressionStatement",
																	"src": "9485:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1768,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "9528:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9537:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9528:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9541:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9528:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1778,
														"nodeType": "IfStatement",
														"src": "9524:64:8",
														"trueBody": {
															"id": 1777,
															"nodeType": "Block",
															"src": "9544:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1773,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1660,
																			"src": "9562:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9572:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9562:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1776,
																	"nodeType": "ExpressionStatement",
																	"src": "9562:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1780,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1660,
													"src": "9614:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1658,
												"id": 1781,
												"nodeType": "Return",
												"src": "9607:13:8"
											}
										]
									},
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "8526:113:8",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8653:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8666:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "8658:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8658:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8657:15:8"
									},
									"returnParameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "8696:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8696:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8695:9:8"
									},
									"scope": 2111,
									"src": "8644:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "9860:165:8",
										"statements": [
											{
												"id": 1817,
												"nodeType": "UncheckedBlock",
												"src": "9870:149:8",
												"statements": [
													{
														"assignments": [
															1795
														],
														"declarations": [
															{
																"constant": false,
																"id": 1795,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9902:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1817,
																"src": "9894:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1794,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9894:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1799,
														"initialValue": {
															"arguments": [
																{
																	"id": 1797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1786,
																	"src": "9916:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1796,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1783,
																	1819
																],
																"referencedDeclaration": 1783,
																"src": "9911:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9911:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9894:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1800,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "9943:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1252",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 1804,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1801,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1789,
																					"src": "9953:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1252",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1802,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "9965:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1252_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 1803,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9974:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1250,
																					"src": "9965:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1252",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "9953:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1807,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1805,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9980:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1806,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1795,
																						"src": "9985:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9980:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1808,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1786,
																					"src": "9994:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9980:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9953:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10006:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9953:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10002:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1814,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9952:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9943:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1793,
														"id": 1816,
														"nodeType": "Return",
														"src": "9936:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "9633:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9789:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9802:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "9794:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9794:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9818:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "9809:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1252",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 1788,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1787,
														"name": "Rounding",
														"nameLocations": [
															"9809:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1252,
														"src": "9809:8:8"
													},
													"referencedDeclaration": 1252,
													"src": "9809:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1252",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9793:34:8"
									},
									"returnParameters": {
										"id": 1793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "9851:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9851:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9850:9:8"
									},
									"scope": 2111,
									"src": "9780:245:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1947,
										"nodeType": "Block",
										"src": "10212:854:8",
										"statements": [
											{
												"assignments": [
													1828
												],
												"declarations": [
													{
														"constant": false,
														"id": 1828,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10230:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1947,
														"src": "10222:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1827,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10222:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1830,
												"initialValue": {
													"hexValue": "30",
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10239:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10222:18:8"
											},
											{
												"id": 1944,
												"nodeType": "UncheckedBlock",
												"src": "10250:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1831,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "10278:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10287:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10293:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10287:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10278:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1847,
														"nodeType": "IfStatement",
														"src": "10274:103:8",
														"trueBody": {
															"id": 1846,
															"nodeType": "Block",
															"src": "10297:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1836,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "10315:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10324:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10330:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10324:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10315:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1841,
																	"nodeType": "ExpressionStatement",
																	"src": "10315:17:8"
																},
																{
																	"expression": {
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1842,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "10350:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1843,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10360:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10350:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1845,
																	"nodeType": "ExpressionStatement",
																	"src": "10350:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1848,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "10394:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1849,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10403:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10409:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10403:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10394:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1864,
														"nodeType": "IfStatement",
														"src": "10390:103:8",
														"trueBody": {
															"id": 1863,
															"nodeType": "Block",
															"src": "10413:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "10431:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10440:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1855,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10446:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10440:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10431:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1858,
																	"nodeType": "ExpressionStatement",
																	"src": "10431:17:8"
																},
																{
																	"expression": {
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1859,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "10466:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1860,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10476:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10466:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1862,
																	"nodeType": "ExpressionStatement",
																	"src": "10466:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1865,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "10510:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10519:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10525:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10519:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10510:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1881,
														"nodeType": "IfStatement",
														"src": "10506:103:8",
														"trueBody": {
															"id": 1880,
															"nodeType": "Block",
															"src": "10529:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1870,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "10547:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10556:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1872,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10562:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10556:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10547:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1875,
																	"nodeType": "ExpressionStatement",
																	"src": "10547:17:8"
																},
																{
																	"expression": {
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1876,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "10582:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1877,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10592:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10582:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1879,
																	"nodeType": "ExpressionStatement",
																	"src": "10582:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1882,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "10626:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10635:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10641:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10635:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10626:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1898,
														"nodeType": "IfStatement",
														"src": "10622:100:8",
														"trueBody": {
															"id": 1897,
															"nodeType": "Block",
															"src": "10644:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1887,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "10662:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1888,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10671:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1889,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10677:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10671:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10662:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1892,
																	"nodeType": "ExpressionStatement",
																	"src": "10662:16:8"
																},
																{
																	"expression": {
																		"id": 1895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1893,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "10696:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10706:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10696:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1896,
																	"nodeType": "ExpressionStatement",
																	"src": "10696:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1899,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "10739:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10748:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10754:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10748:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10739:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1915,
														"nodeType": "IfStatement",
														"src": "10735:100:8",
														"trueBody": {
															"id": 1914,
															"nodeType": "Block",
															"src": "10757:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1904,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "10775:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1905,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10784:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10790:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10784:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10775:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1909,
																	"nodeType": "ExpressionStatement",
																	"src": "10775:16:8"
																},
																{
																	"expression": {
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1910,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "10809:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10819:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10809:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1913,
																	"nodeType": "ExpressionStatement",
																	"src": "10809:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1916,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "10852:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10861:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10867:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10861:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10852:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1932,
														"nodeType": "IfStatement",
														"src": "10848:100:8",
														"trueBody": {
															"id": 1931,
															"nodeType": "Block",
															"src": "10870:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1921,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1822,
																			"src": "10888:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10897:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1923,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10903:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10897:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10888:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1926,
																	"nodeType": "ExpressionStatement",
																	"src": "10888:16:8"
																},
																{
																	"expression": {
																		"id": 1929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1927,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "10922:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10932:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10922:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1930,
																	"nodeType": "ExpressionStatement",
																	"src": "10922:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1933,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1822,
																"src": "10965:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10974:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10980:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10974:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10965:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1943,
														"nodeType": "IfStatement",
														"src": "10961:66:8",
														"trueBody": {
															"id": 1942,
															"nodeType": "Block",
															"src": "10983:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1938,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1828,
																			"src": "11001:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11011:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11001:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1941,
																	"nodeType": "ExpressionStatement",
																	"src": "11001:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1945,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1828,
													"src": "11053:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1826,
												"id": 1946,
												"nodeType": "Return",
												"src": "11046:13:8"
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "10031:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1948,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10159:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10173:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "10165:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10165:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10164:15:8"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1948,
												"src": "10203:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10203:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10202:9:8"
									},
									"scope": 2111,
									"src": "10150:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1983,
										"nodeType": "Block",
										"src": "11301:167:8",
										"statements": [
											{
												"id": 1982,
												"nodeType": "UncheckedBlock",
												"src": "11311:151:8",
												"statements": [
													{
														"assignments": [
															1960
														],
														"declarations": [
															{
																"constant": false,
																"id": 1960,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11343:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1982,
																"src": "11335:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1959,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11335:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1964,
														"initialValue": {
															"arguments": [
																{
																	"id": 1962,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1951,
																	"src": "11358:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1961,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1948,
																	1984
																],
																"referencedDeclaration": 1948,
																"src": "11352:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11352:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11335:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1965,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1960,
																"src": "11385:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1252",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 1969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1966,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1954,
																					"src": "11395:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1252",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1967,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "11407:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1252_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 1968,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11416:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1250,
																					"src": "11407:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1252",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "11395:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1974,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1972,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1970,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11422:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1971,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1960,
																						"src": "11428:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11422:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1973,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1951,
																					"src": "11437:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11422:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11395:47:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11449:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11395:55:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11445:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11394:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11385:66:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1958,
														"id": 1981,
														"nodeType": "Return",
														"src": "11378:73:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1949,
										"nodeType": "StructuredDocumentation",
										"src": "11072:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11229:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11243:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "11235:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11235:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11259:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "11250:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1252",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 1953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1952,
														"name": "Rounding",
														"nameLocations": [
															"11250:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1252,
														"src": "11250:8:8"
													},
													"referencedDeclaration": 1252,
													"src": "11250:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1252",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11234:34:8"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1984,
												"src": "11292:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11292:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11291:9:8"
									},
									"scope": 2111,
									"src": "11220:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "11782:600:8",
										"statements": [
											{
												"assignments": [
													1993
												],
												"declarations": [
													{
														"constant": false,
														"id": 1993,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11800:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 2070,
														"src": "11792:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11792:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1995,
												"initialValue": {
													"hexValue": "30",
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11809:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11792:18:8"
											},
											{
												"id": 2067,
												"nodeType": "UncheckedBlock",
												"src": "11820:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1998,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1996,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "11848:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11857:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11848:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11863:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11848:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2010,
														"nodeType": "IfStatement",
														"src": "11844:98:8",
														"trueBody": {
															"id": 2009,
															"nodeType": "Block",
															"src": "11866:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2001,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1987,
																			"src": "11884:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11894:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11884:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2004,
																	"nodeType": "ExpressionStatement",
																	"src": "11884:13:8"
																},
																{
																	"expression": {
																		"id": 2007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2005,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1993,
																			"src": "11915:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2006,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11925:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11915:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2008,
																	"nodeType": "ExpressionStatement",
																	"src": "11915:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2011,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "11959:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2012,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11968:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11959:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11973:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11959:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2025,
														"nodeType": "IfStatement",
														"src": "11955:95:8",
														"trueBody": {
															"id": 2024,
															"nodeType": "Block",
															"src": "11976:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2016,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1987,
																			"src": "11994:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12004:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11994:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2019,
																	"nodeType": "ExpressionStatement",
																	"src": "11994:12:8"
																},
																{
																	"expression": {
																		"id": 2022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2020,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1993,
																			"src": "12024:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12034:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12024:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2023,
																	"nodeType": "ExpressionStatement",
																	"src": "12024:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2026,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "12067:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12076:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12067:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12081:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12067:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2040,
														"nodeType": "IfStatement",
														"src": "12063:95:8",
														"trueBody": {
															"id": 2039,
															"nodeType": "Block",
															"src": "12084:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2031,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1987,
																			"src": "12102:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12112:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12102:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2034,
																	"nodeType": "ExpressionStatement",
																	"src": "12102:12:8"
																},
																{
																	"expression": {
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2035,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1993,
																			"src": "12132:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12142:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12132:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2038,
																	"nodeType": "ExpressionStatement",
																	"src": "12132:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2041,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "12175:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12184:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12175:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12189:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12175:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2055,
														"nodeType": "IfStatement",
														"src": "12171:95:8",
														"trueBody": {
															"id": 2054,
															"nodeType": "Block",
															"src": "12192:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 2048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2046,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1987,
																			"src": "12210:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12220:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12210:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2049,
																	"nodeType": "ExpressionStatement",
																	"src": "12210:12:8"
																},
																{
																	"expression": {
																		"id": 2052,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2050,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1993,
																			"src": "12240:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12250:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12240:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2053,
																	"nodeType": "ExpressionStatement",
																	"src": "12240:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2056,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1987,
																	"src": "12283:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12292:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12283:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12296:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12283:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2066,
														"nodeType": "IfStatement",
														"src": "12279:64:8",
														"trueBody": {
															"id": 2065,
															"nodeType": "Block",
															"src": "12299:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2061,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1993,
																			"src": "12317:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12327:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12317:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2064,
																	"nodeType": "ExpressionStatement",
																	"src": "12317:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2068,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1993,
													"src": "12369:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1991,
												"id": 2069,
												"nodeType": "Return",
												"src": "12362:13:8"
											}
										]
									},
									"documentation": {
										"id": 1985,
										"nodeType": "StructuredDocumentation",
										"src": "11474:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11728:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11743:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "11735:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11735:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11734:15:8"
									},
									"returnParameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2071,
												"src": "11773:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11773:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11772:9:8"
									},
									"scope": 2111,
									"src": "11719:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "12619:174:8",
										"statements": [
											{
												"id": 2108,
												"nodeType": "UncheckedBlock",
												"src": "12629:158:8",
												"statements": [
													{
														"assignments": [
															2083
														],
														"declarations": [
															{
																"constant": false,
																"id": 2083,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12661:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 2108,
																"src": "12653:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2082,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12653:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2087,
														"initialValue": {
															"arguments": [
																{
																	"id": 2085,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2074,
																	"src": "12677:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2084,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2071,
																	2110
																],
																"referencedDeclaration": 2071,
																"src": "12670:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12670:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12653:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2088,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2083,
																"src": "12704:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1252",
																					"typeString": "enum MathUpgradeable.Rounding"
																				},
																				"id": 2092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2089,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2077,
																					"src": "12714:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1252",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2090,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1252,
																						"src": "12726:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1252_$",
																							"typeString": "type(enum MathUpgradeable.Rounding)"
																						}
																					},
																					"id": 2091,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12735:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1250,
																					"src": "12726:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1252",
																						"typeString": "enum MathUpgradeable.Rounding"
																					}
																				},
																				"src": "12714:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2098,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2093,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12741:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2096,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2094,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2083,
																									"src": "12747:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2095,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12757:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12747:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2097,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12746:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12741:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2099,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2074,
																					"src": "12762:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12741:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12714:53:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12774:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12714:61:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2105,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12713:63:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12704:72:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2081,
														"id": 2107,
														"nodeType": "Return",
														"src": "12697:79:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2072,
										"nodeType": "StructuredDocumentation",
										"src": "12388:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12546:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12561:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "12553:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2073,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12553:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12577:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "12568:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1252",
													"typeString": "enum MathUpgradeable.Rounding"
												},
												"typeName": {
													"id": 2076,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2075,
														"name": "Rounding",
														"nameLocations": [
															"12568:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1252,
														"src": "12568:8:8"
													},
													"referencedDeclaration": 1252,
													"src": "12568:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1252",
														"typeString": "enum MathUpgradeable.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12552:34:8"
									},
									"returnParameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "12610:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12610:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12609:9:8"
									},
									"scope": 2111,
									"src": "12537:256:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2112,
							"src": "202:12593:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12693:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/math/SignedMathUpgradeable.sol",
					"exportedSymbols": {
						"SignedMathUpgradeable": [
							2216
						]
					},
					"id": 2217,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2113,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMathUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2114,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:9",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2216,
							"linearizedBaseContracts": [
								2216
							],
							"name": "SignedMathUpgradeable",
							"nameLocation": "223:21:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2131,
										"nodeType": "Block",
										"src": "386:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2124,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "403:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2125,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "407:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "403:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2128,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "415:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "403:13:9",
													"trueExpression": {
														"id": 2127,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2117,
														"src": "411:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2123,
												"id": 2130,
												"nodeType": "Return",
												"src": "396:20:9"
											}
										]
									},
									"documentation": {
										"id": 2115,
										"nodeType": "StructuredDocumentation",
										"src": "251:66:9",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "331:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "342:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "335:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2116,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2119,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "352:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "345:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2118,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "345:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "334:20:9"
									},
									"returnParameters": {
										"id": 2123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2132,
												"src": "378:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2121,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "378:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:8:9"
									},
									"scope": 2216,
									"src": "322:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2149,
										"nodeType": "Block",
										"src": "565:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2142,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2135,
															"src": "582:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2143,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2137,
															"src": "586:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "582:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2146,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2137,
														"src": "594:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "582:13:9",
													"trueExpression": {
														"id": 2145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2135,
														"src": "590:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2141,
												"id": 2148,
												"nodeType": "Return",
												"src": "575:20:9"
											}
										]
									},
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "429:67:9",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "510:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "521:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "514:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2134,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "531:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "524:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2136,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "524:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:20:9"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "557:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2139,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "557:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:8:9"
									},
									"scope": 2216,
									"src": "501:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2193,
										"nodeType": "Block",
										"src": "807:162:9",
										"statements": [
											{
												"assignments": [
													2161
												],
												"declarations": [
													{
														"constant": false,
														"id": 2161,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "876:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 2193,
														"src": "869:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2160,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "869:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2174,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2162,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2153,
																	"src": "881:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2163,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2155,
																	"src": "885:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "881:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2165,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2166,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2153,
																				"src": "892:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2167,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2155,
																				"src": "896:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "892:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2169,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "891:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "902:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "891:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2172,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "890:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "880:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "869:35:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2175,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2161,
														"src": "921:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2180,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2161,
																						"src": "941:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "933:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2178,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "933:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2181,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "933:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2182,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "947:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "933:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "926:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2176,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "926:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "926:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2187,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2185,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2153,
																				"src": "955:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2186,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2155,
																				"src": "959:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "955:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2188,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "954:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "926:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2190,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "925:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "921:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2159,
												"id": 2192,
												"nodeType": "Return",
												"src": "914:48:9"
											}
										]
									},
									"documentation": {
										"id": 2151,
										"nodeType": "StructuredDocumentation",
										"src": "608:126:9",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "748:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "763:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "756:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2152,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "773:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "766:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2154,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "766:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:20:9"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2194,
												"src": "799:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2157,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "799:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:8:9"
									},
									"scope": 2216,
									"src": "739:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2214,
										"nodeType": "Block",
										"src": "1113:158:9",
										"statements": [
											{
												"id": 2213,
												"nodeType": "UncheckedBlock",
												"src": "1123:142:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2204,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2197,
																			"src": "1238:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1243:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1238:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1251:2:9",
																		"subExpression": {
																			"id": 2208,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2197,
																			"src": "1252:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1238:15:9",
																	"trueExpression": {
																		"id": 2207,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2197,
																		"src": "1247:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2203,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1230:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2202,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1230:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1230:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2201,
														"id": 2212,
														"nodeType": "Return",
														"src": "1223:31:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2195,
										"nodeType": "StructuredDocumentation",
										"src": "975:78:9",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1067:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1078:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "1071:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2196,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1071:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1070:10:9"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "1104:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:9:9"
									},
									"scope": 2216,
									"src": "1058:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2217,
							"src": "215:1058:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1165:9"
				},
				"id": 9
			},
			"uniswap.sol": {
				"ast": {
					"absolutePath": "uniswap.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							336
						],
						"IWETH": [
							2270
						],
						"UniswapV2Router02": [
							2684
						]
					},
					"id": 2685,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2218,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2685,
							"sourceUnit": 337,
							"src": "57:113:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2219,
										"name": "AccessControlUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 336,
										"src": "65:24:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2270,
							"linearizedBaseContracts": [
								2270
							],
							"name": "IWETH",
							"nameLocation": "183:5:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "d0e30db0",
									"id": 2223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "204:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:10"
									},
									"returnParameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:0:10"
									},
									"scope": 2270,
									"src": "195:36:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3ccfd60b",
									"id": 2226,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "246:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "254:2:10"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:0:10"
									},
									"scope": 2270,
									"src": "237:29:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 2233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "281:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "294:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "286:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "306:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2233,
												"src": "298:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:28:10"
									},
									"returnParameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "322:0:10"
									},
									"scope": 2270,
									"src": "272:51:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9dc29fac",
									"id": 2240,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "338:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "351:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "343:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "365:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "357:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:30:10"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:0:10"
									},
									"scope": 2270,
									"src": "329:53:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "397:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "414:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "406:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "426:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "418:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "418:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:28:10"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2249,
												"src": "452:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "452:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:6:10"
									},
									"scope": 2270,
									"src": "388:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 2258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "473:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2251,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "491:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "483:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2253,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "506:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "498:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "498:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:32:10"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2258,
												"src": "562:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:9:10"
									},
									"scope": 2270,
									"src": "464:107:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "586:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2260,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "616:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "608:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "638:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "630:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "630:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "658:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "650:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "650:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "598:72:10"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2269,
												"src": "689:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "689:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:6:10"
									},
									"scope": 2270,
									"src": "577:118:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2685,
							"src": "173:524:10",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2271,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"1904:24:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 336,
										"src": "1904:24:10"
									},
									"id": 2272,
									"nodeType": "InheritanceSpecifier",
									"src": "1904:24:10"
								}
							],
							"canonicalName": "UniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2684,
							"linearizedBaseContracts": [
								2684,
								336,
								1233,
								1245,
								409,
								959,
								578
							],
							"name": "UniswapV2Router02",
							"nameLocation": "1883:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "UniswapV2Router02.TokenDetail",
									"id": 2277,
									"members": [
										{
											"constant": false,
											"id": 2274,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "1977:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 2277,
											"src": "1969:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2273,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1969:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2276,
											"mutability": "mutable",
											"name": "tokenManager",
											"nameLocation": "2000:12:10",
											"nodeType": "VariableDeclaration",
											"scope": 2277,
											"src": "1992:20:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2275,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1992:7:10",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenDetail",
									"nameLocation": "1947:11:10",
									"nodeType": "StructDefinition",
									"scope": 2684,
									"src": "1940:79:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ad5c4648",
									"id": 2279,
									"mutability": "immutable",
									"name": "WETH",
									"nameLocation": "2050:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "2025:29:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2278,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2025:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dd4be683",
									"id": 2284,
									"mutability": "mutable",
									"name": "tokenDetails",
									"nameLocation": "2100:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "2061:51:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
										"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail)"
									},
									"typeName": {
										"id": 2283,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2069:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2061:31:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
											"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2282,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2281,
												"name": "TokenDetail",
												"nameLocations": [
													"2080:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2277,
												"src": "2080:11:10"
											},
											"referencedDeclaration": 2277,
											"src": "2080:11:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenDetail_$2277_storage_ptr",
												"typeString": "struct UniswapV2Router02.TokenDetail"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "cf0888aa",
									"id": 2289,
									"mutability": "constant",
									"name": "PRICE_MANAGER",
									"nameLocation": "2143:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 2684,
									"src": "2119:66:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2285,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2119:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "50524943455f4d414e41474552",
												"id": 2287,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "2169:15:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e",
													"typeString": "literal_string \"PRICE_MANAGER\""
												},
												"value": "PRICE_MANAGER"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a451215b66f023bb76f9a9e7bc5c64156446b47b26061a8a32eaa319c45f695e",
													"typeString": "literal_string \"PRICE_MANAGER\""
												}
											],
											"id": 2286,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "2159:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2288,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "2159:26:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2320,
										"nodeType": "Block",
										"src": "2219:195:10",
										"statements": [
											{
												"expression": {
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2294,
														"name": "WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "2229:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2295,
														"name": "_WETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2291,
														"src": "2236:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2229:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "2229:12:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2299,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "2262:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2300,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "2282:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2282:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2298,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2251:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2251:44:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2303,
												"nodeType": "ExpressionStatement",
												"src": "2251:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2305,
															"name": "PRICE_MANAGER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2289,
															"src": "2316:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2306,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "2331:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2331:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2304,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 299,
														"src": "2305:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 2308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2305:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2309,
												"nodeType": "ExpressionStatement",
												"src": "2305:39:10"
											},
											{
												"expression": {
													"id": 2318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2310,
															"name": "tokenDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2284,
															"src": "2354:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
																"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
															}
														},
														"id": 2312,
														"indexExpression": {
															"id": 2311,
															"name": "_WETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2291,
															"src": "2367:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2354:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
															"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 2314,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2388:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2315,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "2394:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2394:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2313,
															"name": "TokenDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "2376:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenDetail_$2277_storage_ptr_$",
																"typeString": "type(struct UniswapV2Router02.TokenDetail storage pointer)"
															}
														},
														"id": 2317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2376:31:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDetail_$2277_memory_ptr",
															"typeString": "struct UniswapV2Router02.TokenDetail memory"
														}
													},
													"src": "2354:53:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
														"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
													}
												},
												"id": 2319,
												"nodeType": "ExpressionStatement",
												"src": "2354:53:10"
											}
										]
									},
									"id": 2321,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "_WETH",
												"nameLocation": "2212:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2321,
												"src": "2204:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:15:10"
									},
									"returnParameters": {
										"id": 2293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2219:0:10"
									},
									"scope": 2684,
									"src": "2192:222:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2342,
										"nodeType": "Block",
										"src": "2565:78:10",
										"statements": [
											{
												"expression": {
													"id": 2340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2333,
															"name": "tokenDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2284,
															"src": "2575:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
																"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
															}
														},
														"id": 2335,
														"indexExpression": {
															"id": 2334,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "2588:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2575:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
															"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2337,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2327,
																"src": "2616:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2338,
																"name": "tokenManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2325,
																"src": "2623:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2336,
															"name": "TokenDetail",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "2604:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenDetail_$2277_storage_ptr_$",
																"typeString": "type(struct UniswapV2Router02.TokenDetail storage pointer)"
															}
														},
														"id": 2339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2604:32:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDetail_$2277_memory_ptr",
															"typeString": "struct UniswapV2Router02.TokenDetail memory"
														}
													},
													"src": "2575:61:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
														"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
													}
												},
												"id": 2341,
												"nodeType": "ExpressionStatement",
												"src": "2575:61:10"
											}
										]
									},
									"functionSelector": "fa1c631b",
									"id": 2343,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2330,
													"name": "PRICE_MANAGER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2289,
													"src": "2550:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2331,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2329,
												"name": "onlyRole",
												"nameLocations": [
													"2541:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "2541:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2541:23:10"
										}
									],
									"name": "setTokenDetails",
									"nameLocation": "2429:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "2462:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "2454:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "tokenManager",
												"nameLocation": "2492:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "2484:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "2522:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2343,
												"src": "2514:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2514:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2444:89:10"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2565:0:10"
									},
									"scope": 2684,
									"src": "2420:223:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2393,
										"nodeType": "Block",
										"src": "2826:364:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2359,
																	"name": "tokenAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "2857:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2872:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2857:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3330",
																"id": 2361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2882:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_30_by_1",
																	"typeString": "int_const 30"
																},
																"value": "30"
															},
															"src": "2857:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e69737761705632526f757465723a20546f6b656e7320617272617920697320746f6f206c6f6e672c2072656475636520746865206e756d626572206f6620746f6b656e73",
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2898:72:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0a84dd8250d98c57d65326b71d5da4964385e7fbd92b05a3cbe874c127db80e",
																"typeString": "literal_string \"UniswapV2Router: Tokens array is too long, reduce the number of tokens\""
															},
															"value": "UniswapV2Router: Tokens array is too long, reduce the number of tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0a84dd8250d98c57d65326b71d5da4964385e7fbd92b05a3cbe874c127db80e",
																"typeString": "literal_string \"UniswapV2Router: Tokens array is too long, reduce the number of tokens\""
															}
														],
														"id": 2358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2836:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2836:144:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2365,
												"nodeType": "ExpressionStatement",
												"src": "2836:144:10"
											},
											{
												"body": {
													"id": 2391,
													"nodeType": "Block",
													"src": "3039:145:10",
													"statements": [
														{
															"expression": {
																"id": 2389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2376,
																		"name": "tokenDetails",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2284,
																		"src": "3053:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
																			"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
																		}
																	},
																	"id": 2380,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 2377,
																			"name": "tokenAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2346,
																			"src": "3066:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 2379,
																		"indexExpression": {
																			"id": 2378,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2367,
																			"src": "3081:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3066:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3053:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
																		"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 2382,
																				"name": "prices",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2352,
																				"src": "3116:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 2384,
																			"indexExpression": {
																				"id": 2383,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2367,
																				"src": "3123:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3116:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 2385,
																				"name": "tokenManagers",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2349,
																				"src": "3143:13:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 2387,
																			"indexExpression": {
																				"id": 2386,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2367,
																				"src": "3157:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3143:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2381,
																		"name": "TokenDetail",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2277,
																		"src": "3087:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_TokenDetail_$2277_storage_ptr_$",
																			"typeString": "type(struct UniswapV2Router02.TokenDetail storage pointer)"
																		}
																	},
																	"id": 2388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3087:86:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenDetail_$2277_memory_ptr",
																		"typeString": "struct UniswapV2Router02.TokenDetail memory"
																	}
																},
																"src": "3053:120:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
																	"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
																}
															},
															"id": 2390,
															"nodeType": "ExpressionStatement",
															"src": "3053:120:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2369,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "3007:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2370,
															"name": "tokenAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2346,
															"src": "3011:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3026:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3011:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3007:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2392,
												"initializationExpression": {
													"assignments": [
														2367
													],
													"declarations": [
														{
															"constant": false,
															"id": 2367,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3004:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2392,
															"src": "2996:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2366,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2996:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2368,
													"nodeType": "VariableDeclarationStatement",
													"src": "2996:9:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3034:3:10",
														"subExpression": {
															"id": 2373,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2367,
															"src": "3034:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2375,
													"nodeType": "ExpressionStatement",
													"src": "3034:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2991:193:10"
											}
										]
									},
									"functionSelector": "eb71f7e6",
									"id": 2394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2355,
													"name": "PRICE_MANAGER",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2289,
													"src": "2811:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2354,
												"name": "onlyRole",
												"nameLocations": [
													"2802:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 42,
												"src": "2802:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2802:23:10"
										}
									],
									"name": "setTokensDetails",
									"nameLocation": "2658:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "tokenAddresses",
												"nameLocation": "2701:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "2684:31:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2344,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2684:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2345,
													"nodeType": "ArrayTypeName",
													"src": "2684:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2349,
												"mutability": "mutable",
												"name": "tokenManagers",
												"nameLocation": "2742:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "2725:30:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2347,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2725:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2348,
													"nodeType": "ArrayTypeName",
													"src": "2725:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "prices",
												"nameLocation": "2782:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 2394,
												"src": "2765:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2350,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2765:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2351,
													"nodeType": "ArrayTypeName",
													"src": "2765:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:120:10"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2826:0:10"
									},
									"scope": 2684,
									"src": "2649:541:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2508,
										"nodeType": "Block",
										"src": "3380:818:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2407,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "3407:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 2409,
																"indexExpression": {
																	"hexValue": "30",
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3412:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3407:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2410,
																"name": "WETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2279,
																"src": "3418:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3407:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e69737761705632526f757465723a20494e56414c49445f50415448",
															"id": 2412,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3424:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6435d47a7cef43416f8f596d66beab1b30970728f1435d971438f7d89b0cfb94",
																"typeString": "literal_string \"UniswapV2Router: INVALID_PATH\""
															},
															"value": "UniswapV2Router: INVALID_PATH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6435d47a7cef43416f8f596d66beab1b30970728f1435d971438f7d89b0cfb94",
																"typeString": "literal_string \"UniswapV2Router: INVALID_PATH\""
															}
														],
														"id": 2406,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3399:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3399:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2414,
												"nodeType": "ExpressionStatement",
												"src": "3399:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2416,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2403,
																"src": "3474:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 2417,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3486:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3492:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3486:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3474:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e69737761705632526f757465723a2045585049524544",
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3503:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a9d3f3429d6f7d601e79a56388ebaeef879c178f6da38e08a509d9e3994b6a6",
																"typeString": "literal_string \"UniswapV2Router: EXPIRED\""
															},
															"value": "UniswapV2Router: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a9d3f3429d6f7d601e79a56388ebaeef879c178f6da38e08a509d9e3994b6a6",
																"typeString": "literal_string \"UniswapV2Router: EXPIRED\""
															}
														],
														"id": 2415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3466:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3466:64:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "3466:64:10"
											},
											{
												"assignments": [
													2424
												],
												"declarations": [
													{
														"constant": false,
														"id": 2424,
														"mutability": "mutable",
														"name": "amountIn",
														"nameLocation": "3546:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 2508,
														"src": "3541:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2423,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3541:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2427,
												"initialValue": {
													"expression": {
														"id": 2425,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3557:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3561:5:10",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "3557:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3541:25:10"
											},
											{
												"assignments": [
													2429
												],
												"declarations": [
													{
														"constant": false,
														"id": 2429,
														"mutability": "mutable",
														"name": "amountOut",
														"nameLocation": "3582:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 2508,
														"src": "3577:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2428,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3577:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2436,
												"initialValue": {
													"baseExpression": {
														"arguments": [
															{
																"id": 2431,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2424,
																"src": "3608:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2432,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "3618:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															],
															"id": 2430,
															"name": "getAmountsOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2649,
															"src": "3594:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256,address[] memory) view returns (uint256[] memory)"
															}
														},
														"id": 2433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3594:29:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2435,
													"indexExpression": {
														"hexValue": "31",
														"id": 2434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3594:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3577:49:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2438,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2429,
																	"src": "3657:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3669:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3657:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2441,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2429,
																	"src": "3674:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2442,
																	"name": "amountOutMin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2396,
																	"src": "3687:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3674:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3657:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e69737761705632526f757465723a20494e53554646494349454e545f4f55545055545f414d4f554e54",
															"id": 2445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3713:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4ea67bea551891ab36be726b8e631181246034dffcfd5c0bbfad1e9d1729432",
																"typeString": "literal_string \"UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT\""
															},
															"value": "UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4ea67bea551891ab36be726b8e631181246034dffcfd5c0bbfad1e9d1729432",
																"typeString": "literal_string \"UniswapV2Router: INSUFFICIENT_OUTPUT_AMOUNT\""
															}
														],
														"id": 2437,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3636:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3636:132:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2447,
												"nodeType": "ExpressionStatement",
												"src": "3636:132:10"
											},
											{
												"assignments": [
													2449
												],
												"declarations": [
													{
														"constant": false,
														"id": 2449,
														"mutability": "mutable",
														"name": "manager",
														"nameLocation": "3787:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 2508,
														"src": "3779:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2448,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3779:7:10",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2456,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 2450,
															"name": "tokenDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2284,
															"src": "3797:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
																"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
															}
														},
														"id": 2454,
														"indexExpression": {
															"baseExpression": {
																"id": 2451,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "3810:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 2453,
															"indexExpression": {
																"hexValue": "31",
																"id": 2452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3815:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3810:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3797:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
															"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
														}
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3819:12:10",
													"memberName": "tokenManager",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2276,
													"src": "3797:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3779:52:10"
											},
											{
												"assignments": [
													2458
												],
												"declarations": [
													{
														"constant": false,
														"id": 2458,
														"mutability": "mutable",
														"name": "allowance",
														"nameLocation": "3849:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 2508,
														"src": "3841:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2457,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3841:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2471,
												"initialValue": {
													"arguments": [
														{
															"id": 2465,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2449,
															"src": "3886:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2468,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3903:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UniswapV2Router02_$2684",
																		"typeString": "contract UniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UniswapV2Router02_$2684",
																		"typeString": "contract UniswapV2Router02"
																	}
																],
																"id": 2467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3895:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3895:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3895:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 2460,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "3867:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 2462,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 2461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3872:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3867:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2459,
																"name": "IWETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "3861:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH_$2270_$",
																	"typeString": "type(contract IWETH)"
																}
															},
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3861:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH_$2270",
																"typeString": "contract IWETH"
															}
														},
														"id": 2464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3876:9:10",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2258,
														"src": "3861:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3861:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3841:68:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2473,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2458,
																"src": "3940:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2474,
																"name": "amountOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2429,
																"src": "3953:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3940:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e69737761705632526f757465723a20494e53554646494349454e545f414d4f554e545f414c4c4f574544",
															"id": 2476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3976:46:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c0bcbbbbe436530a4b61f43295135097bf7668636b4f4254b31ef3e7629e3509",
																"typeString": "literal_string \"UniswapV2Router: INSUFFICIENT_AMOUNT_ALLOWED\""
															},
															"value": "UniswapV2Router: INSUFFICIENT_AMOUNT_ALLOWED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c0bcbbbbe436530a4b61f43295135097bf7668636b4f4254b31ef3e7629e3509",
																"typeString": "literal_string \"UniswapV2Router: INSUFFICIENT_AMOUNT_ALLOWED\""
															}
														],
														"id": 2472,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3919:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3919:113:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2478,
												"nodeType": "ExpressionStatement",
												"src": "3919:113:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 2480,
																		"name": "WETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2279,
																		"src": "4049:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2479,
																	"name": "IWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2270,
																	"src": "4043:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IWETH_$2270_$",
																		"typeString": "type(contract IWETH)"
																	}
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4043:11:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWETH_$2270",
																	"typeString": "contract IWETH"
																}
															},
															"id": 2482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4055:7:10",
															"memberName": "deposit",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2223,
															"src": "4043:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$__$returns$__$",
																"typeString": "function () payable external"
															}
														},
														"id": 2484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2483,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2424,
																"src": "4070:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4043:36:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$__$returns$__$value",
															"typeString": "function () payable external"
														}
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4043:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2486,
												"nodeType": "ExpressionStatement",
												"src": "4043:38:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2491,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2399,
																"src": "4112:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																	"typeString": "address[] calldata"
																}
															},
															"id": 2493,
															"indexExpression": {
																"hexValue": "31",
																"id": 2492,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4117:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4112:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2494,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2424,
															"src": "4121:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2488,
																	"name": "WETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2279,
																	"src": "4097:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2487,
																"name": "IWETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "4091:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH_$2270_$",
																	"typeString": "type(contract IWETH)"
																}
															},
															"id": 2489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4091:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH_$2270",
																"typeString": "contract IWETH"
															}
														},
														"id": 2490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4103:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2249,
														"src": "4091:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2496,
												"nodeType": "ExpressionStatement",
												"src": "4091:39:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2503,
															"name": "manager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2449,
															"src": "4168:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2504,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "4177:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2505,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2429,
															"src": "4181:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"baseExpression": {
																		"id": 2498,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "4146:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																			"typeString": "address[] calldata"
																		}
																	},
																	"id": 2500,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 2499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4151:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4146:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2497,
																"name": "IWETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2270,
																"src": "4140:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IWETH_$2270_$",
																	"typeString": "type(contract IWETH)"
																}
															},
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4140:14:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWETH_$2270",
																"typeString": "contract IWETH"
															}
														},
														"id": 2502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4155:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2269,
														"src": "4140:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4140:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2507,
												"nodeType": "ExpressionStatement",
												"src": "4140:51:10"
											}
										]
									},
									"functionSelector": "b6f9de95",
									"id": 2509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "3205:50:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3270:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "3265:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3265:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3311:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "3292:23:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2397,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3292:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2398,
													"nodeType": "ArrayTypeName",
													"src": "3292:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3333:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "3325:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3325:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3350:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2509,
												"src": "3345:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3345:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3255:109:10"
									},
									"returnParameters": {
										"id": 2405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3380:0:10"
									},
									"scope": 2684,
									"src": "3196:1002:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2648,
										"nodeType": "Block",
										"src": "4343:1034:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2521,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2511,
																"src": "4374:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2522,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4385:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4374:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e69737761705632526f757465723a20616d6f756e74496e2073686f756c642062652067726561746572207468616e207a65726f",
															"id": 2524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4400:55:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_29acd408d8afda248b568ac22c80ebc7d6d115c93f3fd64f6097ddc942aedfcf",
																"typeString": "literal_string \"UniswapV2Router: amountIn should be greater than zero\""
															},
															"value": "UniswapV2Router: amountIn should be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_29acd408d8afda248b568ac22c80ebc7d6d115c93f3fd64f6097ddc942aedfcf",
																"typeString": "literal_string \"UniswapV2Router: amountIn should be greater than zero\""
															}
														],
														"id": 2520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4353:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4353:112:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2526,
												"nodeType": "ExpressionStatement",
												"src": "4353:112:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2528,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "4496:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4501:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4496:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "32",
																"id": 2530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4511:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4496:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e69737761705632526f757465723a207061746820636f6e7461696e73206174206c65617374203220656c656d656e7473",
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4526:52:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc542683e8818ff716879d376d0f2865e4cdfc390a34f54109b63f66fd90d1bf",
																"typeString": "literal_string \"UniswapV2Router: path contains at least 2 elements\""
															},
															"value": "UniswapV2Router: path contains at least 2 elements"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc542683e8818ff716879d376d0f2865e4cdfc390a34f54109b63f66fd90d1bf",
																"typeString": "literal_string \"UniswapV2Router: path contains at least 2 elements\""
															}
														],
														"id": 2527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4475:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4475:113:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2534,
												"nodeType": "ExpressionStatement",
												"src": "4475:113:10"
											},
											{
												"expression": {
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2535,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2518,
														"src": "4599:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 2539,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2514,
																	"src": "4620:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4625:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4620:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4609:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2536,
																	"name": "uint",
																	"nodeType": "ElementaryTypeName",
																	"src": "4613:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2537,
																"nodeType": "ArrayTypeName",
																"src": "4613:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4609:23:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4599:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 2543,
												"nodeType": "ExpressionStatement",
												"src": "4599:33:10"
											},
											{
												"expression": {
													"id": 2548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2544,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2518,
															"src": "4642:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2546,
														"indexExpression": {
															"hexValue": "30",
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4650:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4642:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2547,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2511,
														"src": "4655:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4642:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2549,
												"nodeType": "ExpressionStatement",
												"src": "4642:21:10"
											},
											{
												"body": {
													"id": 2644,
													"nodeType": "Block",
													"src": "4713:633:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2562,
																			"name": "tokenDetails",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2284,
																			"src": "4731:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
																				"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
																			}
																		},
																		"id": 2568,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 2563,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2514,
																				"src": "4744:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 2567,
																			"indexExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2566,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2564,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2551,
																					"src": "4749:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 2565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4753:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "4749:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4744:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4731:25:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
																			"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
																		}
																	},
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4757:5:10",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2274,
																	"src": "4731:31:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4766:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4731:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2642,
																"nodeType": "Block",
																"src": "5285:51:10",
																"statements": [
																	{
																		"expression": {
																			"id": 2640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2634,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2518,
																					"src": "5303:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2638,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2635,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2551,
																						"src": "5311:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2636,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5315:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5311:5:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "5303:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 2639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5320:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "5303:18:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2641,
																		"nodeType": "ExpressionStatement",
																		"src": "5303:18:10"
																	}
																]
															},
															"id": 2643,
															"nodeType": "IfStatement",
															"src": "4727:609:10",
															"trueBody": {
																"id": 2633,
																"nodeType": "Block",
																"src": "4769:510:10",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			"id": 2576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 2572,
																					"name": "path",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2514,
																					"src": "4791:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 2574,
																				"indexExpression": {
																					"hexValue": "30",
																					"id": 2573,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4796:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4791:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2575,
																				"name": "WETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2279,
																				"src": "4802:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "4791:15:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2631,
																			"nodeType": "Block",
																			"src": "4971:294:10",
																			"statements": [
																				{
																					"assignments": [
																						2599
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 2599,
																							"mutability": "mutable",
																							"name": "amountInEth",
																							"nameLocation": "4998:11:10",
																							"nodeType": "VariableDeclaration",
																							"scope": 2631,
																							"src": "4993:16:10",
																							"stateVariable": false,
																							"storageLocation": "default",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"typeName": {
																								"id": 2598,
																								"name": "uint",
																								"nodeType": "ElementaryTypeName",
																								"src": "4993:4:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 2613,
																					"initialValue": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2612,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2609,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 2602,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2600,
																											"name": "amountIn",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2511,
																											"src": "5013:8:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"hexValue": "31653138",
																											"id": 2601,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "5048:4:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1000000000000000000_by_1",
																												"typeString": "int_const 1000000000000000000"
																											},
																											"value": "1e18"
																										},
																										"src": "5013:39:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"expression": {
																											"baseExpression": {
																												"id": 2603,
																												"name": "tokenDetails",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2284,
																												"src": "5079:12:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
																													"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
																												}
																											},
																											"id": 2607,
																											"indexExpression": {
																												"baseExpression": {
																													"id": 2604,
																													"name": "path",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 2514,
																													"src": "5092:4:10",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																														"typeString": "address[] memory"
																													}
																												},
																												"id": 2606,
																												"indexExpression": {
																													"hexValue": "30",
																													"id": 2605,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "5097:1:10",
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_0_by_1",
																														"typeString": "int_const 0"
																													},
																													"value": "0"
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "5092:7:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "5079:21:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
																												"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
																											}
																										},
																										"id": 2608,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "5101:5:10",
																										"memberName": "price",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 2274,
																										"src": "5079:27:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "5013:93:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 2610,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "5012:95:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "31653138",
																							"id": 2611,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5110:4:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						},
																						"src": "5012:102:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "4993:121:10"
																				},
																				{
																					"expression": {
																						"id": 2629,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 2614,
																								"name": "amounts",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2518,
																								"src": "5136:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 2618,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2617,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2615,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2551,
																									"src": "5144:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 2616,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5148:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5144:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "5136:14:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2628,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 2619,
																								"name": "amountInEth",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2599,
																								"src": "5177:11:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 2620,
																										"name": "tokenDetails",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2284,
																										"src": "5215:12:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
																											"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
																										}
																									},
																									"id": 2626,
																									"indexExpression": {
																										"baseExpression": {
																											"id": 2621,
																											"name": "path",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2514,
																											"src": "5228:4:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																												"typeString": "address[] memory"
																											}
																										},
																										"id": 2625,
																										"indexExpression": {
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 2624,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 2622,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2551,
																												"src": "5233:1:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "+",
																											"rightExpression": {
																												"hexValue": "31",
																												"id": 2623,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "5237:1:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"src": "5233:5:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "5228:11:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "5215:25:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
																										"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
																									}
																								},
																								"id": 2627,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "5241:5:10",
																								"memberName": "price",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2274,
																								"src": "5215:31:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "5177:69:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5136:110:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2630,
																					"nodeType": "ExpressionStatement",
																					"src": "5136:110:10"
																				}
																			]
																		},
																		"id": 2632,
																		"nodeType": "IfStatement",
																		"src": "4787:478:10",
																		"trueBody": {
																			"id": 2597,
																			"nodeType": "Block",
																			"src": "4808:157:10",
																			"statements": [
																				{
																					"expression": {
																						"id": 2595,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 2577,
																								"name": "amounts",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2518,
																								"src": "4830:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																									"typeString": "uint256[] memory"
																								}
																							},
																							"id": 2581,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2580,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2578,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2551,
																									"src": "4838:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "+",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 2579,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "4842:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "4838:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "4830:14:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2594,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 2584,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 2582,
																											"name": "amountIn",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2511,
																											"src": "4872:8:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "*",
																										"rightExpression": {
																											"hexValue": "31653138",
																											"id": 2583,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4883:4:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1000000000000000000_by_1",
																												"typeString": "int_const 1000000000000000000"
																											},
																											"value": "1e18"
																										},
																										"src": "4872:15:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 2585,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "4871:17:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "/",
																							"rightExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 2586,
																										"name": "tokenDetails",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2284,
																										"src": "4915:12:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
																											"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
																										}
																									},
																									"id": 2592,
																									"indexExpression": {
																										"baseExpression": {
																											"id": 2587,
																											"name": "path",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2514,
																											"src": "4928:4:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																												"typeString": "address[] memory"
																											}
																										},
																										"id": 2591,
																										"indexExpression": {
																											"commonType": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											},
																											"id": 2590,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"leftExpression": {
																												"id": 2588,
																												"name": "i",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 2551,
																												"src": "4933:1:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"nodeType": "BinaryOperation",
																											"operator": "+",
																											"rightExpression": {
																												"hexValue": "31",
																												"id": 2589,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "number",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "4937:1:10",
																												"typeDescriptions": {
																													"typeIdentifier": "t_rational_1_by_1",
																													"typeString": "int_const 1"
																												},
																												"value": "1"
																											},
																											"src": "4933:5:10",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "4928:11:10",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "4915:25:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
																										"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
																									}
																								},
																								"id": 2593,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "4941:5:10",
																								"memberName": "price",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 2274,
																								"src": "4915:31:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4871:75:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4830:116:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2596,
																					"nodeType": "ExpressionStatement",
																					"src": "4830:116:10"
																				}
																			]
																		}
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2553,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2551,
														"src": "4687:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2554,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2514,
																"src": "4691:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 2555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4696:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4691:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4705:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4691:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4687:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2645,
												"initializationExpression": {
													"assignments": [
														2551
													],
													"declarations": [
														{
															"constant": false,
															"id": 2551,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4684:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 2645,
															"src": "4679:6:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2550,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4679:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2552,
													"nodeType": "VariableDeclarationStatement",
													"src": "4679:6:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4708:3:10",
														"subExpression": {
															"id": 2559,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2551,
															"src": "4708:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2561,
													"nodeType": "ExpressionStatement",
													"src": "4708:3:10"
												},
												"nodeType": "ForStatement",
												"src": "4674:672:10"
											},
											{
												"expression": {
													"id": 2646,
													"name": "amounts",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2518,
													"src": "5363:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 2519,
												"id": 2647,
												"nodeType": "Return",
												"src": "5356:14:10"
											}
										]
									},
									"functionSelector": "d06ca61f",
									"id": 2649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "4219:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2511,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "4238:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "4233:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4233:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4265:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "4248:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2512,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4248:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2513,
													"nodeType": "ArrayTypeName",
													"src": "4248:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4232:38:10"
									},
									"returnParameters": {
										"id": 2519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2518,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4330:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 2649,
												"src": "4316:21:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2516,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "4316:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2517,
													"nodeType": "ArrayTypeName",
													"src": "4316:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4315:23:10"
									},
									"scope": 2684,
									"src": "4210:1167:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "5439:28:10",
										"statements": [
											{
												"expression": {
													"id": 2654,
													"name": "WETH",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2279,
													"src": "5456:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2653,
												"id": 2655,
												"nodeType": "Return",
												"src": "5449:11:10"
											}
										]
									},
									"functionSelector": "affa8817",
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWETHAddress",
									"nameLocation": "5392:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5406:2:10"
									},
									"returnParameters": {
										"id": 2653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2657,
												"src": "5430:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5430:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5429:9:10"
									},
									"scope": 2684,
									"src": "5383:84:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2669,
										"nodeType": "Block",
										"src": "5548:56:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 2664,
															"name": "tokenDetails",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2284,
															"src": "5565:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
																"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
															}
														},
														"id": 2666,
														"indexExpression": {
															"id": 2665,
															"name": "tokenAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2659,
															"src": "5578:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5565:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
															"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
														}
													},
													"id": 2667,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5592:5:10",
													"memberName": "price",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2274,
													"src": "5565:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2663,
												"id": 2668,
												"nodeType": "Return",
												"src": "5558:39:10"
											}
										]
									},
									"functionSelector": "d02641a0",
									"id": 2670,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenPrice",
									"nameLocation": "5482:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "5504:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "5496:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5496:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5495:22:10"
									},
									"returnParameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "5539:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5539:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5538:9:10"
									},
									"scope": 2684,
									"src": "5473:131:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2682,
										"nodeType": "Block",
										"src": "5726:50:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2678,
														"name": "tokenDetails",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2284,
														"src": "5743:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenDetail_$2277_storage_$",
															"typeString": "mapping(address => struct UniswapV2Router02.TokenDetail storage ref)"
														}
													},
													"id": 2680,
													"indexExpression": {
														"id": 2679,
														"name": "tokenAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2672,
														"src": "5756:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5743:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDetail_$2277_storage",
														"typeString": "struct UniswapV2Router02.TokenDetail storage ref"
													}
												},
												"functionReturnParameters": 2677,
												"id": 2681,
												"nodeType": "Return",
												"src": "5736:33:10"
											}
										]
									},
									"functionSelector": "88aa8bee",
									"id": 2683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenDetails",
									"nameLocation": "5619:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2672,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "5643:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "5635:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5635:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:22:10"
									},
									"returnParameters": {
										"id": 2677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2683,
												"src": "5702:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenDetail_$2277_memory_ptr",
													"typeString": "struct UniswapV2Router02.TokenDetail"
												},
												"typeName": {
													"id": 2675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2674,
														"name": "TokenDetail",
														"nameLocations": [
															"5702:11:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2277,
														"src": "5702:11:10"
													},
													"referencedDeclaration": 2277,
													"src": "5702:11:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenDetail_$2277_storage_ptr",
														"typeString": "struct UniswapV2Router02.TokenDetail"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5701:20:10"
									},
									"scope": 2684,
									"src": "5610:166:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2685,
							"src": "1874:5299:10",
							"usedErrors": [],
							"usedEvents": [
								348,
								357,
								366,
								424
							]
						}
					],
					"src": "32:7141:10"
				},
				"id": 10
			}
		}
	}
}