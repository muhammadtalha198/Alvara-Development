{
	"id": "09cb85d12c1b1e8bb35e8632f077991e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AlvaraDao.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"./interfaces/IERC20.sol\";\n\ncontract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {\n    IERC20 public ALVA;\n    IERC20 public xALVA;\n\n    mapping(address => uint256) public userLockPeriod;\n    mapping(address => bool) public blackListAddress;\n\n    uint256 public lockedPeriod;\n\n    event Stake(address indexed staker, uint256 xALVAReceived);\n    event Unstake(address indexed unstaker, uint256 alvaReceived);\n    event BlackListUser(address _user, bool _status);\n    event UpdateLockPeriod(uint lockedPeriod, uint _lockedPeriod);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address _alva,\n        address _xalva,\n        uint256 _lockedPeriod\n    ) public initializer {\n        __Ownable_init();\n        __UUPSUpgradeable_init();\n\n        require(_alva != address(0), \"Invalid alva address\");\n        require(_xalva != address(0), \"Invalid xALVA address\");\n\n        ALVA = IERC20(_alva);\n        xALVA = IERC20(_xalva);\n        lockedPeriod = _lockedPeriod;\n    }\n\n    // Enter the alvaDao. Pay some alvas. Earn some shares.\n    function enter(uint256 _amount) public {\n        require(blackListAddress[msg.sender] != true, \"BlackListed User\");\n        uint256 totalAlva = ALVA.balanceOf(address(this));\n        uint256 totalShares = xALVA.totalSupply();\n        if (totalShares == 0 || totalAlva == 0) {\n            xALVA.mint(_msgSender(), _amount);\n            emit Stake(_msgSender(), _amount);\n        } else {\n            uint256 _userShare = (_amount * totalShares) / totalAlva;\n            xALVA.mint(_msgSender(), _userShare);\n            emit Stake(_msgSender(), _userShare);\n        }\n        userLockPeriod[msg.sender] = block.timestamp;\n        ALVA.transferFrom(_msgSender(), address(this), _amount);\n    }\n\n    // Leave the alvaDao. Claim back your alvas.\n    function leave(uint256 _share) public {\n        require(blackListAddress[msg.sender] != true, \"BlackListed User\");\n        require(\n            block.timestamp >= (userLockPeriod[msg.sender] + lockedPeriod),\n            \"Can not unStake\"\n        );\n        uint256 totalShares = xALVA.totalSupply();\n        uint256 _userShare = (_share * ALVA.balanceOf(address(this))) /\n            totalShares;\n        xALVA.burnFrom(_msgSender(), _share);\n        ALVA.transfer(_msgSender(), _userShare);\n\n        emit Unstake(_msgSender(), _userShare);\n    }\n\n    /**\n     * @dev Used only by admin or owner, used to blacklist any user in any emergency case\n     *\n     * @param _user address of blacklistef user\n     * @param _status status of user\n     */\n    function blackListUser(address _user, bool _status) external onlyOwner {\n        require(blackListAddress[_user] != _status, \"Already in same status\");\n        blackListAddress[_user] = _status;\n\n        emit BlackListUser(_user, _status);\n    }\n\n    // Update lock period\n    function updateLockPeriod(uint256 _lockedPeriod) external onlyOwner {\n        emit UpdateLockPeriod(lockedPeriod, _lockedPeriod);\n\n        lockedPeriod = _lockedPeriod;\n    }\n\n    function _authorizeUpgrade(address newImplementation)\n        internal\n        override\n        onlyOwner\n    {}\n}\n"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\ninterface IERC20 {\n    function totalSupply() external view returns (uint256);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    function transfer(\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    function burn(uint256 amount) external; \n\n    function burnTokens(address account, uint256 amount) external;\n\n    function burnFrom(address account, uint256 amount) external;\n\n    function mint(address account, uint256 amount) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../ERC1967/ERC1967UpgradeUpgradeable.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822ProxiableUpgradeable, ERC1967UpgradeUpgradeable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment\n    address private immutable __self = address(this);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        require(address(this) != __self, \"Function must be called through delegatecall\");\n        require(_getImplementation() == __self, \"Function must be called through active proxy\");\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\");\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual override notDelegated returns (bytes32) {\n        return _IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeTo(address newImplementation) public virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, new bytes(0), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeTo} and {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal override onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../../utils/AddressUpgradeable.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeaconUpgradeable.sol\";\nimport \"../../interfaces/IERC1967Upgradeable.sol\";\nimport \"../../interfaces/draft-IERC1822Upgradeable.sol\";\nimport \"../../utils/AddressUpgradeable.sol\";\nimport \"../../utils/StorageSlotUpgradeable.sol\";\nimport {Initializable} from \"../utils/Initializable.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967UpgradeUpgradeable is Initializable, IERC1967Upgradeable {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    function __ERC1967Upgrade_init() internal onlyInitializing {\n    }\n\n    function __ERC1967Upgrade_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlotUpgradeable.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(AddressUpgradeable.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            AddressUpgradeable.isContract(IBeaconUpgradeable(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlotUpgradeable.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            AddressUpgradeable.functionDelegateCall(IBeaconUpgradeable(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822ProxiableUpgradeable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlotUpgradeable {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967Upgradeable {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeaconUpgradeable {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 505,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 508,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1184,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 11,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 131,
								"contract": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"IERC1967Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":\"IERC1967Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"IERC1822ProxiableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":\"IERC1822ProxiableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ERC1967UpgradeUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							},
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"},\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":\"ERC1967UpgradeUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 505,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 508,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 487,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"IBeaconUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":\"IBeaconUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 505,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 508,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable state-variable-assignment"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable state-variable-assignment\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 505,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 508,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 487,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 803,
								"contract": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":194:9374  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xD6019063466CE3FFB98AC08E SUB DUP6 0xDF LOG4 0xC 0xD7 JUMPF 0x2649 0xB1 0xB5 SHR 0xCC MSTORE8 0x26 BLOBHASH 0xE2 0xCA CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:9180:7;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xD6019063466CE3FFB98AC08E SUB DUP6 0xDF LOG4 0xC 0xD7 JUMPF 0x2649 0xB1 0xB5 SHR 0xCC MSTORE8 0x26 BLOBHASH 0xE2 0xCA CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "194:9180:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9374,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bd6019063466ce3ffb98ac08e0385dfa40cd7e52649b1b51ccc532649e2ca3964736f6c634300081e0033",
									".code": [
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9374,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"contracts/AlvaraDao.sol",
								"contracts/interfaces/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 505,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 508,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1184,
								"contract": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"StorageSlotUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":1420:4116  library StorageSlotUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220095c179ee448fb2a0c9b1794645d782509f1b4c42455a2c780e8d109793464ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220095c179ee448fb2a0c9b1794645d782509f1b4c42455a2c780e8d109793464ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD TLOAD OR SWAP15 RETF BASEFEE EXTSTATICCALL 0x2A 0xC SWAP12 OR SWAP5 PUSH5 0x5D782509F1 0xB4 0xC4 0x24 SSTORE LOG2 0xC7 DUP1 0xE8 DATALOADN 0x979 CALLVALUE PUSH5 0xCA64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "1420:2696:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1420:2696:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220095c179ee448fb2a0c9b1794645d782509f1b4c42455a2c780e8d109793464ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD TLOAD OR SWAP15 RETF BASEFEE EXTSTATICCALL 0x2A 0xC SWAP12 OR SWAP5 PUSH5 0x5D782509F1 0xB4 0xC4 0x24 SSTORE LOG2 0xC7 DUP1 0xE8 DATALOADN 0x979 CALLVALUE PUSH5 0xCA64736F6C PUSH4 0x4300081E STOP CALLER ",
							"sourceMap": "1420:2696:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1420,
									"end": 4116,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220095c179ee448fb2a0c9b1794645d782509f1b4c42455a2c780e8d109793464ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1420,
											"end": 4116,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"contracts/AlvaraDao.sol",
								"contracts/interfaces/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":\"StorageSlotUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AlvaraDao.sol": {
				"AlvaraDao": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "BlackListUser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "staker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "xALVAReceived",
									"type": "uint256"
								}
							],
							"name": "Stake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "unstaker",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "alvaReceived",
									"type": "uint256"
								}
							],
							"name": "Unstake",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockedPeriod",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_lockedPeriod",
									"type": "uint256"
								}
							],
							"name": "UpdateLockPeriod",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ALVA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "blackListAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_status",
									"type": "bool"
								}
							],
							"name": "blackListUser",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "enter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_alva",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_xalva",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_lockedPeriod",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_share",
									"type": "uint256"
								}
							],
							"name": "leave",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lockedPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_lockedPeriod",
									"type": "uint256"
								}
							],
							"name": "updateLockPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLockPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "xALVA",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"blackListUser(address,bool)": {
								"details": "Used only by admin or owner, used to blacklist any user in any emergency case",
								"params": {
									"_status": "status of user",
									"_user": "address of blacklistef user"
								}
							},
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AlvaraDao.sol\":323:3512  contract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1198:1202  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1155:1203  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"contracts/AlvaraDao.sol\":902:955  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"contracts/AlvaraDao.sol\":926:948  _disableInitializers() */\n  tag_4\n    /* \"contracts/AlvaraDao.sol\":926:946  _disableInitializers */\n  tag_5\n    /* \"contracts/AlvaraDao.sol\":926:948  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"contracts/AlvaraDao.sol\":323:3512  contract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_14)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6007:6020  _initializing */\n  sload(0x00)\n  0x0100\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6006:6020  !_initializing */\n  iszero\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":216:218   */\n  0x20\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":198:219   */\n  mstore\n    /* \"#utility.yul\":255:257   */\n  0x27\n    /* \"#utility.yul\":235:253   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":228:258   */\n  mstore\n    /* \"#utility.yul\":294:328   */\n  0x496e697469616c697a61626c653a20636f6e747261637420697320696e697469\n    /* \"#utility.yul\":274:292   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":267:329   */\n  mstore\n  shl(0xc8, 0x616c697a696e67)\n    /* \"#utility.yul\":345:363   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":338:375   */\n  mstore\n    /* \"#utility.yul\":392:411   */\n  0x84\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5998:6064  require(!_initializing, \"Initializable: contract is initializing\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  sload(0x00)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6094:6109  type(uint8).max */\n  0xff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6078:6090  _initialized */\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6078:6109  _initialized != type(uint8).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6125:6137  _initialized */\n  0x00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6140:6155  type(uint8).max */\n  0xff\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6125:6155  _initialized = type(uint8).max */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n    /* \"#utility.yul\":564:600   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n  swap1\n    /* \"#utility.yul\":552:554   */\n  0x20\n    /* \"#utility.yul\":537:555   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6174:6202  Initialized(type(uint8).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6074:6213  if (_initialized != type(uint8).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5939:6219  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":422:606   */\ntag_14:\n    /* \"contracts/AlvaraDao.sol\":323:3512  contract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/AlvaraDao.sol\":323:3512  contract AlvaraDao is Initializable, OwnableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6ac10901\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa59f3e0c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa59f3e0c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb3d6e119\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xe0cef1b0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      dup1\n      0x6ac10901\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x91db7b0d\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_18:\n      dup1\n      0x3b0e0133\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x3b0e0133\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x67dfd4c9\n      eq\n      tag_9\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      dup1\n      0x0c8e32d2\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1794bb3c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x323bf9f0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3659cfe6\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"contracts/AlvaraDao.sol\":452:501  mapping(address => uint256) public userLockPeriod */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      revert(0x00, 0x00)\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_23:\n      mstore(0x20, 0xcb)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_22:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/AlvaraDao.sol\":452:501  mapping(address => uint256) public userLockPeriod */\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AlvaraDao.sol\":961:1379  function initialize(... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      revert(0x00, 0x00)\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/AlvaraDao.sol\":402:420  IERC20 public ALVA */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      revert(0x00, 0x00)\n    tag_33:\n      pop\n      sload(0xc9)\n      tag_34\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_34:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1123:1155   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1105:1156   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1093:1095   */\n      0x20\n        /* \"#utility.yul\":1078:1096   */\n      add\n        /* \"contracts/AlvaraDao.sol\":402:420  IERC20 public ALVA */\n      tag_26\n        /* \"#utility.yul\":944:1162   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3408:3603  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      revert(0x00, 0x00)\n    tag_38:\n      pop\n      tag_29\n      tag_40\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":507:555  mapping(address => bool) public blackListAddress */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_44:\n      mstore(0x20, 0xcc)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":1332:1346   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1325:1347   */\n      iszero\n        /* \"#utility.yul\":1307:1348   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1295:1297   */\n      0x20\n        /* \"#utility.yul\":1280:1298   */\n      add\n        /* \"contracts/AlvaraDao.sol\":507:555  mapping(address => bool) public blackListAddress */\n      tag_26\n        /* \"#utility.yul\":1167:1354   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3922:4142  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_7:\n      tag_29\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3027:3158  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      revert(0x00, 0x00)\n    tag_52:\n      pop\n      tag_22\n      tag_54\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":2191:2737  function leave(uint256 _share) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      revert(0x00, 0x00)\n    tag_57:\n      pop\n      tag_29\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":426:445  IERC20 public xALVA */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      revert(0x00, 0x00)\n    tag_62:\n      pop\n      sload(0xca)\n      tag_34\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2085:2186  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      revert(0x00, 0x00)\n    tag_66:\n      pop\n      tag_29\n      tag_68\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1462:1547  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1462:1547  function owner() public view virtual returns (address) {... */\n      jump(tag_34)\n        /* \"contracts/AlvaraDao.sol\":3218:3392  function updateLockPeriod(uint256 _lockedPeriod) external onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      revert(0x00, 0x00)\n    tag_74:\n      pop\n      tag_29\n      tag_76\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":1445:2136  function enter(uint256 _amount) public {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      revert(0x00, 0x00)\n    tag_78:\n      pop\n      tag_29\n      tag_80\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":562:589  uint256 public lockedPeriod */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      revert(0x00, 0x00)\n    tag_82:\n      pop\n      tag_22\n      sload(0xcd)\n      dup2\n      jump\n        /* \"contracts/AlvaraDao.sol\":2941:3186  function blackListUser(address _user, bool _status) external onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      revert(0x00, 0x00)\n    tag_86:\n      pop\n      tag_29\n      tag_88\n      calldatasize\n      0x04\n      tag_89\n      jump\t// in\n    tag_88:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2335:2533  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      revert(0x00, 0x00)\n    tag_91:\n      pop\n      tag_29\n      tag_93\n      calldatasize\n      0x04\n      tag_24\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":961:1379  function initialize(... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3279:3298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3302:3315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3301:3315  !_initializing */\n      iszero\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_96\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      sload(0x00)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3380:3381  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3365:3381  _initialized < 1 */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3347:3381  isTopLevelCall && _initialized < 1 */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3346:3454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_100\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3426:3430  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1736  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_100\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3436:3453  _initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3387:3453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3780:3782   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3762:3783   */\n      mstore\n        /* \"#utility.yul\":3819:3821   */\n      0x2e\n        /* \"#utility.yul\":3799:3817   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3792:3822   */\n      mstore\n        /* \"#utility.yul\":3858:3892   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":3838:3856   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3831:3893   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":3909:3927   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3902:3946   */\n      mstore\n        /* \"#utility.yul\":3963:3982   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3325:3526  require(... */\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3548  _initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3551:3552  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3536:3552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3609  _initializing */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3596:3616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3562:3627  if (isTopLevelCall) {... */\n    tag_104:\n        /* \"contracts/AlvaraDao.sol\":1094:1110  __Ownable_init() */\n      tag_106\n        /* \"contracts/AlvaraDao.sol\":1094:1108  __Ownable_init */\n      tag_107\n        /* \"contracts/AlvaraDao.sol\":1094:1110  __Ownable_init() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/AlvaraDao.sol\":1120:1144  __UUPSUpgradeable_init() */\n      tag_108\n        /* \"contracts/AlvaraDao.sol\":1120:1142  __UUPSUpgradeable_init */\n      tag_109\n        /* \"contracts/AlvaraDao.sol\":1120:1144  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1163:1182  _alva != address(0) */\n      dup5\n      and\n        /* \"contracts/AlvaraDao.sol\":1155:1207  require(_alva != address(0), \"Invalid alva address\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":1155:1207  require(_alva != address(0), \"Invalid alva address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4177:4198   */\n      mstore\n        /* \"#utility.yul\":4234:4236   */\n      0x14\n        /* \"#utility.yul\":4214:4232   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4207:4237   */\n      mstore\n      shl(0x60, 0x496e76616c696420616c76612061646472657373)\n        /* \"#utility.yul\":4253:4271   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4246:4296   */\n      mstore\n        /* \"#utility.yul\":4313:4331   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":1155:1207  require(_alva != address(0), \"Invalid alva address\") */\n      tag_102\n        /* \"#utility.yul\":3993:4337   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1155:1207  require(_alva != address(0), \"Invalid alva address\") */\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1225:1245  _xalva != address(0) */\n      dup4\n      and\n        /* \"contracts/AlvaraDao.sol\":1217:1271  require(_xalva != address(0), \"Invalid xALVA address\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4544:4546   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":1217:1271  require(_xalva != address(0), \"Invalid xALVA address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4526:4547   */\n      mstore\n        /* \"#utility.yul\":4583:4585   */\n      0x15\n        /* \"#utility.yul\":4563:4581   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4556:4586   */\n      mstore\n      shl(0x58, 0x496e76616c69642078414c56412061646472657373)\n        /* \"#utility.yul\":4602:4620   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4595:4646   */\n      mstore\n        /* \"#utility.yul\":4663:4681   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":1217:1271  require(_xalva != address(0), \"Invalid xALVA address\") */\n      tag_102\n        /* \"#utility.yul\":4342:4687   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1217:1271  require(_xalva != address(0), \"Invalid xALVA address\") */\n    tag_113:\n        /* \"contracts/AlvaraDao.sol\":1282:1286  ALVA */\n      0xc9\n        /* \"contracts/AlvaraDao.sol\":1282:1302  ALVA = IERC20(_alva) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n        /* \"contracts/AlvaraDao.sol\":1312:1317  xALVA */\n      0xca\n        /* \"contracts/AlvaraDao.sol\":1312:1334  xALVA = IERC20(_xalva) */\n      dup1\n      sload\n      swap3\n      dup7\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/AlvaraDao.sol\":1344:1356  lockedPeriod */\n      0xcd\n        /* \"contracts/AlvaraDao.sol\":1344:1372  lockedPeriod = _lockedPeriod */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3697:3702  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3681:3702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":4844:4880   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":4832:4834   */\n      0x20\n        /* \"#utility.yul\":4817:4835   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3721:3735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3647:3746  if (isTopLevelCall) {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3269:3752  {... */\n      pop\n        /* \"contracts/AlvaraDao.sol\":961:1379  function initialize(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3408:3603  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1764:1770  __self */\n      immutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1747:1770  address(this) != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1755:1759  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1747:1770  address(this) != __self */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1739:1819  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_122\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1861:1867  __self */\n      immutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1867  _getImplementation() == __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1857  _getImplementation() */\n      tag_123\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1557:1622  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1478:1629  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1857  _getImplementation() */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1867  _getImplementation() == __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1829:1916  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_127\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3489:3525  _authorizeUpgrade(newImplementation) */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3507:3524  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3489:3506  _authorizeUpgrade */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3489:3525  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3576:3588  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3586:3587  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3576:3588  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3535:3596  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      tag_131\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3557:3574  newImplementation */\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3576:3588  new bytes(0) */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3535:3556  _upgradeToAndCallUUPS */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3535:3596  _upgradeToAndCallUUPS(newImplementation, new bytes(0), false) */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3408:3603  function upgradeTo(address newImplementation) public virtual onlyProxy {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3922:4142  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1764:1770  __self */\n      immutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1747:1770  address(this) != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1755:1759  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1747:1770  address(this) != __self */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1739:1819  require(address(this) != __self, \"Function must be called through delegatecall\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_122\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1861:1867  __self */\n      immutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1867  _getImplementation() == __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1857  _getImplementation() */\n      tag_140\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1557:1622  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1478:1629  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1857  _getImplementation() */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1837:1867  _getImplementation() == __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1829:1916  require(_getImplementation() == __self, \"Function must be called through active proxy\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_127\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4037:4073  _authorizeUpgrade(newImplementation) */\n      tag_144\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4055:4072  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4037:4054  _authorizeUpgrade */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4037:4073  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4083:4135  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4105:4122  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4124:4128  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4130:4134  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4083:4104  _upgradeToAndCallUUPS */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4083:4135  _upgradeToAndCallUUPS(newImplementation, data, true) */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3922:4142  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3027:3158  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3105:3112  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2190:2194  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2199:2205  __self */\n      immutable(\"0x048f12d6654ff468c94a5fe76c9b74c1d8afe7efe30c47ac2460af02a58cdb97\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2182:2205  address(this) == __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2174:2266  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5919:5921   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2174:2266  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5901:5922   */\n      mstore\n        /* \"#utility.yul\":5958:5960   */\n      0x38\n        /* \"#utility.yul\":5938:5956   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5931:5961   */\n      mstore\n        /* \"#utility.yul\":5997:6031   */\n      0x555550535570677261646561626c653a206d757374206e6f742062652063616c\n        /* \"#utility.yul\":5977:5995   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5970:6032   */\n      mstore\n        /* \"#utility.yul\":6068:6094   */\n      0x6c6564207468726f7567682064656c656761746563616c6c0000000000000000\n        /* \"#utility.yul\":6048:6066   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6041:6095   */\n      mstore\n        /* \"#utility.yul\":6112:6131   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2174:2266  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n      tag_102\n        /* \"#utility.yul\":5717:6137   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2174:2266  require(address(this) == __self, \"UUPSUpgradeable: must not be called through delegatecall\") */\n    tag_147:\n      pop\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3027:3158  function proxiableUUID() external view virtual override notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AlvaraDao.sol\":2191:2737  function leave(uint256 _share) public {... */\n    tag_61:\n        /* \"contracts/AlvaraDao.sol\":2264:2274  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2247:2275  blackListAddress[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2247:2263  blackListAddress */\n      0xcc\n        /* \"contracts/AlvaraDao.sol\":2247:2275  blackListAddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/AlvaraDao.sol\":2247:2283  blackListAddress[msg.sender] != true */\n      iszero\n      iszero\n        /* \"contracts/AlvaraDao.sol\":2247:2275  blackListAddress[msg.sender] */\n      0x01\n        /* \"contracts/AlvaraDao.sol\":2247:2283  blackListAddress[msg.sender] != true */\n      sub\n        /* \"contracts/AlvaraDao.sol\":2239:2304  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6344:6346   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":2239:2304  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6326:6347   */\n      mstore\n        /* \"#utility.yul\":6383:6385   */\n      0x10\n        /* \"#utility.yul\":6363:6381   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6356:6386   */\n      mstore\n      shl(0x81, 0x213630b1b5a634b9ba32b2102ab9b2b9)\n        /* \"#utility.yul\":6402:6420   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6395:6441   */\n      mstore\n        /* \"#utility.yul\":6458:6476   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":2239:2304  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      tag_102\n        /* \"#utility.yul\":6142:6482   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":2239:2304  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n    tag_152:\n        /* \"contracts/AlvaraDao.sol\":2384:2396  lockedPeriod */\n      sload(0xcd)\n        /* \"contracts/AlvaraDao.sol\":2370:2380  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2355:2381  userLockPeriod[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2355:2369  userLockPeriod */\n      0xcb\n        /* \"contracts/AlvaraDao.sol\":2355:2381  userLockPeriod[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/AlvaraDao.sol\":2355:2396  userLockPeriod[msg.sender] + lockedPeriod */\n      tag_155\n      swap2\n        /* \"contracts/AlvaraDao.sol\":2384:2396  lockedPeriod */\n      swap1\n        /* \"contracts/AlvaraDao.sol\":2355:2396  userLockPeriod[msg.sender] + lockedPeriod */\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"contracts/AlvaraDao.sol\":2335:2350  block.timestamp */\n      timestamp\n        /* \"contracts/AlvaraDao.sol\":2335:2397  block.timestamp >= (userLockPeriod[msg.sender] + lockedPeriod) */\n      lt\n      iszero\n        /* \"contracts/AlvaraDao.sol\":2314:2438  require(... */\n      tag_157\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6951:6953   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":2314:2438  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6933:6954   */\n      mstore\n        /* \"#utility.yul\":6990:6992   */\n      0x0f\n        /* \"#utility.yul\":6970:6988   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6963:6993   */\n      mstore\n      shl(0x88, 0x43616e206e6f7420756e5374616b65)\n        /* \"#utility.yul\":7009:7027   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7002:7047   */\n      mstore\n        /* \"#utility.yul\":7064:7082   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":2314:2438  require(... */\n      tag_102\n        /* \"#utility.yul\":6749:7088   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":2314:2438  require(... */\n    tag_157:\n        /* \"contracts/AlvaraDao.sol\":2470:2475  xALVA */\n      sload(0xca)\n        /* \"contracts/AlvaraDao.sol\":2470:2489  xALVA.totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/AlvaraDao.sol\":2448:2467  uint256 totalShares */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":2470:2475  xALVA */\n      and\n      swap2\n        /* \"contracts/AlvaraDao.sol\":2470:2487  xALVA.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"contracts/AlvaraDao.sol\":2470:2489  xALVA.totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/AlvaraDao.sol\":2470:2475  xALVA */\n      dup7\n        /* \"contracts/AlvaraDao.sol\":2470:2489  xALVA.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contracts/AlvaraDao.sol\":2530:2534  ALVA */\n      sload(0xc9)\n        /* \"contracts/AlvaraDao.sol\":2530:2559  ALVA.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2553:2557  this */\n      address\n        /* \"contracts/AlvaraDao.sol\":2530:2559  ALVA.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1105:1156   */\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2448:2489  uint256 totalShares = xALVA.totalSupply() */\n      swap2\n      swap3\n      pop\n        /* \"contracts/AlvaraDao.sol\":2499:2517  uint256 _userShare */\n      0x00\n      swap2\n        /* \"contracts/AlvaraDao.sol\":2448:2489  uint256 totalShares = xALVA.totalSupply() */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":2530:2534  ALVA */\n      and\n      swap1\n        /* \"contracts/AlvaraDao.sol\":2530:2544  ALVA.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1078:1096   */\n      0x24\n      add\n        /* \"contracts/AlvaraDao.sol\":2530:2559  ALVA.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_167\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_167:\n        /* \"contracts/AlvaraDao.sol\":2521:2559  _share * ALVA.balanceOf(address(this)) */\n      tag_168\n      swap1\n        /* \"contracts/AlvaraDao.sol\":2521:2527  _share */\n      dup6\n        /* \"contracts/AlvaraDao.sol\":2521:2559  _share * ALVA.balanceOf(address(this)) */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"contracts/AlvaraDao.sol\":2520:2586  (_share * ALVA.balanceOf(address(this))) /... */\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"contracts/AlvaraDao.sol\":2596:2601  xALVA */\n      sload(0xca)\n        /* \"contracts/AlvaraDao.sol\":2499:2586  uint256 _userShare = (_share * ALVA.balanceOf(address(this))) /... */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":2596:2601  xALVA */\n      and\n        /* \"contracts/AlvaraDao.sol\":2596:2610  xALVA.burnFrom */\n      0x79cc6790\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2596:2632  xALVA.burnFrom(_msgSender(), _share) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7869:7901   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":2596:2632  xALVA.burnFrom(_msgSender(), _share) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7851:7902   */\n      mstore\n        /* \"#utility.yul\":7918:7936   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7911:7945   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":7824:7842   */\n      0x44\n      add\n        /* \"contracts/AlvaraDao.sol\":2596:2632  xALVA.burnFrom(_msgSender(), _share) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      revert(0x00, 0x00)\n    tag_176:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_178:\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":2642:2646  ALVA */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xc9))\n      swap2\n      pop\n        /* \"contracts/AlvaraDao.sol\":2642:2655  ALVA.transfer */\n      0xa9059cbb\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2642:2681  ALVA.transfer(_msgSender(), _userShare) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7869:7901   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":2642:2681  ALVA.transfer(_msgSender(), _userShare) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7851:7902   */\n      mstore\n        /* \"#utility.yul\":7918:7936   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7911:7945   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":7824:7842   */\n      0x44\n      add\n        /* \"contracts/AlvaraDao.sol\":2642:2681  ALVA.transfer(_msgSender(), _userShare) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_182\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_182:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      pop\n        /* \"contracts/AlvaraDao.sol\":2697:2730  Unstake(_msgSender(), _userShare) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap1\n        /* \"contracts/AlvaraDao.sol\":2697:2730  Unstake(_msgSender(), _userShare) */\n      0x85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"contracts/AlvaraDao.sol\":2697:2730  Unstake(_msgSender(), _userShare) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AlvaraDao.sol\":2229:2737  {... */\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":2191:2737  function leave(uint256 _share) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2085:2186  function renounceOwnership() public virtual onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2149:2179  _transferOwnership(address(0)) */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2177  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2149:2167  _transferOwnership */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2149:2179  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2085:2186  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/AlvaraDao.sol\":3218:3392  function updateLockPeriod(uint256 _lockedPeriod) external onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n    tag_195:\n        /* \"contracts/AlvaraDao.sol\":3318:3330  lockedPeriod */\n      sload(0xcd)\n        /* \"contracts/AlvaraDao.sol\":3301:3346  UpdateLockPeriod(lockedPeriod, _lockedPeriod) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":8380:8405   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":8436:8438   */\n      0x20\n        /* \"#utility.yul\":8421:8439   */\n      dup3\n      add\n        /* \"#utility.yul\":8414:8448   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/AlvaraDao.sol\":3301:3346  UpdateLockPeriod(lockedPeriod, _lockedPeriod) */\n      0xf814eafa160e3546fc1ea6b8939a578ef5f64d31e04888bcd82e8cd9f9ec2909\n      swap2\n        /* \"#utility.yul\":8353:8371   */\n      add\n        /* \"contracts/AlvaraDao.sol\":3301:3346  UpdateLockPeriod(lockedPeriod, _lockedPeriod) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AlvaraDao.sol\":3357:3369  lockedPeriod */\n      0xcd\n        /* \"contracts/AlvaraDao.sol\":3357:3385  lockedPeriod = _lockedPeriod */\n      sstore\n        /* \"contracts/AlvaraDao.sol\":3218:3392  function updateLockPeriod(uint256 _lockedPeriod) external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/AlvaraDao.sol\":1445:2136  function enter(uint256 _amount) public {... */\n    tag_81:\n        /* \"contracts/AlvaraDao.sol\":1519:1529  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":1502:1530  blackListAddress[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":1502:1518  blackListAddress */\n      0xcc\n        /* \"contracts/AlvaraDao.sol\":1502:1530  blackListAddress[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/AlvaraDao.sol\":1502:1538  blackListAddress[msg.sender] != true */\n      iszero\n      iszero\n        /* \"contracts/AlvaraDao.sol\":1502:1530  blackListAddress[msg.sender] */\n      0x01\n        /* \"contracts/AlvaraDao.sol\":1502:1538  blackListAddress[msg.sender] != true */\n      sub\n        /* \"contracts/AlvaraDao.sol\":1494:1559  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6344:6346   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":1494:1559  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6326:6347   */\n      mstore\n        /* \"#utility.yul\":6383:6385   */\n      0x10\n        /* \"#utility.yul\":6363:6381   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6356:6386   */\n      mstore\n      shl(0x81, 0x213630b1b5a634b9ba32b2102ab9b2b9)\n        /* \"#utility.yul\":6402:6420   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6395:6441   */\n      mstore\n        /* \"#utility.yul\":6458:6476   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":1494:1559  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n      tag_102\n        /* \"#utility.yul\":6142:6482   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1494:1559  require(blackListAddress[msg.sender] != true, \"BlackListed User\") */\n    tag_200:\n        /* \"contracts/AlvaraDao.sol\":1589:1593  ALVA */\n      sload(0xc9)\n        /* \"contracts/AlvaraDao.sol\":1589:1618  ALVA.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":1612:1616  this */\n      address\n        /* \"contracts/AlvaraDao.sol\":1589:1618  ALVA.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1105:1156   */\n      mstore\n        /* \"contracts/AlvaraDao.sol\":1569:1586  uint256 totalAlva */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1589:1593  ALVA */\n      and\n      swap1\n        /* \"contracts/AlvaraDao.sol\":1589:1603  ALVA.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1078:1096   */\n      0x24\n      add\n        /* \"contracts/AlvaraDao.sol\":1589:1618  ALVA.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_205:\n        /* \"contracts/AlvaraDao.sol\":1569:1618  uint256 totalAlva = ALVA.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/AlvaraDao.sol\":1628:1647  uint256 totalShares */\n      0x00\n        /* \"contracts/AlvaraDao.sol\":1650:1655  xALVA */\n      0xca\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1650:1667  xALVA.totalSupply */\n      and\n      0x18160ddd\n        /* \"contracts/AlvaraDao.sol\":1650:1669  xALVA.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_208:\n        /* \"contracts/AlvaraDao.sol\":1628:1669  uint256 totalShares = xALVA.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/AlvaraDao.sol\":1683:1699  totalShares == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"contracts/AlvaraDao.sol\":1683:1717  totalShares == 0 || totalAlva == 0 */\n      tag_209\n      jumpi\n      pop\n        /* \"contracts/AlvaraDao.sol\":1703:1717  totalAlva == 0 */\n      dup2\n      iszero\n        /* \"contracts/AlvaraDao.sol\":1683:1717  totalShares == 0 || totalAlva == 0 */\n    tag_209:\n        /* \"contracts/AlvaraDao.sol\":1679:2011  if (totalShares == 0 || totalAlva == 0) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"contracts/AlvaraDao.sol\":1733:1738  xALVA */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xca))\n        /* \"contracts/AlvaraDao.sol\":1733:1743  xALVA.mint */\n      0x40c10f19\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":1733:1766  xALVA.mint(_msgSender(), _amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7869:7901   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":1733:1766  xALVA.mint(_msgSender(), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7851:7902   */\n      mstore\n        /* \"#utility.yul\":7918:7936   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7911:7945   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":7824:7842   */\n      0x44\n      add\n        /* \"contracts/AlvaraDao.sol\":1733:1766  xALVA.mint(_msgSender(), _amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      revert(0x00, 0x00)\n    tag_213:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":1791:1803  _msgSender() */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1791:1803  _msgSender() */\n    tag_216:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1785:1813  Stake(_msgSender(), _amount) */\n      and\n      0xebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a\n        /* \"contracts/AlvaraDao.sol\":1805:1812  _amount */\n      dup5\n        /* \"contracts/AlvaraDao.sol\":1785:1813  Stake(_msgSender(), _amount) */\n      mload(0x40)\n      tag_217\n      swap2\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1785:1813  Stake(_msgSender(), _amount) */\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AlvaraDao.sol\":1679:2011  if (totalShares == 0 || totalAlva == 0) {... */\n      jump(tag_218)\n    tag_210:\n        /* \"contracts/AlvaraDao.sol\":1844:1862  uint256 _userShare */\n      0x00\n        /* \"contracts/AlvaraDao.sol\":1891:1900  totalAlva */\n      dup3\n        /* \"contracts/AlvaraDao.sol\":1866:1887  _amount * totalShares */\n      tag_219\n        /* \"contracts/AlvaraDao.sol\":1876:1887  totalShares */\n      dup4\n        /* \"contracts/AlvaraDao.sol\":1866:1873  _amount */\n      dup7\n        /* \"contracts/AlvaraDao.sol\":1866:1887  _amount * totalShares */\n      tag_169\n      jump\t// in\n    tag_219:\n        /* \"contracts/AlvaraDao.sol\":1865:1900  (_amount * totalShares) / totalAlva */\n      tag_220\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_220:\n        /* \"contracts/AlvaraDao.sol\":1914:1919  xALVA */\n      sload(0xca)\n        /* \"contracts/AlvaraDao.sol\":1844:1900  uint256 _userShare = (_amount * totalShares) / totalAlva */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1914:1919  xALVA */\n      and\n        /* \"contracts/AlvaraDao.sol\":1914:1924  xALVA.mint */\n      0x40c10f19\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":1914:1950  xALVA.mint(_msgSender(), _userShare) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7869:7901   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":1914:1950  xALVA.mint(_msgSender(), _userShare) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7851:7902   */\n      mstore\n        /* \"#utility.yul\":7918:7936   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7911:7945   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":7824:7842   */\n      0x44\n      add\n        /* \"contracts/AlvaraDao.sol\":1914:1950  xALVA.mint(_msgSender(), _userShare) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_223\n      jumpi\n      revert(0x00, 0x00)\n    tag_223:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_225\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_225:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AlvaraDao.sol\":1975:1987  _msgSender() */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1975:1987  _msgSender() */\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":1969:2000  Stake(_msgSender(), _userShare) */\n      and\n      0xebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a\n        /* \"contracts/AlvaraDao.sol\":1989:1999  _userShare */\n      dup3\n        /* \"contracts/AlvaraDao.sol\":1969:2000  Stake(_msgSender(), _userShare) */\n      mload(0x40)\n      tag_227\n      swap2\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":1969:2000  Stake(_msgSender(), _userShare) */\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AlvaraDao.sol\":1830:2011  {... */\n      pop\n        /* \"contracts/AlvaraDao.sol\":1679:2011  if (totalShares == 0 || totalAlva == 0) {... */\n    tag_218:\n        /* \"contracts/AlvaraDao.sol\":2035:2045  msg.sender */\n      caller\n        /* \"contracts/AlvaraDao.sol\":2020:2046  userLockPeriod[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2020:2034  userLockPeriod */\n      0xcb\n        /* \"contracts/AlvaraDao.sol\":2020:2046  userLockPeriod[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/AlvaraDao.sol\":2049:2064  block.timestamp */\n      timestamp\n        /* \"contracts/AlvaraDao.sol\":2020:2064  userLockPeriod[msg.sender] = block.timestamp */\n      swap1\n      sstore\n        /* \"contracts/AlvaraDao.sol\":2074:2078  ALVA */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0xc9))\n        /* \"contracts/AlvaraDao.sol\":2074:2091  ALVA.transferFrom */\n      0x23b872dd\n        /* \"contracts/AlvaraDao.sol\":2092:2104  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":886:982  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/AlvaraDao.sol\":2092:2104  _msgSender() */\n    tag_228:\n        /* \"contracts/AlvaraDao.sol\":2074:2129  ALVA.transferFrom(_msgSender(), address(this), _amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8679:8711   */\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":2074:2129  ALVA.transferFrom(_msgSender(), address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8661:8712   */\n      mstore\n        /* \"contracts/AlvaraDao.sol\":2114:2118  this */\n      address\n        /* \"#utility.yul\":8728:8746   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8721:8781   */\n      mstore\n        /* \"#utility.yul\":8797:8815   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8790:8824   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":8634:8652   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":2074:2129  ALVA.transferFrom(_msgSender(), address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_232\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_232:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":2941:3186  function blackListUser(address _user, bool _status) external onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n    tag_235:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":3030:3053  blackListAddress[_user] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":3030:3046  blackListAddress */\n      0xcc\n        /* \"contracts/AlvaraDao.sol\":3030:3053  blackListAddress[_user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/AlvaraDao.sol\":3030:3064  blackListAddress[_user] != _status */\n      dup2\n      iszero\n      iszero\n        /* \"contracts/AlvaraDao.sol\":3030:3053  blackListAddress[_user] */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"contracts/AlvaraDao.sol\":3030:3064  blackListAddress[_user] != _status */\n      iszero\n      iszero\n      sub\n        /* \"contracts/AlvaraDao.sol\":3022:3091  require(blackListAddress[_user] != _status, \"Already in same status\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9037:9039   */\n      0x20\n        /* \"contracts/AlvaraDao.sol\":3022:3091  require(blackListAddress[_user] != _status, \"Already in same status\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9019:9040   */\n      mstore\n        /* \"#utility.yul\":9076:9078   */\n      0x16\n        /* \"#utility.yul\":9056:9074   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9049:9079   */\n      mstore\n      shl(0x50, 0x416c726561647920696e2073616d6520737461747573)\n        /* \"#utility.yul\":9095:9113   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9088:9140   */\n      mstore\n        /* \"#utility.yul\":9157:9175   */\n      0x64\n      add\n        /* \"contracts/AlvaraDao.sol\":3022:3091  require(blackListAddress[_user] != _status, \"Already in same status\") */\n      tag_102\n        /* \"#utility.yul\":8835:9181   */\n      jump\n        /* \"contracts/AlvaraDao.sol\":3022:3091  require(blackListAddress[_user] != _status, \"Already in same status\") */\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/AlvaraDao.sol\":3101:3124  blackListAddress[_user] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/AlvaraDao.sol\":3101:3117  blackListAddress */\n      0xcc\n        /* \"contracts/AlvaraDao.sol\":3101:3124  blackListAddress[_user] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/AlvaraDao.sol\":3101:3134  blackListAddress[_user] = _status */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup6\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/AlvaraDao.sol\":3150:3179  BlackListUser(_user, _status) */\n      dup3\n      mload\n        /* \"#utility.yul\":9354:9405   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":9421:9439   */\n      swap1\n      dup4\n      add\n        /* \"#utility.yul\":9414:9464   */\n      mstore\n        /* \"contracts/AlvaraDao.sol\":3150:3179  BlackListUser(_user, _status) */\n      0x2f2ea19e5340217456e8ecb94895965ba2afa084e4a94f9fc7c315b1478243b7\n      swap2\n        /* \"#utility.yul\":9327:9345   */\n      add\n        /* \"contracts/AlvaraDao.sol\":3150:3179  BlackListUser(_user, _status) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AlvaraDao.sol\":2941:3186  function blackListUser(address _user, bool _status) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2335:2533  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_243\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2423:2445  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9677:9679   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9659:9680   */\n      mstore\n        /* \"#utility.yul\":9716:9718   */\n      0x26\n        /* \"#utility.yul\":9696:9714   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9689:9719   */\n      mstore\n        /* \"#utility.yul\":9755:9789   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9735:9753   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9728:9790   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":9806:9824   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9799:9835   */\n      mstore\n        /* \"#utility.yul\":9852:9871   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_102\n        /* \"#utility.yul\":9475:9877   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2415:2488  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2498:2526  _transferOwnership(newOwner) */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2517:2525  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2498:2516  _transferOwnership */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2498:2526  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1024:1119  function __Ownable_init() internal onlyInitializing {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_253\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1086:1112  __Ownable_init_unchained() */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1086:1110  __Ownable_init_unchained */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1086:1112  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2290:2357  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_109:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_253\n      jump\t// in\n        /* \"contracts/AlvaraDao.sol\":3398:3510  function _authorizeUpgrade(address newImplementation)... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1366  _checkOwner */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1355:1368  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2841:3785  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":839:905  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3257:3316  StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3253:3779  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3332:3369  _setImplementation(newImplementation) */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3351:3368  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3332:3350  _setImplementation */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3332:3369  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2841:3785  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3253:3779  if (StorageSlotUpgradeable.getBooleanSlot(_ROLLBACK_SLOT).value) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3433:3450  newImplementation */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3404:3465  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3404:3467  IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_274\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_275\n      swap2\n      dup2\n      add\n      swap1\n      tag_163\n      jump\t// in\n    tag_275:\n      0x01\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3400:3702  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3631:3687  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10685:10687   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3631:3687  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10667:10688   */\n      mstore\n        /* \"#utility.yul\":10724:10726   */\n      0x2e\n        /* \"#utility.yul\":10704:10722   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10697:10727   */\n      mstore\n        /* \"#utility.yul\":10763:10797   */\n      0x45524331393637557067726164653a206e657720696d706c656d656e74617469\n        /* \"#utility.yul\":10743:10761   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10736:10798   */\n      mstore\n      shl(0x90, 0x6f6e206973206e6f742055555053)\n        /* \"#utility.yul\":10814:10832   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10807:10851   */\n      mstore\n        /* \"#utility.yul\":10868:10887   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3631:3687  revert(\"ERC1967Upgrade: new implementation is not UUPS\") */\n      tag_102\n        /* \"#utility.yul\":10483:10893   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3400:3702  try IERC1822ProxiableUpgradeable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_277:\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3517:3545  slot == _IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3509:3591  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11100:11102   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3509:3591  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11082:11103   */\n      mstore\n        /* \"#utility.yul\":11139:11141   */\n      0x29\n        /* \"#utility.yul\":11119:11137   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11112:11142   */\n      mstore\n        /* \"#utility.yul\":11178:11212   */\n      0x45524331393637557067726164653a20756e737570706f727465642070726f78\n        /* \"#utility.yul\":11158:11176   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11151:11213   */\n      mstore\n      shl(0xba, 0x1a58589b1955555251)\n        /* \"#utility.yul\":11229:11247   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11222:11261   */\n      mstore\n        /* \"#utility.yul\":11278:11297   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3509:3591  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n      tag_102\n        /* \"#utility.yul\":10898:11303   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3509:3591  require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\") */\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3468:3606  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3715:3768  _upgradeToAndCall(newImplementation, data, forceCall) */\n      tag_271\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3733:3750  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3752:3756  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3758:3767  forceCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3715:3732  _upgradeToAndCall */\n      tag_288\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":3715:3768  _upgradeToAndCall(newImplementation, data, forceCall) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1620:1750  function _checkOwner() internal view virtual {... */\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1534:1540  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x33))\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1683:1706  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1675:1743  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11510:11512   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1675:1743  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11492:11513   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11529:11547   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11522:11552   */\n      mstore\n        /* \"#utility.yul\":11588:11622   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11568:11586   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11561:11623   */\n      mstore\n        /* \"#utility.yul\":11640:11658   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1675:1743  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_102\n        /* \"#utility.yul\":11308:11664   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2687:2874  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2779:2785  _owner */\n      0x33\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2795:2812  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2827:2867  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2779:2785  _owner */\n      swap2\n      and\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2795:2812  _owner = newOwner */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2779:2785  _owner */\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2827:2867  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2760:2776  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2827:2867  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2750:2874  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2687:2874  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1125:1236  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5374:5387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5366:5435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_298\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_253\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1197:1229  _transferOwnership(_msgSender()) */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":965:975  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1197:1215  _transferOwnership */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1197:1229  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1720:2001  function _setImplementation(address newImplementation) private {... */\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      dup2\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1793:1899  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11871:11873   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1793:1899  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11853:11874   */\n      mstore\n        /* \"#utility.yul\":11910:11912   */\n      0x2d\n        /* \"#utility.yul\":11890:11908   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11883:11913   */\n      mstore\n        /* \"#utility.yul\":11949:11983   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":11929:11947   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11922:11984   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":12000:12018   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11993:12036   */\n      mstore\n        /* \"#utility.yul\":12053:12072   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1793:1899  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_102\n        /* \"#utility.yul\":11669:12078   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1793:1899  require(AddressUpgradeable.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_307:\n      mload(0x00)\n      codecopy(0x00, data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d, 0x20)\n      mload(0x00)\n      swap1\n      0x00\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1909:1994  StorageSlotUpgradeable.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":1720:2001  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2393:2669  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2501:2530  _upgradeTo(newImplementation) */\n      tag_312\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2512:2529  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2501:2511  _upgradeTo */\n      tag_313\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2501:2530  _upgradeTo(newImplementation) */\n      jump\t// in\n    tag_312:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2558:2559  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2548  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2555  data.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2559  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2572  data.length > 0 || forceCall */\n      dup1\n      tag_314\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2563:2572  forceCall */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2544:2572  data.length > 0 || forceCall */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2540:2663  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_271\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2588:2652  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      tag_116\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2628:2645  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2647:2651  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2588:2627  AddressUpgradeable.functionDelegateCall */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2588:2652  AddressUpgradeable.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2107:2259  function _upgradeTo(address newImplementation) internal {... */\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2173:2210  _setImplementation(newImplementation) */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2192:2209  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2173:2191  _setImplementation */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2173:2210  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2225:2252  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":2107:2259  function _upgradeTo(address newImplementation) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6685:6883  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6768:6780  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6820:6826  target */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6828:6832  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6819  functionDelegateCall */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6799:6876  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6792:6876  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":6685:6883  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_320:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7210:7222  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7235:7247  bool success */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7249:7272  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7282  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7295  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7296:7300  data */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7276:7301  target.delegatecall(data) */\n      mload(0x40)\n      tag_324\n      swap2\n      swap1\n      tag_325\n      jump\t// in\n    tag_324:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_328\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_327)\n    tag_328:\n      0x60\n      swap2\n      pop\n    tag_327:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7234:7301  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_329\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7345:7351  target */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7353:7360  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7362:7372  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7374:7386  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7344  verifyCallResultFromTarget */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7318:7387  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7311:7387  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap7\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7069:7394  function functionDelegateCall(... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7862:7874  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7890:7897  success */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7927  returndata */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7934  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7938:7939  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7917:7939  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7913:8199  if (returndata.length == 0) {... */\n      tag_335\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":1713:1732  account.code.length */\n      dup6\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12591:12593   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12573:12594   */\n      mstore\n        /* \"#utility.yul\":12630:12632   */\n      0x1d\n        /* \"#utility.yul\":12610:12628   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12603:12633   */\n      mstore\n        /* \"#utility.yul\":12669:12700   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":12649:12667   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12642:12701   */\n      mstore\n        /* \"#utility.yul\":12718:12736   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n      tag_102\n        /* \"#utility.yul\":12389:12742   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8124:8184  require(isContract(target), \"Address: call to non-contract\") */\n    tag_335:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8219:8229  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8212:8229  return returndata */\n      jump(tag_339)\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7886:8304  if (success) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      tag_339\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8268:8278  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8280:8292  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8267  _revert */\n      tag_340\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8260:8293  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":7682:8310  function verifyCallResultFromTarget(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8832:9372  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9008  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8991:9012  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n      tag_342\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9219:9229  returndata */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9213:9230  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9275:9290  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9262:9272  returndata */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9258:9260  32 */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9254:9273  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9247:9291  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":8987:9366  if (returndata.length > 0) {... */\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9342:9354  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":9335:9355  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_346:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      0x00\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_351:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_24:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_353:\n        /* \"#utility.yul\":343:372   */\n      tag_321\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_346\n      jump\t// in\n        /* \"#utility.yul\":565:939   */\n    tag_31:\n        /* \"#utility.yul\":642:648   */\n      0x00\n        /* \"#utility.yul\":650:656   */\n      0x00\n        /* \"#utility.yul\":658:664   */\n      0x00\n        /* \"#utility.yul\":711:713   */\n      0x60\n        /* \"#utility.yul\":699:708   */\n      dup5\n        /* \"#utility.yul\":690:697   */\n      dup7\n        /* \"#utility.yul\":686:709   */\n      sub\n        /* \"#utility.yul\":682:714   */\n      slt\n        /* \"#utility.yul\":679:731   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":727:728   */\n      0x00\n        /* \"#utility.yul\":724:725   */\n      0x00\n        /* \"#utility.yul\":717:729   */\n      revert\n        /* \"#utility.yul\":679:731   */\n    tag_357:\n        /* \"#utility.yul\":750:779   */\n      tag_358\n        /* \"#utility.yul\":769:778   */\n      dup5\n        /* \"#utility.yul\":750:779   */\n      tag_346\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":740:779   */\n      swap3\n      pop\n        /* \"#utility.yul\":798:836   */\n      tag_359\n        /* \"#utility.yul\":832:834   */\n      0x20\n        /* \"#utility.yul\":821:830   */\n      dup6\n        /* \"#utility.yul\":817:835   */\n      add\n        /* \"#utility.yul\":798:836   */\n      tag_346\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":565:939   */\n      swap3\n      swap6\n        /* \"#utility.yul\":788:836   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":905:907   */\n      0x40\n        /* \"#utility.yul\":890:908   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":877:909   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":565:939   */\n      jump\t// out\n        /* \"#utility.yul\":1359:1486   */\n    tag_134:\n        /* \"#utility.yul\":1420:1430   */\n      0x4e487b71\n        /* \"#utility.yul\":1415:1418   */\n      0xe0\n        /* \"#utility.yul\":1411:1431   */\n      shl\n        /* \"#utility.yul\":1408:1409   */\n      0x00\n        /* \"#utility.yul\":1401:1432   */\n      mstore\n        /* \"#utility.yul\":1451:1455   */\n      0x41\n        /* \"#utility.yul\":1448:1449   */\n      0x04\n        /* \"#utility.yul\":1441:1456   */\n      mstore\n        /* \"#utility.yul\":1475:1479   */\n      0x24\n        /* \"#utility.yul\":1472:1473   */\n      0x00\n        /* \"#utility.yul\":1465:1480   */\n      revert\n        /* \"#utility.yul\":1491:2509   */\n    tag_50:\n        /* \"#utility.yul\":1568:1574   */\n      0x00\n        /* \"#utility.yul\":1576:1582   */\n      0x00\n        /* \"#utility.yul\":1629:1631   */\n      0x40\n        /* \"#utility.yul\":1617:1626   */\n      dup4\n        /* \"#utility.yul\":1608:1615   */\n      dup6\n        /* \"#utility.yul\":1604:1627   */\n      sub\n        /* \"#utility.yul\":1600:1632   */\n      slt\n        /* \"#utility.yul\":1597:1649   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":1645:1646   */\n      0x00\n        /* \"#utility.yul\":1642:1643   */\n      0x00\n        /* \"#utility.yul\":1635:1647   */\n      revert\n        /* \"#utility.yul\":1597:1649   */\n    tag_364:\n        /* \"#utility.yul\":1668:1697   */\n      tag_365\n        /* \"#utility.yul\":1687:1696   */\n      dup4\n        /* \"#utility.yul\":1668:1697   */\n      tag_346\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":1658:1697   */\n      swap2\n      pop\n        /* \"#utility.yul\":1748:1750   */\n      0x20\n        /* \"#utility.yul\":1737:1746   */\n      dup4\n        /* \"#utility.yul\":1733:1751   */\n      add\n        /* \"#utility.yul\":1720:1752   */\n      calldataload\n        /* \"#utility.yul\":1775:1793   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1767:1773   */\n      dup2\n        /* \"#utility.yul\":1764:1794   */\n      gt\n        /* \"#utility.yul\":1761:1811   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":1807:1808   */\n      0x00\n        /* \"#utility.yul\":1804:1805   */\n      0x00\n        /* \"#utility.yul\":1797:1809   */\n      revert\n        /* \"#utility.yul\":1761:1811   */\n    tag_366:\n        /* \"#utility.yul\":1830:1852   */\n      dup4\n      add\n        /* \"#utility.yul\":1883:1887   */\n      0x1f\n        /* \"#utility.yul\":1875:1888   */\n      dup2\n      add\n        /* \"#utility.yul\":1871:1898   */\n      dup6\n      sgt\n        /* \"#utility.yul\":1861:1916   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1902:1914   */\n      revert\n        /* \"#utility.yul\":1861:1916   */\n    tag_367:\n        /* \"#utility.yul\":1952:1954   */\n      dup1\n        /* \"#utility.yul\":1939:1955   */\n      calldataload\n        /* \"#utility.yul\":1978:1996   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1970:1976   */\n      dup2\n        /* \"#utility.yul\":1967:1997   */\n      gt\n        /* \"#utility.yul\":1964:2020   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":2000:2018   */\n      tag_369\n      tag_134\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2049:2051   */\n      0x40\n        /* \"#utility.yul\":2043:2052   */\n      mload\n        /* \"#utility.yul\":2141:2143   */\n      0x1f\n        /* \"#utility.yul\":2103:2120   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2099:2130   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2132:2134   */\n      0x3f\n        /* \"#utility.yul\":2095:2135   */\n      add\n        /* \"#utility.yul\":2091:2145   */\n      and\n        /* \"#utility.yul\":2079:2146   */\n      dup2\n      add\n        /* \"#utility.yul\":2176:2194   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2161:2195   */\n      dup2\n      gt\n        /* \"#utility.yul\":2197:2219   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2158:2220   */\n      or\n        /* \"#utility.yul\":2155:2243   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2223:2241   */\n      tag_371\n      tag_134\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2259:2261   */\n      0x40\n        /* \"#utility.yul\":2252:2274   */\n      mstore\n        /* \"#utility.yul\":2283:2305   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":2324:2339   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2320:2344   */\n      add\n        /* \"#utility.yul\":2317:2354   */\n      dup8\n      lt\n        /* \"#utility.yul\":2314:2371   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":2367:2368   */\n      0x00\n        /* \"#utility.yul\":2364:2365   */\n      0x00\n        /* \"#utility.yul\":2357:2369   */\n      revert\n        /* \"#utility.yul\":2314:2371   */\n    tag_372:\n        /* \"#utility.yul\":2423:2429   */\n      dup2\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2414:2416   */\n      dup5\n        /* \"#utility.yul\":2410:2421   */\n      add\n        /* \"#utility.yul\":2405:2407   */\n      0x20\n        /* \"#utility.yul\":2397:2403   */\n      dup4\n        /* \"#utility.yul\":2393:2408   */\n      add\n        /* \"#utility.yul\":2380:2430   */\n      calldatacopy\n        /* \"#utility.yul\":2476:2477   */\n      0x00\n        /* \"#utility.yul\":2471:2473   */\n      0x20\n        /* \"#utility.yul\":2462:2468   */\n      dup4\n        /* \"#utility.yul\":2454:2460   */\n      dup4\n        /* \"#utility.yul\":2450:2469   */\n      add\n        /* \"#utility.yul\":2446:2474   */\n      add\n        /* \"#utility.yul\":2439:2478   */\n      mstore\n        /* \"#utility.yul\":2497:2503   */\n      dup1\n        /* \"#utility.yul\":2487:2503   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1491:2509   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2696:2922   */\n    tag_60:\n        /* \"#utility.yul\":2755:2761   */\n      0x00\n        /* \"#utility.yul\":2808:2810   */\n      0x20\n        /* \"#utility.yul\":2796:2805   */\n      dup3\n        /* \"#utility.yul\":2787:2794   */\n      dup5\n        /* \"#utility.yul\":2783:2806   */\n      sub\n        /* \"#utility.yul\":2779:2811   */\n      slt\n        /* \"#utility.yul\":2776:2828   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":2824:2825   */\n      0x00\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2814:2826   */\n      revert\n        /* \"#utility.yul\":2776:2828   */\n    tag_375:\n      pop\n        /* \"#utility.yul\":2869:2892   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2696:2922   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3135:3253   */\n    tag_347:\n        /* \"#utility.yul\":3221:3226   */\n      dup1\n        /* \"#utility.yul\":3214:3227   */\n      iszero\n        /* \"#utility.yul\":3207:3228   */\n      iszero\n        /* \"#utility.yul\":3200:3205   */\n      dup2\n        /* \"#utility.yul\":3197:3229   */\n      eq\n        /* \"#utility.yul\":3187:3247   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":3243:3244   */\n      0x00\n        /* \"#utility.yul\":3240:3241   */\n      0x00\n        /* \"#utility.yul\":3233:3245   */\n      revert\n        /* \"#utility.yul\":3258:3573   */\n    tag_89:\n        /* \"#utility.yul\":3323:3329   */\n      0x00\n        /* \"#utility.yul\":3331:3337   */\n      0x00\n        /* \"#utility.yul\":3384:3386   */\n      0x40\n        /* \"#utility.yul\":3372:3381   */\n      dup4\n        /* \"#utility.yul\":3363:3370   */\n      dup6\n        /* \"#utility.yul\":3359:3382   */\n      sub\n        /* \"#utility.yul\":3355:3387   */\n      slt\n        /* \"#utility.yul\":3352:3404   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":3400:3401   */\n      0x00\n        /* \"#utility.yul\":3397:3398   */\n      0x00\n        /* \"#utility.yul\":3390:3402   */\n      revert\n        /* \"#utility.yul\":3352:3404   */\n    tag_380:\n        /* \"#utility.yul\":3423:3452   */\n      tag_381\n        /* \"#utility.yul\":3442:3451   */\n      dup4\n        /* \"#utility.yul\":3423:3452   */\n      tag_346\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":3413:3452   */\n      swap2\n      pop\n        /* \"#utility.yul\":3502:3504   */\n      0x20\n        /* \"#utility.yul\":3491:3500   */\n      dup4\n        /* \"#utility.yul\":3487:3505   */\n      add\n        /* \"#utility.yul\":3474:3506   */\n      calldataload\n        /* \"#utility.yul\":3515:3543   */\n      tag_382\n        /* \"#utility.yul\":3537:3542   */\n      dup2\n        /* \"#utility.yul\":3515:3543   */\n      tag_347\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3562:3567   */\n      dup1\n        /* \"#utility.yul\":3552:3567   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3258:3573   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4891:5299   */\n    tag_122:\n        /* \"#utility.yul\":5093:5095   */\n      0x20\n        /* \"#utility.yul\":5075:5096   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5132:5134   */\n      0x2c\n        /* \"#utility.yul\":5112:5130   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5105:5135   */\n      mstore\n        /* \"#utility.yul\":5171:5205   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":5166:5168   */\n      0x40\n        /* \"#utility.yul\":5151:5169   */\n      dup3\n      add\n        /* \"#utility.yul\":5144:5206   */\n      mstore\n      shl(0xa2, 0x19195b1959d85d1958d85b1b)\n        /* \"#utility.yul\":5237:5239   */\n      0x60\n        /* \"#utility.yul\":5222:5240   */\n      dup3\n      add\n        /* \"#utility.yul\":5215:5257   */\n      mstore\n        /* \"#utility.yul\":5289:5292   */\n      0x80\n        /* \"#utility.yul\":5274:5293   */\n      add\n      swap1\n        /* \"#utility.yul\":4891:5299   */\n      jump\t// out\n        /* \"#utility.yul\":5304:5712   */\n    tag_127:\n        /* \"#utility.yul\":5506:5508   */\n      0x20\n        /* \"#utility.yul\":5488:5509   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5545:5547   */\n      0x2c\n        /* \"#utility.yul\":5525:5543   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5518:5548   */\n      mstore\n        /* \"#utility.yul\":5584:5618   */\n      0x46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820\n        /* \"#utility.yul\":5579:5581   */\n      0x40\n        /* \"#utility.yul\":5564:5582   */\n      dup3\n      add\n        /* \"#utility.yul\":5557:5619   */\n      mstore\n      shl(0xa0, 0x6163746976652070726f7879)\n        /* \"#utility.yul\":5650:5652   */\n      0x60\n        /* \"#utility.yul\":5635:5653   */\n      dup3\n      add\n        /* \"#utility.yul\":5628:5670   */\n      mstore\n        /* \"#utility.yul\":5702:5705   */\n      0x80\n        /* \"#utility.yul\":5687:5706   */\n      add\n      swap1\n        /* \"#utility.yul\":5304:5712   */\n      jump\t// out\n        /* \"#utility.yul\":6487:6614   */\n    tag_348:\n        /* \"#utility.yul\":6548:6558   */\n      0x4e487b71\n        /* \"#utility.yul\":6543:6546   */\n      0xe0\n        /* \"#utility.yul\":6539:6559   */\n      shl\n        /* \"#utility.yul\":6536:6537   */\n      0x00\n        /* \"#utility.yul\":6529:6560   */\n      mstore\n        /* \"#utility.yul\":6579:6583   */\n      0x11\n        /* \"#utility.yul\":6576:6577   */\n      0x04\n        /* \"#utility.yul\":6569:6584   */\n      mstore\n        /* \"#utility.yul\":6603:6607   */\n      0x24\n        /* \"#utility.yul\":6600:6601   */\n      0x00\n        /* \"#utility.yul\":6593:6608   */\n      revert\n        /* \"#utility.yul\":6619:6744   */\n    tag_156:\n        /* \"#utility.yul\":6684:6693   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6705:6715   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6702:6738   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6718:6736   */\n      tag_320\n      tag_348\n      jump\t// in\n        /* \"#utility.yul\":7093:7277   */\n    tag_163:\n        /* \"#utility.yul\":7163:7169   */\n      0x00\n        /* \"#utility.yul\":7216:7218   */\n      0x20\n        /* \"#utility.yul\":7204:7213   */\n      dup3\n        /* \"#utility.yul\":7195:7202   */\n      dup5\n        /* \"#utility.yul\":7191:7214   */\n      sub\n        /* \"#utility.yul\":7187:7219   */\n      slt\n        /* \"#utility.yul\":7184:7236   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":7232:7233   */\n      0x00\n        /* \"#utility.yul\":7229:7230   */\n      0x00\n        /* \"#utility.yul\":7222:7234   */\n      revert\n        /* \"#utility.yul\":7184:7236   */\n    tag_397:\n      pop\n        /* \"#utility.yul\":7255:7271   */\n      mload\n      swap2\n        /* \"#utility.yul\":7093:7277   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7282:7450   */\n    tag_169:\n        /* \"#utility.yul\":7355:7364   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":7386:7395   */\n      dup2\n      iszero\n        /* \"#utility.yul\":7403:7418   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":7397:7419   */\n      dup5\n      eq\n        /* \"#utility.yul\":7383:7420   */\n      or\n        /* \"#utility.yul\":7373:7444   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":7424:7442   */\n      tag_320\n      tag_348\n      jump\t// in\n        /* \"#utility.yul\":7455:7672   */\n    tag_171:\n        /* \"#utility.yul\":7495:7496   */\n      0x00\n        /* \"#utility.yul\":7521:7522   */\n      dup3\n        /* \"#utility.yul\":7511:7643   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":7565:7575   */\n      0x4e487b71\n        /* \"#utility.yul\":7560:7563   */\n      0xe0\n        /* \"#utility.yul\":7556:7576   */\n      shl\n        /* \"#utility.yul\":7553:7554   */\n      0x00\n        /* \"#utility.yul\":7546:7577   */\n      mstore\n        /* \"#utility.yul\":7600:7604   */\n      0x12\n        /* \"#utility.yul\":7597:7598   */\n      0x04\n        /* \"#utility.yul\":7590:7605   */\n      mstore\n        /* \"#utility.yul\":7628:7632   */\n      0x24\n        /* \"#utility.yul\":7625:7626   */\n      0x00\n        /* \"#utility.yul\":7618:7633   */\n      revert\n        /* \"#utility.yul\":7511:7643   */\n    tag_402:\n      pop\n        /* \"#utility.yul\":7657:7666   */\n      div\n      swap1\n        /* \"#utility.yul\":7455:7672   */\n      jump\t// out\n        /* \"#utility.yul\":7956:8201   */\n    tag_184:\n        /* \"#utility.yul\":8023:8029   */\n      0x00\n        /* \"#utility.yul\":8076:8078   */\n      0x20\n        /* \"#utility.yul\":8064:8073   */\n      dup3\n        /* \"#utility.yul\":8055:8062   */\n      dup5\n        /* \"#utility.yul\":8051:8074   */\n      sub\n        /* \"#utility.yul\":8047:8079   */\n      slt\n        /* \"#utility.yul\":8044:8096   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":8092:8093   */\n      0x00\n        /* \"#utility.yul\":8089:8090   */\n      0x00\n        /* \"#utility.yul\":8082:8094   */\n      revert\n        /* \"#utility.yul\":8044:8096   */\n    tag_405:\n        /* \"#utility.yul\":8124:8133   */\n      dup2\n        /* \"#utility.yul\":8118:8134   */\n      mload\n        /* \"#utility.yul\":8143:8171   */\n      tag_406\n        /* \"#utility.yul\":8165:8170   */\n      dup2\n        /* \"#utility.yul\":8143:8171   */\n      tag_347\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":8190:8195   */\n      swap4\n        /* \"#utility.yul\":7956:8201   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9882:10289   */\n    tag_253:\n        /* \"#utility.yul\":10084:10086   */\n      0x20\n        /* \"#utility.yul\":10066:10087   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10123:10125   */\n      0x2b\n        /* \"#utility.yul\":10103:10121   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10096:10126   */\n      mstore\n        /* \"#utility.yul\":10162:10196   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":10157:10159   */\n      0x40\n        /* \"#utility.yul\":10142:10160   */\n      dup3\n      add\n        /* \"#utility.yul\":10135:10197   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":10228:10230   */\n      0x60\n        /* \"#utility.yul\":10213:10231   */\n      dup3\n      add\n        /* \"#utility.yul\":10206:10247   */\n      mstore\n        /* \"#utility.yul\":10279:10282   */\n      0x80\n        /* \"#utility.yul\":10264:10283   */\n      add\n      swap1\n        /* \"#utility.yul\":9882:10289   */\n      jump\t// out\n        /* \"#utility.yul\":12083:12384   */\n    tag_325:\n        /* \"#utility.yul\":12212:12215   */\n      0x00\n        /* \"#utility.yul\":12250:12256   */\n      dup3\n        /* \"#utility.yul\":12244:12257   */\n      mload\n        /* \"#utility.yul\":12296:12302   */\n      dup1\n        /* \"#utility.yul\":12289:12293   */\n      0x20\n        /* \"#utility.yul\":12281:12287   */\n      dup6\n        /* \"#utility.yul\":12277:12294   */\n      add\n        /* \"#utility.yul\":12272:12275   */\n      dup5\n        /* \"#utility.yul\":12266:12303   */\n      mcopy\n        /* \"#utility.yul\":12358:12359   */\n      0x00\n        /* \"#utility.yul\":12322:12338   */\n      swap3\n      add\n        /* \"#utility.yul\":12347:12360   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":12322:12338   */\n      swap2\n        /* \"#utility.yul\":12083:12384   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12747:13165   */\n    tag_345:\n        /* \"#utility.yul\":12896:12898   */\n      0x20\n        /* \"#utility.yul\":12885:12894   */\n      dup2\n        /* \"#utility.yul\":12878:12899   */\n      mstore\n        /* \"#utility.yul\":12859:12863   */\n      0x00\n        /* \"#utility.yul\":12928:12934   */\n      dup3\n        /* \"#utility.yul\":12922:12935   */\n      mload\n        /* \"#utility.yul\":12971:12977   */\n      dup1\n        /* \"#utility.yul\":12966:12968   */\n      0x20\n        /* \"#utility.yul\":12955:12964   */\n      dup5\n        /* \"#utility.yul\":12951:12969   */\n      add\n        /* \"#utility.yul\":12944:12978   */\n      mstore\n        /* \"#utility.yul\":13030:13036   */\n      dup1\n        /* \"#utility.yul\":13025:13027   */\n      0x20\n        /* \"#utility.yul\":13017:13023   */\n      dup6\n        /* \"#utility.yul\":13013:13028   */\n      add\n        /* \"#utility.yul\":13008:13010   */\n      0x40\n        /* \"#utility.yul\":12997:13006   */\n      dup6\n        /* \"#utility.yul\":12993:13011   */\n      add\n        /* \"#utility.yul\":12987:13037   */\n      mcopy\n        /* \"#utility.yul\":13086:13087   */\n      0x00\n        /* \"#utility.yul\":13081:13083   */\n      0x40\n        /* \"#utility.yul\":13072:13078   */\n      dup3\n        /* \"#utility.yul\":13061:13070   */\n      dup6\n        /* \"#utility.yul\":13057:13079   */\n      add\n        /* \"#utility.yul\":13053:13084   */\n      add\n        /* \"#utility.yul\":13046:13088   */\n      mstore\n        /* \"#utility.yul\":13156:13158   */\n      0x40\n        /* \"#utility.yul\":13149:13151   */\n      0x1f\n        /* \"#utility.yul\":13145:13152   */\n      not\n        /* \"#utility.yul\":13140:13142   */\n      0x1f\n        /* \"#utility.yul\":13132:13138   */\n      dup4\n        /* \"#utility.yul\":13128:13143   */\n      add\n        /* \"#utility.yul\":13124:13153   */\n      and\n        /* \"#utility.yul\":13113:13122   */\n      dup5\n        /* \"#utility.yul\":13109:13154   */\n      add\n        /* \"#utility.yul\":13105:13159   */\n      add\n        /* \"#utility.yul\":13097:13159   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":12747:13165   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa264697066735822122014154bc1a730c437002c3b27c2a6e7d1e28017e979535df8f7e551e48ff2820c64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1355": {
									"entryPoint": null,
									"id": 1355,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_648": {
									"entryPoint": 33,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:608:12",
										"nodeType": "YulBlock",
										"src": "0:608:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "188:229:12",
													"nodeType": "YulBlock",
													"src": "188:229:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "205:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "216:2:12",
																		"nodeType": "YulLiteral",
																		"src": "216:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "198:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:12"
																},
																"nativeSrc": "198:21:12",
																"nodeType": "YulFunctionCall",
																"src": "198:21:12"
															},
															"nativeSrc": "198:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "198:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "239:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "250:2:12",
																				"nodeType": "YulLiteral",
																				"src": "250:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "235:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:12"
																		},
																		"nativeSrc": "235:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "255:2:12",
																		"nodeType": "YulLiteral",
																		"src": "255:2:12",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "228:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:12"
																},
																"nativeSrc": "228:30:12",
																"nodeType": "YulFunctionCall",
																"src": "228:30:12"
															},
															"nativeSrc": "228:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "228:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "278:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "289:2:12",
																				"nodeType": "YulLiteral",
																				"src": "289:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "274:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:12"
																		},
																		"nativeSrc": "274:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:12"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469",
																		"kind": "string",
																		"nativeSrc": "294:34:12",
																		"nodeType": "YulLiteral",
																		"src": "294:34:12",
																		"type": "",
																		"value": "Initializable: contract is initi"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "267:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:12"
																},
																"nativeSrc": "267:62:12",
																"nodeType": "YulFunctionCall",
																"src": "267:62:12"
															},
															"nativeSrc": "267:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "267:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "349:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "360:2:12",
																				"nodeType": "YulLiteral",
																				"src": "360:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "345:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:12"
																		},
																		"nativeSrc": "345:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:12"
																	},
																	{
																		"hexValue": "616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "365:9:12",
																		"nodeType": "YulLiteral",
																		"src": "365:9:12",
																		"type": "",
																		"value": "alizing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "338:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:12"
																},
																"nativeSrc": "338:37:12",
																"nodeType": "YulFunctionCall",
																"src": "338:37:12"
															},
															"nativeSrc": "338:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "338:37:12"
														},
														{
															"nativeSrc": "384:27:12",
															"nodeType": "YulAssignment",
															"src": "384:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "396:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "407:3:12",
																		"nodeType": "YulLiteral",
																		"src": "407:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "392:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:12"
																},
																"nativeSrc": "392:19:12",
																"nodeType": "YulFunctionCall",
																"src": "392:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "384:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "384:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:403:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "165:9:12",
														"nodeType": "YulTypedName",
														"src": "165:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "179:4:12",
														"nodeType": "YulTypedName",
														"src": "179:4:12",
														"type": ""
													}
												],
												"src": "14:403:12"
											},
											{
												"body": {
													"nativeSrc": "519:87:12",
													"nodeType": "YulBlock",
													"src": "519:87:12",
													"statements": [
														{
															"nativeSrc": "529:26:12",
															"nodeType": "YulAssignment",
															"src": "529:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "541:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "541:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "552:2:12",
																		"nodeType": "YulLiteral",
																		"src": "552:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "537:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "537:3:12"
																},
																"nativeSrc": "537:18:12",
																"nodeType": "YulFunctionCall",
																"src": "537:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "529:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "529:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "571:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "571:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "586:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "586:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "594:4:12",
																				"nodeType": "YulLiteral",
																				"src": "594:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "582:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "582:3:12"
																		},
																		"nativeSrc": "582:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "582:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "564:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "564:6:12"
																},
																"nativeSrc": "564:36:12",
																"nodeType": "YulFunctionCall",
																"src": "564:36:12"
															},
															"nativeSrc": "564:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "564:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "422:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "488:9:12",
														"nodeType": "YulTypedName",
														"src": "488:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "499:6:12",
														"nodeType": "YulTypedName",
														"src": "499:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "510:4:12",
														"nodeType": "YulTypedName",
														"src": "510:4:12",
														"type": ""
													}
												],
												"src": "422:184:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Initializable: contract is initi\")\n        mstore(add(headStart, 96), \"alizing\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f5ffd5b5061001c610021565b6100dd565b5f54610100900460ff161561008c5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b5f5460ff908116146100db575f805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516118086101115f395f818161050201528181610542015281816105df0152818161061f01526106b001526118085ff3fe6080604052600436106100ef575f3560e01c80636ac1090111610087578063a59f3e0c11610057578063a59f3e0c1461029b578063b3d6e119146102ba578063e0cef1b0146102cf578063f2fde38b146102ee575f5ffd5b80636ac109011461022c578063715018a61461024b5780638da5cb5b1461025f57806391db7b0d1461027c575f5ffd5b80633b0e0133116100c25780633b0e0133146101a85780634f1ef286146101e657806352d1902d146101f957806367dfd4c91461020d575f5ffd5b80630c8e32d2146100f35780631794bb3c14610131578063323bf9f0146101525780633659cfe614610189575b5f5ffd5b3480156100fe575f5ffd5b5061011e61010d366004611443565b60cb6020525f908152604090205481565b6040519081526020015b60405180910390f35b34801561013c575f5ffd5b5061015061014b36600461145c565b61030d565b005b34801561015d575f5ffd5b5060c954610171906001600160a01b031681565b6040516001600160a01b039091168152602001610128565b348015610194575f5ffd5b506101506101a3366004611443565b6104f8565b3480156101b3575f5ffd5b506101d66101c2366004611443565b60cc6020525f908152604090205460ff1681565b6040519015158152602001610128565b6101506101f43660046114aa565b6105d5565b348015610204575f5ffd5b5061011e6106a4565b348015610218575f5ffd5b5061015061022736600461156e565b610755565b348015610237575f5ffd5b5060ca54610171906001600160a01b031681565b348015610256575f5ffd5b50610150610a23565b34801561026a575f5ffd5b506033546001600160a01b0316610171565b348015610287575f5ffd5b5061015061029636600461156e565b610a36565b3480156102a6575f5ffd5b506101506102b536600461156e565b610a7f565b3480156102c5575f5ffd5b5061011e60cd5481565b3480156102da575f5ffd5b506101506102e9366004611592565b610df1565b3480156102f9575f5ffd5b50610150610308366004611443565b610ec3565b5f54610100900460ff161580801561032b57505f54600160ff909116105b806103445750303b15801561034457505f5460ff166001145b6103ac5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b5f805460ff1916600117905580156103cd575f805461ff0019166101001790555b6103d5610f39565b6103dd610f67565b6001600160a01b03841661042a5760405162461bcd60e51b8152602060048201526014602482015273496e76616c696420616c7661206164647265737360601b60448201526064016103a3565b6001600160a01b0383166104785760405162461bcd60e51b8152602060048201526015602482015274496e76616c69642078414c5641206164647265737360581b60448201526064016103a3565b60c980546001600160a01b038087166001600160a01b03199283161790925560ca80549286169290911691909117905560cd82905580156104f2575f805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036105405760405162461bcd60e51b81526004016103a3906115c7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166105885f51602061178c5f395f51905f52546001600160a01b031690565b6001600160a01b0316146105ae5760405162461bcd60e51b81526004016103a390611613565b6105b781610f8d565b604080515f808252602082019092526105d291839190610f95565b50565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361061d5760405162461bcd60e51b81526004016103a3906115c7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106655f51602061178c5f395f51905f52546001600160a01b031690565b6001600160a01b03161461068b5760405162461bcd60e51b81526004016103a390611613565b61069482610f8d565b6106a082826001610f95565b5050565b5f306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107435760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016103a3565b505f51602061178c5f395f51905f5290565b335f90815260cc602052604090205460ff1615156001036107ab5760405162461bcd60e51b815260206004820152601060248201526f213630b1b5a634b9ba32b2102ab9b2b960811b60448201526064016103a3565b60cd54335f90815260cb60205260409020546107c79190611673565b4210156108085760405162461bcd60e51b815260206004820152600f60248201526e43616e206e6f7420756e5374616b6560881b60448201526064016103a3565b60ca54604080516318160ddd60e01b815290515f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561084f573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108739190611686565b60c9546040516370a0823160e01b81523060048201529192505f9183916001600160a01b0316906370a0823190602401602060405180830381865afa1580156108be573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108e29190611686565b6108ec908561169d565b6108f691906116b4565b60ca549091506001600160a01b03166379cc6790336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044015f604051808303815f87803b158015610950575f5ffd5b505af1158015610962573d5f5f3e3d5ffd5b505060c9546001600160a01b0316915063a9059cbb9050336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303815f875af11580156109c4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109e891906116d3565b5060405181815233907f85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd9060200160405180910390a2505050565b610a2b611104565b610a345f61115e565b565b610a3e611104565b60cd5460408051918252602082018390527ff814eafa160e3546fc1ea6b8939a578ef5f64d31e04888bcd82e8cd9f9ec2909910160405180910390a160cd55565b335f90815260cc602052604090205460ff161515600103610ad55760405162461bcd60e51b815260206004820152601060248201526f213630b1b5a634b9ba32b2102ab9b2b960811b60448201526064016103a3565b60c9546040516370a0823160e01b81523060048201525f916001600160a01b0316906370a0823190602401602060405180830381865afa158015610b1b573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b3f9190611686565b90505f60ca5f9054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b92573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610bb69190611686565b9050801580610bc3575081155b15610c835760ca546001600160a01b03166340c10f19336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044015f604051808303815f87803b158015610c1f575f5ffd5b505af1158015610c31573d5f5f3e3d5ffd5b50505050610c3c3390565b6001600160a01b03167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a84604051610c7691815260200190565b60405180910390a2610d54565b5f82610c8f838661169d565b610c9991906116b4565b60ca549091506001600160a01b03166340c10f19336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044015f604051808303815f87803b158015610cf3575f5ffd5b505af1158015610d05573d5f5f3e3d5ffd5b50505050610d103390565b6001600160a01b03167febedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a82604051610d4a91815260200190565b60405180910390a2505b335f90815260cb6020526040902042905560c9546001600160a01b03166323b872dd610d7d3390565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018690526064016020604051808303815f875af1158015610dcd573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104f291906116d3565b610df9611104565b6001600160a01b0382165f90815260cc602052604090205481151560ff909116151503610e615760405162461bcd60e51b8152602060048201526016602482015275416c726561647920696e2073616d652073746174757360501b60448201526064016103a3565b6001600160a01b0382165f81815260cc6020908152604091829020805460ff19168515159081179091558251938452908301527f2f2ea19e5340217456e8ecb94895965ba2afa084e4a94f9fc7c315b1478243b7910160405180910390a15050565b610ecb611104565b6001600160a01b038116610f305760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103a3565b6105d28161115e565b5f54610100900460ff16610f5f5760405162461bcd60e51b81526004016103a3906116f5565b610a346111af565b5f54610100900460ff16610a345760405162461bcd60e51b81526004016103a3906116f5565b6105d2611104565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610fcd57610fc8836111de565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611027575060408051601f3d908101601f1916820190925261102491810190611686565b60015b61108a5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016103a3565b5f51602061178c5f395f51905f5281146110f85760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016103a3565b50610fc8838383611279565b6033546001600160a01b03163314610a345760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103a3565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b5f54610100900460ff166111d55760405162461bcd60e51b81526004016103a3906116f5565b610a343361115e565b6001600160a01b0381163b61124b5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016103a3565b5f51602061178c5f395f51905f5280546001600160a01b0319166001600160a01b0392909216919091179055565b6112828361129d565b5f8251118061128e5750805b15610fc8576104f283836112dc565b6112a6816111de565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a250565b606061130183836040518060600160405280602781526020016117ac6027913961130a565b90505b92915050565b60605f5f856001600160a01b0316856040516113269190611740565b5f60405180830381855af49150503d805f811461135e576040519150601f19603f3d011682016040523d82523d5f602084013e611363565b606091505b50915091506113748683838761137e565b9695505050505050565b606083156113ec5782515f036113e5576001600160a01b0385163b6113e55760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103a3565b50816113f6565b6113f683836113fe565b949350505050565b81511561140e5781518083602001fd5b8060405162461bcd60e51b81526004016103a39190611756565b80356001600160a01b038116811461143e575f5ffd5b919050565b5f60208284031215611453575f5ffd5b61130182611428565b5f5f5f6060848603121561146e575f5ffd5b61147784611428565b925061148560208501611428565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f5f604083850312156114bb575f5ffd5b6114c483611428565b9150602083013567ffffffffffffffff8111156114df575f5ffd5b8301601f810185136114ef575f5ffd5b803567ffffffffffffffff81111561150957611509611496565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561153857611538611496565b60405281815282820160200187101561154f575f5ffd5b816020840160208301375f602083830101528093505050509250929050565b5f6020828403121561157e575f5ffd5b5035919050565b80151581146105d2575f5ffd5b5f5f604083850312156115a3575f5ffd5b6115ac83611428565b915060208301356115bc81611585565b809150509250929050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b808201808211156113045761130461165f565b5f60208284031215611696575f5ffd5b5051919050565b80820281158282048414176113045761130461165f565b5f826116ce57634e487b7160e01b5f52601260045260245ffd5b500490565b5f602082840312156116e3575f5ffd5b81516116ee81611585565b9392505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b5f82518060208501845e5f920191825250919050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f8301168401019150509291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122014154bc1a730c437002c3b27c2a6e7d1e28017e979535df8f7e551e48ff2820c64736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xDD JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320696E697469 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x616C697A696E67 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0xFF SWAP1 DUP2 AND EQ PUSH2 0xDB JUMPI PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0xFF SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1808 PUSH2 0x111 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x502 ADD MSTORE DUP2 DUP2 PUSH2 0x542 ADD MSTORE DUP2 DUP2 PUSH2 0x5DF ADD MSTORE DUP2 DUP2 PUSH2 0x61F ADD MSTORE PUSH2 0x6B0 ADD MSTORE PUSH2 0x1808 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AC10901 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xA59F3E0C GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA59F3E0C EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xB3D6E119 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xE0CEF1B0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6AC10901 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x91DB7B0D EQ PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3B0E0133 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x3B0E0133 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x67DFD4C9 EQ PUSH2 0x20D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xC8E32D2 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x323BF9F0 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xCB PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x171 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x14AA JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x6A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x156E JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x171 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0xA23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x156E JUMP JUMPDEST PUSH2 0xA36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x156E JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0xCD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x32B JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x344 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x344 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x3D5 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616C76612061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642078414C56412061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xCA DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xCD DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x588 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x5B7 DUP2 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x5D2 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x665 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x694 DUP3 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x6A0 DUP3 DUP3 PUSH1 0x1 PUSH2 0xF95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x213630B1B5A634B9BA32B2102AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0xCD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x43616E206E6F7420756E5374616B65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x8EC SWAP1 DUP6 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0xCA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x950 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x962 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0xC9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x16D3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xA2B PUSH2 0x1104 JUMP JUMPDEST PUSH2 0xA34 PUSH0 PUSH2 0x115E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA3E PUSH2 0x1104 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xF814EAFA160E3546FC1EA6B8939A578EF5F64D31E04888BCD82E8CD9F9EC2909 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xCD SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x213630B1B5A634B9BA32B2102AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB1B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3F SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xCA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB6 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0xBC3 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0xC83 JUMPI PUSH1 0xCA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC1F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC31 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC3C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP5 PUSH1 0x40 MLOAD PUSH2 0xC76 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xD54 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xC8F DUP4 DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0xC99 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0xCA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD05 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD10 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0xD4A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0xC9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0xD7D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x16D3 JUMP JUMPDEST PUSH2 0xDF9 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 ISZERO ISZERO PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO SUB PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x416C726561647920696E2073616D6520737461747573 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x2F2EA19E5340217456E8ECB94895965BA2AFA084E4A94F9FC7C315B1478243B7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xECB PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x5D2 DUP2 PUSH2 0x115E JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0xA34 PUSH2 0x11AF JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0x1104 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFCD JUMPI PUSH2 0xFC8 DUP4 PUSH2 0x11DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1027 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1024 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 EQ PUSH2 0x10F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST POP PUSH2 0xFC8 DUP4 DUP4 DUP4 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0xA34 CALLER PUSH2 0x115E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1282 DUP4 PUSH2 0x129D JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x128E JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xFC8 JUMPI PUSH2 0x4F2 DUP4 DUP4 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x12A6 DUP2 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1301 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17AC PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x130A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1374 DUP7 DUP4 DUP4 DUP8 PUSH2 0x137E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13EC JUMPI DUP3 MLOAD PUSH0 SUB PUSH2 0x13E5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST POP DUP2 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x13F6 DUP4 DUP4 PUSH2 0x13FE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x140E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1756 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x143E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1301 DUP3 PUSH2 0x1428 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x146E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1477 DUP5 PUSH2 0x1428 JUMP JUMPDEST SWAP3 POP PUSH2 0x1485 PUSH1 0x20 DUP6 ADD PUSH2 0x1428 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14C4 DUP4 PUSH2 0x1428 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x14EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1509 JUMPI PUSH2 0x1509 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1538 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x154F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15AC DUP4 PUSH2 0x1428 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x15BC DUP2 PUSH2 0x1585 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1304 JUMPI PUSH2 0x1304 PUSH2 0x165F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1304 JUMPI PUSH2 0x1304 PUSH2 0x165F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x16CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16EE DUP2 PUSH2 0x1585 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122014 ISZERO 0x4B 0xC1 0xA7 ADDRESS 0xC4 CALLDATACOPY STOP 0x2C EXTCODESIZE 0x27 0xC2 0xA6 SWAPN 0xD1 0xE2 DUP1 OR 0xE9 PUSH26 0x535DF8F7E551E48FF2820C64736F6C634300081E003300000000 ",
							"sourceMap": "323:3189:10:-:0;;;1198:4:6;1155:48;;902:53:10;;;;;;;;;-1:-1:-1;926:22:10;:20;:22::i;:::-;323:3189;;5939:280:5;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:5;;216:2:12;5998:66:5;;;198:21:12;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:12;;;338:37;392:19;;5998:66:5;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:5;6140:15;6125:30;;;;;;6174:28;;564:36:12;;;6174:28:5;;552:2:12;537:18;6174:28:5;;;;;;;6074:139;5939:280::o;422:184:12:-;323:3189:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ALVA_1310": {
									"entryPoint": null,
									"id": 1310,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_27": {
									"entryPoint": 3897,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_38": {
									"entryPoint": 4527,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_731": {
									"entryPoint": 3943,
									"id": 731,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_1638": {
									"entryPoint": 3981,
									"id": 1638,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkOwner_69": {
									"entryPoint": 4356,
									"id": 69,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getImplementation_209": {
									"entryPoint": null,
									"id": 209,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1162": {
									"entryPoint": null,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1133": {
									"entryPoint": 5118,
									"id": 1133,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_233": {
									"entryPoint": 4574,
									"id": 233,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_126": {
									"entryPoint": 4446,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_331": {
									"entryPoint": 3989,
									"id": 331,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_278": {
									"entryPoint": 4729,
									"id": 278,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeTo_248": {
									"entryPoint": 4765,
									"id": 248,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@blackListAddress_1321": {
									"entryPoint": null,
									"id": 1321,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@blackListUser_1612": {
									"entryPoint": 3569,
									"id": 1612,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@enter_1508": {
									"entryPoint": 2687,
									"id": 1508,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_1021": {
									"entryPoint": 4828,
									"id": 1021,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_1050": {
									"entryPoint": 4874,
									"id": 1050,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_1217": {
									"entryPoint": null,
									"id": 1217,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getBooleanSlot_1228": {
									"entryPoint": null,
									"id": 1228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@initialize_1409": {
									"entryPoint": 781,
									"id": 1409,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isContract_822": {
									"entryPoint": null,
									"id": 822,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@leave_1581": {
									"entryPoint": 1877,
									"id": 1581,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@lockedPeriod_1323": {
									"entryPoint": null,
									"id": 1323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_55": {
									"entryPoint": null,
									"id": 55,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_749": {
									"entryPoint": 1700,
									"id": 749,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_83": {
									"entryPoint": 2595,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_106": {
									"entryPoint": 3779,
									"id": 106,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateLockPeriod_1629": {
									"entryPoint": 2614,
									"id": 1629,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_792": {
									"entryPoint": 1493,
									"id": 792,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeTo_771": {
									"entryPoint": 1272,
									"id": 771,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userLockPeriod_1317": {
									"entryPoint": null,
									"id": 1317,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1089": {
									"entryPoint": 4990,
									"id": 1089,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@xALVA_1313": {
									"entryPoint": null,
									"id": 1313,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 5290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5486,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5766,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1718__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5974,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5270,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 5509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13167:12",
										"nodeType": "YulBlock",
										"src": "0:13167:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:12",
													"nodeType": "YulBlock",
													"src": "63:124:12",
													"statements": [
														{
															"nativeSrc": "73:29:12",
															"nodeType": "YulAssignment",
															"src": "73:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:12"
																},
																"nativeSrc": "82:20:12",
																"nodeType": "YulFunctionCall",
																"src": "82:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:12",
																"nodeType": "YulBlock",
																"src": "165:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:12",
																					"nodeType": "YulLiteral",
																					"src": "174:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:12",
																					"nodeType": "YulLiteral",
																					"src": "177:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:12"
																			},
																			"nativeSrc": "167:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:12"
																		},
																		"nativeSrc": "167:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:12",
																										"nodeType": "YulLiteral",
																										"src": "150:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:12",
																										"nodeType": "YulLiteral",
																										"src": "155:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:12"
																								},
																								"nativeSrc": "146:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:12",
																								"nodeType": "YulLiteral",
																								"src": "159:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:12"
																						},
																						"nativeSrc": "142:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:12"
																				},
																				"nativeSrc": "131:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:12"
																		},
																		"nativeSrc": "121:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:12"
																},
																"nativeSrc": "114:50:12",
																"nodeType": "YulFunctionCall",
																"src": "114:50:12"
															},
															"nativeSrc": "111:70:12",
															"nodeType": "YulIf",
															"src": "111:70:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:12",
														"nodeType": "YulTypedName",
														"src": "42:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:12",
														"nodeType": "YulTypedName",
														"src": "53:5:12",
														"type": ""
													}
												],
												"src": "14:173:12"
											},
											{
												"body": {
													"nativeSrc": "262:116:12",
													"nodeType": "YulBlock",
													"src": "262:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:12",
																"nodeType": "YulBlock",
																"src": "308:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:12",
																					"nodeType": "YulLiteral",
																					"src": "317:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:12",
																					"nodeType": "YulLiteral",
																					"src": "320:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:12"
																			},
																			"nativeSrc": "310:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:12"
																		},
																		"nativeSrc": "310:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:12"
																		},
																		"nativeSrc": "279:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:12",
																		"nodeType": "YulLiteral",
																		"src": "304:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:12"
																},
																"nativeSrc": "275:32:12",
																"nodeType": "YulFunctionCall",
																"src": "275:32:12"
															},
															"nativeSrc": "272:52:12",
															"nodeType": "YulIf",
															"src": "272:52:12"
														},
														{
															"nativeSrc": "333:39:12",
															"nodeType": "YulAssignment",
															"src": "333:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:12"
																},
																"nativeSrc": "343:29:12",
																"nodeType": "YulFunctionCall",
																"src": "343:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:12",
														"nodeType": "YulTypedName",
														"src": "228:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:12",
														"nodeType": "YulTypedName",
														"src": "239:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:12",
														"nodeType": "YulTypedName",
														"src": "251:6:12",
														"type": ""
													}
												],
												"src": "192:186:12"
											},
											{
												"body": {
													"nativeSrc": "484:76:12",
													"nodeType": "YulBlock",
													"src": "484:76:12",
													"statements": [
														{
															"nativeSrc": "494:26:12",
															"nodeType": "YulAssignment",
															"src": "494:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:12",
																		"nodeType": "YulLiteral",
																		"src": "517:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:12"
																},
																"nativeSrc": "502:18:12",
																"nodeType": "YulFunctionCall",
																"src": "502:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "536:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "547:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "529:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:12"
																},
																"nativeSrc": "529:25:12",
																"nodeType": "YulFunctionCall",
																"src": "529:25:12"
															},
															"nativeSrc": "529:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "529:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "383:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "453:9:12",
														"nodeType": "YulTypedName",
														"src": "453:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "464:6:12",
														"nodeType": "YulTypedName",
														"src": "464:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "475:4:12",
														"nodeType": "YulTypedName",
														"src": "475:4:12",
														"type": ""
													}
												],
												"src": "383:177:12"
											},
											{
												"body": {
													"nativeSrc": "669:270:12",
													"nodeType": "YulBlock",
													"src": "669:270:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "715:16:12",
																"nodeType": "YulBlock",
																"src": "715:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "724:1:12",
																					"nodeType": "YulLiteral",
																					"src": "724:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:12",
																					"nodeType": "YulLiteral",
																					"src": "727:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "717:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "717:6:12"
																			},
																			"nativeSrc": "717:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "717:12:12"
																		},
																		"nativeSrc": "717:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "717:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "690:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "690:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "699:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "699:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "686:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "686:3:12"
																		},
																		"nativeSrc": "686:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "686:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "711:2:12",
																		"nodeType": "YulLiteral",
																		"src": "711:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "682:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "682:3:12"
																},
																"nativeSrc": "682:32:12",
																"nodeType": "YulFunctionCall",
																"src": "682:32:12"
															},
															"nativeSrc": "679:52:12",
															"nodeType": "YulIf",
															"src": "679:52:12"
														},
														{
															"nativeSrc": "740:39:12",
															"nodeType": "YulAssignment",
															"src": "740:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "769:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "769:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "750:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "750:18:12"
																},
																"nativeSrc": "750:29:12",
																"nodeType": "YulFunctionCall",
																"src": "750:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "740:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "740:6:12"
																}
															]
														},
														{
															"nativeSrc": "788:48:12",
															"nodeType": "YulAssignment",
															"src": "788:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "821:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "821:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "832:2:12",
																				"nodeType": "YulLiteral",
																				"src": "832:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "817:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "817:3:12"
																		},
																		"nativeSrc": "817:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "817:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "798:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "798:18:12"
																},
																"nativeSrc": "798:38:12",
																"nodeType": "YulFunctionCall",
																"src": "798:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "788:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "788:6:12"
																}
															]
														},
														{
															"nativeSrc": "845:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "845:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "858:1:12",
																"nodeType": "YulLiteral",
																"src": "858:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "849:5:12",
																	"nodeType": "YulTypedName",
																	"src": "849:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "868:41:12",
															"nodeType": "YulAssignment",
															"src": "868:41:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "894:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "894:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "905:2:12",
																				"nodeType": "YulLiteral",
																				"src": "905:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "890:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "890:3:12"
																		},
																		"nativeSrc": "890:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "890:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "877:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "877:12:12"
																},
																"nativeSrc": "877:32:12",
																"nodeType": "YulFunctionCall",
																"src": "877:32:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "868:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "868:5:12"
																}
															]
														},
														{
															"nativeSrc": "918:15:12",
															"nodeType": "YulAssignment",
															"src": "918:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "928:5:12",
																"nodeType": "YulIdentifier",
																"src": "928:5:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "918:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "565:374:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "619:9:12",
														"nodeType": "YulTypedName",
														"src": "619:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "630:7:12",
														"nodeType": "YulTypedName",
														"src": "630:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "642:6:12",
														"nodeType": "YulTypedName",
														"src": "642:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "650:6:12",
														"nodeType": "YulTypedName",
														"src": "650:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "658:6:12",
														"nodeType": "YulTypedName",
														"src": "658:6:12",
														"type": ""
													}
												],
												"src": "565:374:12"
											},
											{
												"body": {
													"nativeSrc": "1060:102:12",
													"nodeType": "YulBlock",
													"src": "1060:102:12",
													"statements": [
														{
															"nativeSrc": "1070:26:12",
															"nodeType": "YulAssignment",
															"src": "1070:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1082:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1082:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1093:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1093:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1078:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1078:3:12"
																},
																"nativeSrc": "1078:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1078:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1070:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1112:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1112:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1127:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1127:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1143:3:12",
																								"nodeType": "YulLiteral",
																								"src": "1143:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1148:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1139:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1139:3:12"
																						},
																						"nativeSrc": "1139:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1139:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1152:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1152:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1135:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1135:3:12"
																				},
																				"nativeSrc": "1135:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1135:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1123:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:12"
																		},
																		"nativeSrc": "1123:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1123:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1105:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1105:6:12"
																},
																"nativeSrc": "1105:51:12",
																"nodeType": "YulFunctionCall",
																"src": "1105:51:12"
															},
															"nativeSrc": "1105:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "1105:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1718__to_t_address__fromStack_reversed",
												"nativeSrc": "944:218:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1029:9:12",
														"nodeType": "YulTypedName",
														"src": "1029:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1040:6:12",
														"nodeType": "YulTypedName",
														"src": "1040:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1051:4:12",
														"nodeType": "YulTypedName",
														"src": "1051:4:12",
														"type": ""
													}
												],
												"src": "944:218:12"
											},
											{
												"body": {
													"nativeSrc": "1262:92:12",
													"nodeType": "YulBlock",
													"src": "1262:92:12",
													"statements": [
														{
															"nativeSrc": "1272:26:12",
															"nodeType": "YulAssignment",
															"src": "1272:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1284:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1284:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1295:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1295:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1280:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1280:3:12"
																},
																"nativeSrc": "1280:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1280:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1272:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1272:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1314:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1314:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1339:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1339:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1332:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1332:6:12"
																				},
																				"nativeSrc": "1332:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1332:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1325:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1325:6:12"
																		},
																		"nativeSrc": "1325:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1325:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1307:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1307:6:12"
																},
																"nativeSrc": "1307:41:12",
																"nodeType": "YulFunctionCall",
																"src": "1307:41:12"
															},
															"nativeSrc": "1307:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "1307:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1167:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1231:9:12",
														"nodeType": "YulTypedName",
														"src": "1231:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1242:6:12",
														"nodeType": "YulTypedName",
														"src": "1242:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1253:4:12",
														"nodeType": "YulTypedName",
														"src": "1253:4:12",
														"type": ""
													}
												],
												"src": "1167:187:12"
											},
											{
												"body": {
													"nativeSrc": "1391:95:12",
													"nodeType": "YulBlock",
													"src": "1391:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1408:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1408:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1415:3:12",
																				"nodeType": "YulLiteral",
																				"src": "1415:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1420:10:12",
																				"nodeType": "YulLiteral",
																				"src": "1420:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1411:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1411:3:12"
																		},
																		"nativeSrc": "1411:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1411:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1401:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:12"
																},
																"nativeSrc": "1401:31:12",
																"nodeType": "YulFunctionCall",
																"src": "1401:31:12"
															},
															"nativeSrc": "1401:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "1401:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1448:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1451:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1451:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1441:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1441:6:12"
																},
																"nativeSrc": "1441:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1441:15:12"
															},
															"nativeSrc": "1441:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1441:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1472:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1472:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1475:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1475:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1465:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1465:6:12"
																},
																"nativeSrc": "1465:15:12",
																"nodeType": "YulFunctionCall",
																"src": "1465:15:12"
															},
															"nativeSrc": "1465:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "1465:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1359:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1359:127:12"
											},
											{
												"body": {
													"nativeSrc": "1587:922:12",
													"nodeType": "YulBlock",
													"src": "1587:922:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1633:16:12",
																"nodeType": "YulBlock",
																"src": "1633:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1642:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1642:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1645:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1645:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1635:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1635:6:12"
																			},
																			"nativeSrc": "1635:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1635:12:12"
																		},
																		"nativeSrc": "1635:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1635:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1608:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1608:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1617:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1617:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1604:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1604:3:12"
																		},
																		"nativeSrc": "1604:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1604:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1629:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1629:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1600:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1600:3:12"
																},
																"nativeSrc": "1600:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1600:32:12"
															},
															"nativeSrc": "1597:52:12",
															"nodeType": "YulIf",
															"src": "1597:52:12"
														},
														{
															"nativeSrc": "1658:39:12",
															"nodeType": "YulAssignment",
															"src": "1658:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1687:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1687:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1668:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1668:18:12"
																},
																"nativeSrc": "1668:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1668:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1658:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:12"
																}
															]
														},
														{
															"nativeSrc": "1706:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1706:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1737:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1737:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1748:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1748:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1733:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1733:3:12"
																		},
																		"nativeSrc": "1733:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1733:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1720:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1720:12:12"
																},
																"nativeSrc": "1720:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1720:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1710:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1710:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1795:16:12",
																"nodeType": "YulBlock",
																"src": "1795:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1804:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1804:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1807:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1797:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1797:6:12"
																			},
																			"nativeSrc": "1797:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1797:12:12"
																		},
																		"nativeSrc": "1797:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1797:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1767:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1767:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1775:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1775:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1764:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1764:2:12"
																},
																"nativeSrc": "1764:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1764:30:12"
															},
															"nativeSrc": "1761:50:12",
															"nodeType": "YulIf",
															"src": "1761:50:12"
														},
														{
															"nativeSrc": "1820:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1820:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1834:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1834:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1845:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1845:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1830:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1830:3:12"
																},
																"nativeSrc": "1830:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1830:22:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1824:2:12",
																	"nodeType": "YulTypedName",
																	"src": "1824:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1900:16:12",
																"nodeType": "YulBlock",
																"src": "1900:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1909:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1909:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1902:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1902:6:12"
																			},
																			"nativeSrc": "1902:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1902:12:12"
																		},
																		"nativeSrc": "1902:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1902:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1879:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1879:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1883:4:12",
																						"nodeType": "YulLiteral",
																						"src": "1883:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1875:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1875:3:12"
																				},
																				"nativeSrc": "1875:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1875:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1890:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1890:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1871:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:12"
																		},
																		"nativeSrc": "1871:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1864:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1864:6:12"
																},
																"nativeSrc": "1864:35:12",
																"nodeType": "YulFunctionCall",
																"src": "1864:35:12"
															},
															"nativeSrc": "1861:55:12",
															"nodeType": "YulIf",
															"src": "1861:55:12"
														},
														{
															"nativeSrc": "1925:30:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1925:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1952:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "1952:2:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1939:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1939:12:12"
																},
																"nativeSrc": "1939:16:12",
																"nodeType": "YulFunctionCall",
																"src": "1939:16:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1929:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1929:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1998:22:12",
																"nodeType": "YulBlock",
																"src": "1998:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2000:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2000:16:12"
																			},
																			"nativeSrc": "2000:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2000:18:12"
																		},
																		"nativeSrc": "2000:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2000:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1970:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1970:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1978:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1978:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1967:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1967:2:12"
																},
																"nativeSrc": "1967:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1967:30:12"
															},
															"nativeSrc": "1964:56:12",
															"nodeType": "YulIf",
															"src": "1964:56:12"
														},
														{
															"nativeSrc": "2029:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2029:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2049:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2043:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2043:5:12"
																},
																"nativeSrc": "2043:9:12",
																"nodeType": "YulFunctionCall",
																"src": "2043:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2033:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2033:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2061:85:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2061:85:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2083:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2083:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "2107:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2107:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2115:4:12",
																										"nodeType": "YulLiteral",
																										"src": "2115:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2103:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2103:3:12"
																								},
																								"nativeSrc": "2103:17:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2103:17:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2126:2:12",
																										"nodeType": "YulLiteral",
																										"src": "2126:2:12",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2122:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2122:3:12"
																								},
																								"nativeSrc": "2122:7:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2122:7:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2099:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2099:3:12"
																						},
																						"nativeSrc": "2099:31:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2099:31:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2132:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2132:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2095:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2095:3:12"
																				},
																				"nativeSrc": "2095:40:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2095:40:12"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2141:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2141:2:12",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2137:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2137:3:12"
																				},
																				"nativeSrc": "2137:7:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2137:7:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2091:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2091:3:12"
																		},
																		"nativeSrc": "2091:54:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:54:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2079:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2079:3:12"
																},
																"nativeSrc": "2079:67:12",
																"nodeType": "YulFunctionCall",
																"src": "2079:67:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2065:10:12",
																	"nodeType": "YulTypedName",
																	"src": "2065:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2221:22:12",
																"nodeType": "YulBlock",
																"src": "2221:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2223:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2223:16:12"
																			},
																			"nativeSrc": "2223:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2223:18:12"
																		},
																		"nativeSrc": "2223:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2223:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2164:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2164:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2176:18:12",
																				"nodeType": "YulLiteral",
																				"src": "2176:18:12",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2161:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2161:2:12"
																		},
																		"nativeSrc": "2161:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2161:34:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2200:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "2200:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2212:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2212:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2197:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2197:2:12"
																		},
																		"nativeSrc": "2197:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2197:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2158:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2158:2:12"
																},
																"nativeSrc": "2158:62:12",
																"nodeType": "YulFunctionCall",
																"src": "2158:62:12"
															},
															"nativeSrc": "2155:88:12",
															"nodeType": "YulIf",
															"src": "2155:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2259:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2259:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2263:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "2263:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2252:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2252:6:12"
																},
																"nativeSrc": "2252:22:12",
																"nodeType": "YulFunctionCall",
																"src": "2252:22:12"
															},
															"nativeSrc": "2252:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "2252:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2290:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2290:6:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2298:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2298:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2283:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2283:6:12"
																},
																"nativeSrc": "2283:22:12",
																"nodeType": "YulFunctionCall",
																"src": "2283:22:12"
															},
															"nativeSrc": "2283:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "2283:22:12"
														},
														{
															"body": {
																"nativeSrc": "2355:16:12",
																"nodeType": "YulBlock",
																"src": "2355:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2364:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2364:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2367:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2367:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2357:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2357:6:12"
																			},
																			"nativeSrc": "2357:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2357:12:12"
																		},
																		"nativeSrc": "2357:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2357:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "2328:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2328:2:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2332:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2332:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2324:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2324:3:12"
																				},
																				"nativeSrc": "2324:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2324:15:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2320:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2320:3:12"
																		},
																		"nativeSrc": "2320:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2320:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2346:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "2346:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2317:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2317:2:12"
																},
																"nativeSrc": "2317:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2317:37:12"
															},
															"nativeSrc": "2314:57:12",
															"nodeType": "YulIf",
															"src": "2314:57:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2397:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2397:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2405:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2405:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2393:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2393:3:12"
																		},
																		"nativeSrc": "2393:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2393:15:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "2414:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2414:2:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2418:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2418:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2410:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2410:3:12"
																		},
																		"nativeSrc": "2410:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2410:11:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2423:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2423:6:12"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2380:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:12"
																},
																"nativeSrc": "2380:50:12",
																"nodeType": "YulFunctionCall",
																"src": "2380:50:12"
															},
															"nativeSrc": "2380:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "2380:50:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2454:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2454:6:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "2462:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2462:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2450:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2450:3:12"
																				},
																				"nativeSrc": "2450:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2450:19:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2471:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2471:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2446:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2446:3:12"
																		},
																		"nativeSrc": "2446:28:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2446:28:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2476:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2476:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2439:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2439:6:12"
																},
																"nativeSrc": "2439:39:12",
																"nodeType": "YulFunctionCall",
																"src": "2439:39:12"
															},
															"nativeSrc": "2439:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "2439:39:12"
														},
														{
															"nativeSrc": "2487:16:12",
															"nodeType": "YulAssignment",
															"src": "2487:16:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2497:6:12",
																"nodeType": "YulIdentifier",
																"src": "2497:6:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2487:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2487:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "1491:1018:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1545:9:12",
														"nodeType": "YulTypedName",
														"src": "1545:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1556:7:12",
														"nodeType": "YulTypedName",
														"src": "1556:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1568:6:12",
														"nodeType": "YulTypedName",
														"src": "1568:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1576:6:12",
														"nodeType": "YulTypedName",
														"src": "1576:6:12",
														"type": ""
													}
												],
												"src": "1491:1018:12"
											},
											{
												"body": {
													"nativeSrc": "2615:76:12",
													"nodeType": "YulBlock",
													"src": "2615:76:12",
													"statements": [
														{
															"nativeSrc": "2625:26:12",
															"nodeType": "YulAssignment",
															"src": "2625:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2637:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2637:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2648:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2648:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2633:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2633:3:12"
																},
																"nativeSrc": "2633:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2633:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2625:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2625:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2667:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2667:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2678:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2678:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2660:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2660:6:12"
																},
																"nativeSrc": "2660:25:12",
																"nodeType": "YulFunctionCall",
																"src": "2660:25:12"
															},
															"nativeSrc": "2660:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "2660:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2514:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:12",
														"nodeType": "YulTypedName",
														"src": "2584:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2595:6:12",
														"nodeType": "YulTypedName",
														"src": "2595:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2606:4:12",
														"nodeType": "YulTypedName",
														"src": "2606:4:12",
														"type": ""
													}
												],
												"src": "2514:177:12"
											},
											{
												"body": {
													"nativeSrc": "2766:156:12",
													"nodeType": "YulBlock",
													"src": "2766:156:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2812:16:12",
																"nodeType": "YulBlock",
																"src": "2812:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2821:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2821:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2824:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2824:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2814:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2814:6:12"
																			},
																			"nativeSrc": "2814:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2814:12:12"
																		},
																		"nativeSrc": "2814:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2814:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2787:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2787:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2796:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2796:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2783:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2783:3:12"
																		},
																		"nativeSrc": "2783:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2783:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2808:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2808:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2779:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:12"
																},
																"nativeSrc": "2779:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2779:32:12"
															},
															"nativeSrc": "2776:52:12",
															"nodeType": "YulIf",
															"src": "2776:52:12"
														},
														{
															"nativeSrc": "2837:14:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2837:14:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2850:1:12",
																"nodeType": "YulLiteral",
																"src": "2850:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2841:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2841:5:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2860:32:12",
															"nodeType": "YulAssignment",
															"src": "2860:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2882:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2882:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2869:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2869:12:12"
																},
																"nativeSrc": "2869:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2869:23:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2860:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2860:5:12"
																}
															]
														},
														{
															"nativeSrc": "2901:15:12",
															"nodeType": "YulAssignment",
															"src": "2901:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "2911:5:12",
																"nodeType": "YulIdentifier",
																"src": "2911:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2901:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2901:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2696:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2732:9:12",
														"nodeType": "YulTypedName",
														"src": "2732:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2743:7:12",
														"nodeType": "YulTypedName",
														"src": "2743:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2755:6:12",
														"nodeType": "YulTypedName",
														"src": "2755:6:12",
														"type": ""
													}
												],
												"src": "2696:226:12"
											},
											{
												"body": {
													"nativeSrc": "3028:102:12",
													"nodeType": "YulBlock",
													"src": "3028:102:12",
													"statements": [
														{
															"nativeSrc": "3038:26:12",
															"nodeType": "YulAssignment",
															"src": "3038:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3050:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3050:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3061:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3061:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3046:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3046:3:12"
																},
																"nativeSrc": "3046:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3046:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3038:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3038:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3080:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3080:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3095:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3095:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3111:3:12",
																								"nodeType": "YulLiteral",
																								"src": "3111:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3116:1:12",
																								"nodeType": "YulLiteral",
																								"src": "3116:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3107:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3107:3:12"
																						},
																						"nativeSrc": "3107:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3107:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3120:1:12",
																						"nodeType": "YulLiteral",
																						"src": "3120:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3103:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3103:3:12"
																				},
																				"nativeSrc": "3103:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3103:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3091:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3091:3:12"
																		},
																		"nativeSrc": "3091:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3073:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:12"
																},
																"nativeSrc": "3073:51:12",
																"nodeType": "YulFunctionCall",
																"src": "3073:51:12"
															},
															"nativeSrc": "3073:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "3073:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2927:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2997:9:12",
														"nodeType": "YulTypedName",
														"src": "2997:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3008:6:12",
														"nodeType": "YulTypedName",
														"src": "3008:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3019:4:12",
														"nodeType": "YulTypedName",
														"src": "3019:4:12",
														"type": ""
													}
												],
												"src": "2927:203:12"
											},
											{
												"body": {
													"nativeSrc": "3177:76:12",
													"nodeType": "YulBlock",
													"src": "3177:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3231:16:12",
																"nodeType": "YulBlock",
																"src": "3231:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3240:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3240:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3243:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3243:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3233:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3233:6:12"
																			},
																			"nativeSrc": "3233:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3233:12:12"
																		},
																		"nativeSrc": "3233:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3233:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3200:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3200:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3221:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "3221:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3214:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3214:6:12"
																						},
																						"nativeSrc": "3214:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3214:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3207:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3207:6:12"
																				},
																				"nativeSrc": "3207:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3207:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3197:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3197:2:12"
																		},
																		"nativeSrc": "3197:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3197:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3190:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3190:6:12"
																},
																"nativeSrc": "3190:40:12",
																"nodeType": "YulFunctionCall",
																"src": "3190:40:12"
															},
															"nativeSrc": "3187:60:12",
															"nodeType": "YulIf",
															"src": "3187:60:12"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "3135:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3166:5:12",
														"nodeType": "YulTypedName",
														"src": "3166:5:12",
														"type": ""
													}
												],
												"src": "3135:118:12"
											},
											{
												"body": {
													"nativeSrc": "3342:231:12",
													"nodeType": "YulBlock",
													"src": "3342:231:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3388:16:12",
																"nodeType": "YulBlock",
																"src": "3388:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3397:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3397:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3400:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3400:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3390:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3390:6:12"
																			},
																			"nativeSrc": "3390:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3390:12:12"
																		},
																		"nativeSrc": "3390:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3390:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3363:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3363:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3372:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3372:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3359:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:12"
																		},
																		"nativeSrc": "3359:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3359:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3384:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3384:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3355:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3355:3:12"
																},
																"nativeSrc": "3355:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3355:32:12"
															},
															"nativeSrc": "3352:52:12",
															"nodeType": "YulIf",
															"src": "3352:52:12"
														},
														{
															"nativeSrc": "3413:39:12",
															"nodeType": "YulAssignment",
															"src": "3413:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3442:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3442:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3423:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3423:18:12"
																},
																"nativeSrc": "3423:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3423:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3413:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3413:6:12"
																}
															]
														},
														{
															"nativeSrc": "3461:45:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3461:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3502:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3502:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3487:3:12"
																		},
																		"nativeSrc": "3487:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3487:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3474:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3474:12:12"
																},
																"nativeSrc": "3474:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3474:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3465:5:12",
																	"nodeType": "YulTypedName",
																	"src": "3465:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3537:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3537:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "3515:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "3515:21:12"
																},
																"nativeSrc": "3515:28:12",
																"nodeType": "YulFunctionCall",
																"src": "3515:28:12"
															},
															"nativeSrc": "3515:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "3515:28:12"
														},
														{
															"nativeSrc": "3552:15:12",
															"nodeType": "YulAssignment",
															"src": "3552:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "3562:5:12",
																"nodeType": "YulIdentifier",
																"src": "3562:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3552:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3552:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3258:315:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3300:9:12",
														"nodeType": "YulTypedName",
														"src": "3300:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3311:7:12",
														"nodeType": "YulTypedName",
														"src": "3311:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3323:6:12",
														"nodeType": "YulTypedName",
														"src": "3323:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3331:6:12",
														"nodeType": "YulTypedName",
														"src": "3331:6:12",
														"type": ""
													}
												],
												"src": "3258:315:12"
											},
											{
												"body": {
													"nativeSrc": "3752:236:12",
													"nodeType": "YulBlock",
													"src": "3752:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3769:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3769:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3780:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3780:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3762:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3762:6:12"
																},
																"nativeSrc": "3762:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3762:21:12"
															},
															"nativeSrc": "3762:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "3762:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3803:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3803:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3814:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3814:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3799:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:12"
																		},
																		"nativeSrc": "3799:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3799:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3819:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3819:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3792:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3792:6:12"
																},
																"nativeSrc": "3792:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3792:30:12"
															},
															"nativeSrc": "3792:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "3792:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3842:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3842:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3853:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3853:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3838:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3838:3:12"
																		},
																		"nativeSrc": "3838:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3838:18:12"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nativeSrc": "3858:34:12",
																		"nodeType": "YulLiteral",
																		"src": "3858:34:12",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3831:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3831:6:12"
																},
																"nativeSrc": "3831:62:12",
																"nodeType": "YulFunctionCall",
																"src": "3831:62:12"
															},
															"nativeSrc": "3831:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "3831:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3913:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3913:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3924:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3924:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3909:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3909:3:12"
																		},
																		"nativeSrc": "3909:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3909:18:12"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "3929:16:12",
																		"nodeType": "YulLiteral",
																		"src": "3929:16:12",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3902:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3902:6:12"
																},
																"nativeSrc": "3902:44:12",
																"nodeType": "YulFunctionCall",
																"src": "3902:44:12"
															},
															"nativeSrc": "3902:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "3902:44:12"
														},
														{
															"nativeSrc": "3955:27:12",
															"nodeType": "YulAssignment",
															"src": "3955:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3967:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3967:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3978:3:12",
																		"nodeType": "YulLiteral",
																		"src": "3978:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3963:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3963:3:12"
																},
																"nativeSrc": "3963:19:12",
																"nodeType": "YulFunctionCall",
																"src": "3963:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3955:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3955:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3578:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3729:9:12",
														"nodeType": "YulTypedName",
														"src": "3729:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3743:4:12",
														"nodeType": "YulTypedName",
														"src": "3743:4:12",
														"type": ""
													}
												],
												"src": "3578:410:12"
											},
											{
												"body": {
													"nativeSrc": "4167:170:12",
													"nodeType": "YulBlock",
													"src": "4167:170:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4184:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4184:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4195:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4177:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4177:6:12"
																},
																"nativeSrc": "4177:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4177:21:12"
															},
															"nativeSrc": "4177:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "4177:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4218:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4218:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4229:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4229:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4214:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4214:3:12"
																		},
																		"nativeSrc": "4214:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4214:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4234:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4234:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4207:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4207:6:12"
																},
																"nativeSrc": "4207:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4207:30:12"
															},
															"nativeSrc": "4207:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4207:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4257:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4257:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4268:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4268:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4253:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4253:3:12"
																		},
																		"nativeSrc": "4253:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4253:18:12"
																	},
																	{
																		"hexValue": "496e76616c696420616c76612061646472657373",
																		"kind": "string",
																		"nativeSrc": "4273:22:12",
																		"nodeType": "YulLiteral",
																		"src": "4273:22:12",
																		"type": "",
																		"value": "Invalid alva address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4246:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4246:6:12"
																},
																"nativeSrc": "4246:50:12",
																"nodeType": "YulFunctionCall",
																"src": "4246:50:12"
															},
															"nativeSrc": "4246:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "4246:50:12"
														},
														{
															"nativeSrc": "4305:26:12",
															"nodeType": "YulAssignment",
															"src": "4305:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4317:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4317:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4328:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4328:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4313:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4313:3:12"
																},
																"nativeSrc": "4313:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4313:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4305:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4305:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3993:344:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4144:9:12",
														"nodeType": "YulTypedName",
														"src": "4144:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4158:4:12",
														"nodeType": "YulTypedName",
														"src": "4158:4:12",
														"type": ""
													}
												],
												"src": "3993:344:12"
											},
											{
												"body": {
													"nativeSrc": "4516:171:12",
													"nodeType": "YulBlock",
													"src": "4516:171:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4533:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4533:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4544:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4544:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4526:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4526:6:12"
																},
																"nativeSrc": "4526:21:12",
																"nodeType": "YulFunctionCall",
																"src": "4526:21:12"
															},
															"nativeSrc": "4526:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "4526:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4567:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4567:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4578:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4578:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4563:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4563:3:12"
																		},
																		"nativeSrc": "4563:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4563:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4583:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4583:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4556:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4556:6:12"
																},
																"nativeSrc": "4556:30:12",
																"nodeType": "YulFunctionCall",
																"src": "4556:30:12"
															},
															"nativeSrc": "4556:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "4556:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4606:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4606:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4617:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4617:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4602:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4602:3:12"
																		},
																		"nativeSrc": "4602:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4602:18:12"
																	},
																	{
																		"hexValue": "496e76616c69642078414c56412061646472657373",
																		"kind": "string",
																		"nativeSrc": "4622:23:12",
																		"nodeType": "YulLiteral",
																		"src": "4622:23:12",
																		"type": "",
																		"value": "Invalid xALVA address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4595:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4595:6:12"
																},
																"nativeSrc": "4595:51:12",
																"nodeType": "YulFunctionCall",
																"src": "4595:51:12"
															},
															"nativeSrc": "4595:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "4595:51:12"
														},
														{
															"nativeSrc": "4655:26:12",
															"nodeType": "YulAssignment",
															"src": "4655:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4667:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4667:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4678:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4678:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4663:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4663:3:12"
																},
																"nativeSrc": "4663:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4663:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4655:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4655:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4342:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4493:9:12",
														"nodeType": "YulTypedName",
														"src": "4493:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4507:4:12",
														"nodeType": "YulTypedName",
														"src": "4507:4:12",
														"type": ""
													}
												],
												"src": "4342:345:12"
											},
											{
												"body": {
													"nativeSrc": "4799:87:12",
													"nodeType": "YulBlock",
													"src": "4799:87:12",
													"statements": [
														{
															"nativeSrc": "4809:26:12",
															"nodeType": "YulAssignment",
															"src": "4809:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4821:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4821:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4832:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4832:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4817:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4817:3:12"
																},
																"nativeSrc": "4817:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4817:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4809:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4809:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4851:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4851:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4866:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4866:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4874:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4874:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4862:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4862:3:12"
																		},
																		"nativeSrc": "4862:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4862:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4844:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4844:6:12"
																},
																"nativeSrc": "4844:36:12",
																"nodeType": "YulFunctionCall",
																"src": "4844:36:12"
															},
															"nativeSrc": "4844:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "4844:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4692:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4768:9:12",
														"nodeType": "YulTypedName",
														"src": "4768:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4779:6:12",
														"nodeType": "YulTypedName",
														"src": "4779:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4790:4:12",
														"nodeType": "YulTypedName",
														"src": "4790:4:12",
														"type": ""
													}
												],
												"src": "4692:194:12"
											},
											{
												"body": {
													"nativeSrc": "5065:234:12",
													"nodeType": "YulBlock",
													"src": "5065:234:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5082:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5082:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5093:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5093:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5075:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5075:6:12"
																},
																"nativeSrc": "5075:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5075:21:12"
															},
															"nativeSrc": "5075:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5075:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5116:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5116:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5127:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5127:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5112:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5112:3:12"
																		},
																		"nativeSrc": "5112:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5112:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5132:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5132:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5105:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5105:6:12"
																},
																"nativeSrc": "5105:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5105:30:12"
															},
															"nativeSrc": "5105:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5105:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5155:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5155:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5166:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5166:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5151:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5151:3:12"
																		},
																		"nativeSrc": "5151:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5151:18:12"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nativeSrc": "5171:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5171:34:12",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5144:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5144:6:12"
																},
																"nativeSrc": "5144:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5144:62:12"
															},
															"nativeSrc": "5144:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5144:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5226:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5226:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5237:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5237:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5222:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5222:3:12"
																		},
																		"nativeSrc": "5222:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5222:18:12"
																	},
																	{
																		"hexValue": "64656c656761746563616c6c",
																		"kind": "string",
																		"nativeSrc": "5242:14:12",
																		"nodeType": "YulLiteral",
																		"src": "5242:14:12",
																		"type": "",
																		"value": "delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5215:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5215:6:12"
																},
																"nativeSrc": "5215:42:12",
																"nodeType": "YulFunctionCall",
																"src": "5215:42:12"
															},
															"nativeSrc": "5215:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "5215:42:12"
														},
														{
															"nativeSrc": "5266:27:12",
															"nodeType": "YulAssignment",
															"src": "5266:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5278:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5278:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5289:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5289:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5274:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5274:3:12"
																},
																"nativeSrc": "5274:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5274:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5266:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5266:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4891:408:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5042:9:12",
														"nodeType": "YulTypedName",
														"src": "5042:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5056:4:12",
														"nodeType": "YulTypedName",
														"src": "5056:4:12",
														"type": ""
													}
												],
												"src": "4891:408:12"
											},
											{
												"body": {
													"nativeSrc": "5478:234:12",
													"nodeType": "YulBlock",
													"src": "5478:234:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5495:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5495:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5506:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5506:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5488:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5488:6:12"
																},
																"nativeSrc": "5488:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5488:21:12"
															},
															"nativeSrc": "5488:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5488:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5529:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5529:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5540:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5540:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5525:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5525:3:12"
																		},
																		"nativeSrc": "5525:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5525:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5545:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5545:2:12",
																		"type": "",
																		"value": "44"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5518:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5518:6:12"
																},
																"nativeSrc": "5518:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5518:30:12"
															},
															"nativeSrc": "5518:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5518:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5568:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5568:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5579:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5579:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5564:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5564:3:12"
																		},
																		"nativeSrc": "5564:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5564:18:12"
																	},
																	{
																		"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f75676820",
																		"kind": "string",
																		"nativeSrc": "5584:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5584:34:12",
																		"type": "",
																		"value": "Function must be called through "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5557:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5557:6:12"
																},
																"nativeSrc": "5557:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5557:62:12"
															},
															"nativeSrc": "5557:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5557:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5639:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5639:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5650:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5650:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5635:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5635:3:12"
																		},
																		"nativeSrc": "5635:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5635:18:12"
																	},
																	{
																		"hexValue": "6163746976652070726f7879",
																		"kind": "string",
																		"nativeSrc": "5655:14:12",
																		"nodeType": "YulLiteral",
																		"src": "5655:14:12",
																		"type": "",
																		"value": "active proxy"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5628:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5628:6:12"
																},
																"nativeSrc": "5628:42:12",
																"nodeType": "YulFunctionCall",
																"src": "5628:42:12"
															},
															"nativeSrc": "5628:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "5628:42:12"
														},
														{
															"nativeSrc": "5679:27:12",
															"nodeType": "YulAssignment",
															"src": "5679:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5691:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5691:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5702:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5702:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5687:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5687:3:12"
																},
																"nativeSrc": "5687:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5687:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5679:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5679:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5304:408:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5455:9:12",
														"nodeType": "YulTypedName",
														"src": "5455:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5469:4:12",
														"nodeType": "YulTypedName",
														"src": "5469:4:12",
														"type": ""
													}
												],
												"src": "5304:408:12"
											},
											{
												"body": {
													"nativeSrc": "5891:246:12",
													"nodeType": "YulBlock",
													"src": "5891:246:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5908:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5908:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5919:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5919:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5901:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5901:6:12"
																},
																"nativeSrc": "5901:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5901:21:12"
															},
															"nativeSrc": "5901:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5901:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5942:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5942:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5953:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5953:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5938:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5938:3:12"
																		},
																		"nativeSrc": "5938:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5938:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5958:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5958:2:12",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5931:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5931:6:12"
																},
																"nativeSrc": "5931:30:12",
																"nodeType": "YulFunctionCall",
																"src": "5931:30:12"
															},
															"nativeSrc": "5931:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "5931:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5981:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5981:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5992:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5992:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5977:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5977:3:12"
																		},
																		"nativeSrc": "5977:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5977:18:12"
																	},
																	{
																		"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c",
																		"kind": "string",
																		"nativeSrc": "5997:34:12",
																		"nodeType": "YulLiteral",
																		"src": "5997:34:12",
																		"type": "",
																		"value": "UUPSUpgradeable: must not be cal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5970:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5970:6:12"
																},
																"nativeSrc": "5970:62:12",
																"nodeType": "YulFunctionCall",
																"src": "5970:62:12"
															},
															"nativeSrc": "5970:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "5970:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6052:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6052:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6063:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6063:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6048:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6048:3:12"
																		},
																		"nativeSrc": "6048:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6048:18:12"
																	},
																	{
																		"hexValue": "6c6564207468726f7567682064656c656761746563616c6c",
																		"kind": "string",
																		"nativeSrc": "6068:26:12",
																		"nodeType": "YulLiteral",
																		"src": "6068:26:12",
																		"type": "",
																		"value": "led through delegatecall"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6041:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6041:6:12"
																},
																"nativeSrc": "6041:54:12",
																"nodeType": "YulFunctionCall",
																"src": "6041:54:12"
															},
															"nativeSrc": "6041:54:12",
															"nodeType": "YulExpressionStatement",
															"src": "6041:54:12"
														},
														{
															"nativeSrc": "6104:27:12",
															"nodeType": "YulAssignment",
															"src": "6104:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6116:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6116:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6127:3:12",
																		"nodeType": "YulLiteral",
																		"src": "6127:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6112:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6112:3:12"
																},
																"nativeSrc": "6112:19:12",
																"nodeType": "YulFunctionCall",
																"src": "6112:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6104:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6104:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5717:420:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5868:9:12",
														"nodeType": "YulTypedName",
														"src": "5868:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5882:4:12",
														"nodeType": "YulTypedName",
														"src": "5882:4:12",
														"type": ""
													}
												],
												"src": "5717:420:12"
											},
											{
												"body": {
													"nativeSrc": "6316:166:12",
													"nodeType": "YulBlock",
													"src": "6316:166:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6333:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6333:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6344:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6344:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6326:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6326:6:12"
																},
																"nativeSrc": "6326:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6326:21:12"
															},
															"nativeSrc": "6326:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6326:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6367:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6367:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6378:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6378:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6363:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6363:3:12"
																		},
																		"nativeSrc": "6363:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6363:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6383:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6383:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6356:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6356:6:12"
																},
																"nativeSrc": "6356:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6356:30:12"
															},
															"nativeSrc": "6356:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6356:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6406:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6406:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6417:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6417:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6402:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6402:3:12"
																		},
																		"nativeSrc": "6402:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6402:18:12"
																	},
																	{
																		"hexValue": "426c61636b4c69737465642055736572",
																		"kind": "string",
																		"nativeSrc": "6422:18:12",
																		"nodeType": "YulLiteral",
																		"src": "6422:18:12",
																		"type": "",
																		"value": "BlackListed User"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6395:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6395:6:12"
																},
																"nativeSrc": "6395:46:12",
																"nodeType": "YulFunctionCall",
																"src": "6395:46:12"
															},
															"nativeSrc": "6395:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "6395:46:12"
														},
														{
															"nativeSrc": "6450:26:12",
															"nodeType": "YulAssignment",
															"src": "6450:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6462:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6462:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6473:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6458:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6458:3:12"
																},
																"nativeSrc": "6458:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6458:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6450:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6450:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6142:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:12",
														"nodeType": "YulTypedName",
														"src": "6293:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6307:4:12",
														"nodeType": "YulTypedName",
														"src": "6307:4:12",
														"type": ""
													}
												],
												"src": "6142:340:12"
											},
											{
												"body": {
													"nativeSrc": "6519:95:12",
													"nodeType": "YulBlock",
													"src": "6519:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6536:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6536:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6543:3:12",
																				"nodeType": "YulLiteral",
																				"src": "6543:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6548:10:12",
																				"nodeType": "YulLiteral",
																				"src": "6548:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6539:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6539:3:12"
																		},
																		"nativeSrc": "6539:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6539:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6529:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6529:6:12"
																},
																"nativeSrc": "6529:31:12",
																"nodeType": "YulFunctionCall",
																"src": "6529:31:12"
															},
															"nativeSrc": "6529:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "6529:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6576:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6576:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6579:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6579:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6569:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6569:6:12"
																},
																"nativeSrc": "6569:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6569:15:12"
															},
															"nativeSrc": "6569:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6569:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6600:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6600:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6603:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6603:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6593:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6593:6:12"
																},
																"nativeSrc": "6593:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6593:15:12"
															},
															"nativeSrc": "6593:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6593:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6487:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6487:127:12"
											},
											{
												"body": {
													"nativeSrc": "6667:77:12",
													"nodeType": "YulBlock",
													"src": "6667:77:12",
													"statements": [
														{
															"nativeSrc": "6677:16:12",
															"nodeType": "YulAssignment",
															"src": "6677:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6688:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6688:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6691:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6691:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6684:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6684:3:12"
																},
																"nativeSrc": "6684:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6684:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6677:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6677:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6716:22:12",
																"nodeType": "YulBlock",
																"src": "6716:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6718:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6718:16:12"
																			},
																			"nativeSrc": "6718:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6718:18:12"
																		},
																		"nativeSrc": "6718:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6718:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6708:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6708:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6711:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6711:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6705:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6705:2:12"
																},
																"nativeSrc": "6705:10:12",
																"nodeType": "YulFunctionCall",
																"src": "6705:10:12"
															},
															"nativeSrc": "6702:36:12",
															"nodeType": "YulIf",
															"src": "6702:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6619:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6650:1:12",
														"nodeType": "YulTypedName",
														"src": "6650:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6653:1:12",
														"nodeType": "YulTypedName",
														"src": "6653:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6659:3:12",
														"nodeType": "YulTypedName",
														"src": "6659:3:12",
														"type": ""
													}
												],
												"src": "6619:125:12"
											},
											{
												"body": {
													"nativeSrc": "6923:165:12",
													"nodeType": "YulBlock",
													"src": "6923:165:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6940:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6940:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6951:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6951:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6933:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6933:6:12"
																},
																"nativeSrc": "6933:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6933:21:12"
															},
															"nativeSrc": "6933:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6933:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6974:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6974:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6985:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6985:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6970:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6970:3:12"
																		},
																		"nativeSrc": "6970:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6970:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6990:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6990:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6963:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6963:6:12"
																},
																"nativeSrc": "6963:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6963:30:12"
															},
															"nativeSrc": "6963:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6963:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7013:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7013:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7024:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7024:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7009:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7009:3:12"
																		},
																		"nativeSrc": "7009:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7009:18:12"
																	},
																	{
																		"hexValue": "43616e206e6f7420756e5374616b65",
																		"kind": "string",
																		"nativeSrc": "7029:17:12",
																		"nodeType": "YulLiteral",
																		"src": "7029:17:12",
																		"type": "",
																		"value": "Can not unStake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7002:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7002:6:12"
																},
																"nativeSrc": "7002:45:12",
																"nodeType": "YulFunctionCall",
																"src": "7002:45:12"
															},
															"nativeSrc": "7002:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "7002:45:12"
														},
														{
															"nativeSrc": "7056:26:12",
															"nodeType": "YulAssignment",
															"src": "7056:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7068:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7068:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7079:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7079:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7064:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7064:3:12"
																},
																"nativeSrc": "7064:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7064:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7056:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7056:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6749:339:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6900:9:12",
														"nodeType": "YulTypedName",
														"src": "6900:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6914:4:12",
														"nodeType": "YulTypedName",
														"src": "6914:4:12",
														"type": ""
													}
												],
												"src": "6749:339:12"
											},
											{
												"body": {
													"nativeSrc": "7174:103:12",
													"nodeType": "YulBlock",
													"src": "7174:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7220:16:12",
																"nodeType": "YulBlock",
																"src": "7220:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7229:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7229:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7232:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7232:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7222:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7222:6:12"
																			},
																			"nativeSrc": "7222:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7222:12:12"
																		},
																		"nativeSrc": "7222:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7222:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7195:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7195:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7204:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7204:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7191:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7191:3:12"
																		},
																		"nativeSrc": "7191:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7191:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7216:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7216:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7187:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7187:3:12"
																},
																"nativeSrc": "7187:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7187:32:12"
															},
															"nativeSrc": "7184:52:12",
															"nodeType": "YulIf",
															"src": "7184:52:12"
														},
														{
															"nativeSrc": "7245:26:12",
															"nodeType": "YulAssignment",
															"src": "7245:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7261:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7261:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7255:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7255:5:12"
																},
																"nativeSrc": "7255:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7255:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7245:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7245:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7093:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7140:9:12",
														"nodeType": "YulTypedName",
														"src": "7140:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7151:7:12",
														"nodeType": "YulTypedName",
														"src": "7151:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7163:6:12",
														"nodeType": "YulTypedName",
														"src": "7163:6:12",
														"type": ""
													}
												],
												"src": "7093:184:12"
											},
											{
												"body": {
													"nativeSrc": "7334:116:12",
													"nodeType": "YulBlock",
													"src": "7334:116:12",
													"statements": [
														{
															"nativeSrc": "7344:20:12",
															"nodeType": "YulAssignment",
															"src": "7344:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7359:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7359:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7362:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7362:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7355:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7355:3:12"
																},
																"nativeSrc": "7355:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7355:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "7344:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7344:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7422:22:12",
																"nodeType": "YulBlock",
																"src": "7422:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7424:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7424:16:12"
																			},
																			"nativeSrc": "7424:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7424:18:12"
																		},
																		"nativeSrc": "7424:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7424:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "7393:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "7393:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7386:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "7386:6:12"
																				},
																				"nativeSrc": "7386:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7386:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "7400:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "7400:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "7407:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "7407:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "7416:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "7416:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "7403:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7403:3:12"
																						},
																						"nativeSrc": "7403:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7403:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "7397:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "7397:2:12"
																				},
																				"nativeSrc": "7397:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7397:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "7383:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7383:2:12"
																		},
																		"nativeSrc": "7383:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7383:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7376:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7376:6:12"
																},
																"nativeSrc": "7376:45:12",
																"nodeType": "YulFunctionCall",
																"src": "7376:45:12"
															},
															"nativeSrc": "7373:71:12",
															"nodeType": "YulIf",
															"src": "7373:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "7282:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7313:1:12",
														"nodeType": "YulTypedName",
														"src": "7313:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7316:1:12",
														"nodeType": "YulTypedName",
														"src": "7316:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "7322:7:12",
														"nodeType": "YulTypedName",
														"src": "7322:7:12",
														"type": ""
													}
												],
												"src": "7282:168:12"
											},
											{
												"body": {
													"nativeSrc": "7501:171:12",
													"nodeType": "YulBlock",
													"src": "7501:171:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7532:111:12",
																"nodeType": "YulBlock",
																"src": "7532:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7553:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7553:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "7560:3:12",
																							"nodeType": "YulLiteral",
																							"src": "7560:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "7565:10:12",
																							"nodeType": "YulLiteral",
																							"src": "7565:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "7556:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7556:3:12"
																					},
																					"nativeSrc": "7556:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "7556:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7546:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7546:6:12"
																			},
																			"nativeSrc": "7546:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7546:31:12"
																		},
																		"nativeSrc": "7546:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7546:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7597:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7597:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7600:4:12",
																					"nodeType": "YulLiteral",
																					"src": "7600:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7590:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7590:6:12"
																			},
																			"nativeSrc": "7590:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7590:15:12"
																		},
																		"nativeSrc": "7590:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7590:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7625:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7625:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7628:4:12",
																					"nodeType": "YulLiteral",
																					"src": "7628:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7618:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7618:6:12"
																			},
																			"nativeSrc": "7618:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7618:15:12"
																		},
																		"nativeSrc": "7618:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7618:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7521:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7521:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7514:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7514:6:12"
																},
																"nativeSrc": "7514:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7514:9:12"
															},
															"nativeSrc": "7511:132:12",
															"nodeType": "YulIf",
															"src": "7511:132:12"
														},
														{
															"nativeSrc": "7652:14:12",
															"nodeType": "YulAssignment",
															"src": "7652:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7661:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7661:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7664:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7664:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7657:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7657:3:12"
																},
																"nativeSrc": "7657:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7657:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7652:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7652:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7455:217:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7486:1:12",
														"nodeType": "YulTypedName",
														"src": "7486:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7489:1:12",
														"nodeType": "YulTypedName",
														"src": "7489:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7495:1:12",
														"nodeType": "YulTypedName",
														"src": "7495:1:12",
														"type": ""
													}
												],
												"src": "7455:217:12"
											},
											{
												"body": {
													"nativeSrc": "7806:145:12",
													"nodeType": "YulBlock",
													"src": "7806:145:12",
													"statements": [
														{
															"nativeSrc": "7816:26:12",
															"nodeType": "YulAssignment",
															"src": "7816:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7828:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7828:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7839:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7839:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7824:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7824:3:12"
																},
																"nativeSrc": "7824:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7824:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7816:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7816:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7858:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7858:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7873:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7873:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7889:3:12",
																								"nodeType": "YulLiteral",
																								"src": "7889:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7894:1:12",
																								"nodeType": "YulLiteral",
																								"src": "7894:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7885:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "7885:3:12"
																						},
																						"nativeSrc": "7885:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7885:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7898:1:12",
																						"nodeType": "YulLiteral",
																						"src": "7898:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7881:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7881:3:12"
																				},
																				"nativeSrc": "7881:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7881:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7869:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7869:3:12"
																		},
																		"nativeSrc": "7869:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7869:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7851:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7851:6:12"
																},
																"nativeSrc": "7851:51:12",
																"nodeType": "YulFunctionCall",
																"src": "7851:51:12"
															},
															"nativeSrc": "7851:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "7851:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7922:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7922:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7933:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7933:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7918:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7918:3:12"
																		},
																		"nativeSrc": "7918:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7918:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7938:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7938:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7911:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:12"
																},
																"nativeSrc": "7911:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7911:34:12"
															},
															"nativeSrc": "7911:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7911:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7677:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7767:9:12",
														"nodeType": "YulTypedName",
														"src": "7767:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7778:6:12",
														"nodeType": "YulTypedName",
														"src": "7778:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7786:6:12",
														"nodeType": "YulTypedName",
														"src": "7786:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7797:4:12",
														"nodeType": "YulTypedName",
														"src": "7797:4:12",
														"type": ""
													}
												],
												"src": "7677:274:12"
											},
											{
												"body": {
													"nativeSrc": "8034:167:12",
													"nodeType": "YulBlock",
													"src": "8034:167:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8080:16:12",
																"nodeType": "YulBlock",
																"src": "8080:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8089:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8089:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8092:1:12",
																					"nodeType": "YulLiteral",
																					"src": "8092:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8082:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8082:6:12"
																			},
																			"nativeSrc": "8082:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8082:12:12"
																		},
																		"nativeSrc": "8082:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8082:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8055:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8055:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8064:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8064:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8051:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8051:3:12"
																		},
																		"nativeSrc": "8051:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8051:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8076:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8076:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8047:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8047:3:12"
																},
																"nativeSrc": "8047:32:12",
																"nodeType": "YulFunctionCall",
																"src": "8047:32:12"
															},
															"nativeSrc": "8044:52:12",
															"nodeType": "YulIf",
															"src": "8044:52:12"
														},
														{
															"nativeSrc": "8105:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "8105:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8124:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8124:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8118:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "8118:5:12"
																},
																"nativeSrc": "8118:16:12",
																"nodeType": "YulFunctionCall",
																"src": "8118:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8109:5:12",
																	"nodeType": "YulTypedName",
																	"src": "8109:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8165:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "8165:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "8143:21:12",
																	"nodeType": "YulIdentifier",
																	"src": "8143:21:12"
																},
																"nativeSrc": "8143:28:12",
																"nodeType": "YulFunctionCall",
																"src": "8143:28:12"
															},
															"nativeSrc": "8143:28:12",
															"nodeType": "YulExpressionStatement",
															"src": "8143:28:12"
														},
														{
															"nativeSrc": "8180:15:12",
															"nodeType": "YulAssignment",
															"src": "8180:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "8190:5:12",
																"nodeType": "YulIdentifier",
																"src": "8190:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8180:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8180:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7956:245:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8000:9:12",
														"nodeType": "YulTypedName",
														"src": "8000:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8011:7:12",
														"nodeType": "YulTypedName",
														"src": "8011:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8023:6:12",
														"nodeType": "YulTypedName",
														"src": "8023:6:12",
														"type": ""
													}
												],
												"src": "7956:245:12"
											},
											{
												"body": {
													"nativeSrc": "8335:119:12",
													"nodeType": "YulBlock",
													"src": "8335:119:12",
													"statements": [
														{
															"nativeSrc": "8345:26:12",
															"nodeType": "YulAssignment",
															"src": "8345:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8357:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8357:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8368:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8368:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8353:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8353:3:12"
																},
																"nativeSrc": "8353:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8353:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8345:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8345:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8387:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8387:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "8398:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8398:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8380:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8380:6:12"
																},
																"nativeSrc": "8380:25:12",
																"nodeType": "YulFunctionCall",
																"src": "8380:25:12"
															},
															"nativeSrc": "8380:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "8380:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8425:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8425:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8436:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8436:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8421:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8421:3:12"
																		},
																		"nativeSrc": "8421:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8421:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "8441:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8441:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8414:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:12"
																},
																"nativeSrc": "8414:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8414:34:12"
															},
															"nativeSrc": "8414:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8414:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8206:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8296:9:12",
														"nodeType": "YulTypedName",
														"src": "8296:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8307:6:12",
														"nodeType": "YulTypedName",
														"src": "8307:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8315:6:12",
														"nodeType": "YulTypedName",
														"src": "8315:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8326:4:12",
														"nodeType": "YulTypedName",
														"src": "8326:4:12",
														"type": ""
													}
												],
												"src": "8206:248:12"
											},
											{
												"body": {
													"nativeSrc": "8616:214:12",
													"nodeType": "YulBlock",
													"src": "8616:214:12",
													"statements": [
														{
															"nativeSrc": "8626:26:12",
															"nodeType": "YulAssignment",
															"src": "8626:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8638:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8638:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8649:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8649:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8634:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8634:3:12"
																},
																"nativeSrc": "8634:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8634:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8626:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8626:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8668:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8668:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8683:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8683:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8699:3:12",
																								"nodeType": "YulLiteral",
																								"src": "8699:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8704:1:12",
																								"nodeType": "YulLiteral",
																								"src": "8704:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8695:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8695:3:12"
																						},
																						"nativeSrc": "8695:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8695:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8708:1:12",
																						"nodeType": "YulLiteral",
																						"src": "8708:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8691:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8691:3:12"
																				},
																				"nativeSrc": "8691:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8691:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8679:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8679:3:12"
																		},
																		"nativeSrc": "8679:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8679:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8661:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8661:6:12"
																},
																"nativeSrc": "8661:51:12",
																"nodeType": "YulFunctionCall",
																"src": "8661:51:12"
															},
															"nativeSrc": "8661:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "8661:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8732:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8732:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8743:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8743:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8728:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8728:3:12"
																		},
																		"nativeSrc": "8728:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8728:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8752:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8752:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "8768:3:12",
																								"nodeType": "YulLiteral",
																								"src": "8768:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "8773:1:12",
																								"nodeType": "YulLiteral",
																								"src": "8773:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "8764:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "8764:3:12"
																						},
																						"nativeSrc": "8764:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "8764:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8777:1:12",
																						"nodeType": "YulLiteral",
																						"src": "8777:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "8760:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8760:3:12"
																				},
																				"nativeSrc": "8760:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8760:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8748:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8748:3:12"
																		},
																		"nativeSrc": "8748:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8748:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8721:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8721:6:12"
																},
																"nativeSrc": "8721:60:12",
																"nodeType": "YulFunctionCall",
																"src": "8721:60:12"
															},
															"nativeSrc": "8721:60:12",
															"nodeType": "YulExpressionStatement",
															"src": "8721:60:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8801:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8801:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8812:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8812:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8797:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8797:3:12"
																		},
																		"nativeSrc": "8797:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8797:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8817:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8817:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8790:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8790:6:12"
																},
																"nativeSrc": "8790:34:12",
																"nodeType": "YulFunctionCall",
																"src": "8790:34:12"
															},
															"nativeSrc": "8790:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "8790:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8459:371:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8569:9:12",
														"nodeType": "YulTypedName",
														"src": "8569:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8580:6:12",
														"nodeType": "YulTypedName",
														"src": "8580:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8588:6:12",
														"nodeType": "YulTypedName",
														"src": "8588:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8596:6:12",
														"nodeType": "YulTypedName",
														"src": "8596:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8607:4:12",
														"nodeType": "YulTypedName",
														"src": "8607:4:12",
														"type": ""
													}
												],
												"src": "8459:371:12"
											},
											{
												"body": {
													"nativeSrc": "9009:172:12",
													"nodeType": "YulBlock",
													"src": "9009:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9026:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9026:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9037:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9037:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9019:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9019:6:12"
																},
																"nativeSrc": "9019:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9019:21:12"
															},
															"nativeSrc": "9019:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9019:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9060:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9060:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9071:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9071:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9056:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9056:3:12"
																		},
																		"nativeSrc": "9056:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9056:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9076:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9076:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9049:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9049:6:12"
																},
																"nativeSrc": "9049:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9049:30:12"
															},
															"nativeSrc": "9049:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9049:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9099:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9099:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9110:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9110:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9095:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9095:3:12"
																		},
																		"nativeSrc": "9095:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9095:18:12"
																	},
																	{
																		"hexValue": "416c726561647920696e2073616d6520737461747573",
																		"kind": "string",
																		"nativeSrc": "9115:24:12",
																		"nodeType": "YulLiteral",
																		"src": "9115:24:12",
																		"type": "",
																		"value": "Already in same status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9088:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9088:6:12"
																},
																"nativeSrc": "9088:52:12",
																"nodeType": "YulFunctionCall",
																"src": "9088:52:12"
															},
															"nativeSrc": "9088:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "9088:52:12"
														},
														{
															"nativeSrc": "9149:26:12",
															"nodeType": "YulAssignment",
															"src": "9149:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9161:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9161:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9172:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9172:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9157:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9157:3:12"
																},
																"nativeSrc": "9157:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9157:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9149:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9149:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8835:346:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8986:9:12",
														"nodeType": "YulTypedName",
														"src": "8986:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9000:4:12",
														"nodeType": "YulTypedName",
														"src": "9000:4:12",
														"type": ""
													}
												],
												"src": "8835:346:12"
											},
											{
												"body": {
													"nativeSrc": "9309:161:12",
													"nodeType": "YulBlock",
													"src": "9309:161:12",
													"statements": [
														{
															"nativeSrc": "9319:26:12",
															"nodeType": "YulAssignment",
															"src": "9319:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9331:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9331:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9342:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9342:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9327:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9327:3:12"
																},
																"nativeSrc": "9327:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9327:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9319:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9319:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9361:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9361:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9376:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9376:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9392:3:12",
																								"nodeType": "YulLiteral",
																								"src": "9392:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9397:1:12",
																								"nodeType": "YulLiteral",
																								"src": "9397:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9388:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "9388:3:12"
																						},
																						"nativeSrc": "9388:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "9388:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9401:1:12",
																						"nodeType": "YulLiteral",
																						"src": "9401:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9384:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9384:3:12"
																				},
																				"nativeSrc": "9384:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9384:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9372:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9372:3:12"
																		},
																		"nativeSrc": "9372:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9372:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9354:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9354:6:12"
																},
																"nativeSrc": "9354:51:12",
																"nodeType": "YulFunctionCall",
																"src": "9354:51:12"
															},
															"nativeSrc": "9354:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "9354:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9425:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9425:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9436:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9436:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9421:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9421:3:12"
																		},
																		"nativeSrc": "9421:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9421:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nativeSrc": "9455:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9455:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9448:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9448:6:12"
																				},
																				"nativeSrc": "9448:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9448:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "9441:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9441:6:12"
																		},
																		"nativeSrc": "9441:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9441:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9414:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9414:6:12"
																},
																"nativeSrc": "9414:50:12",
																"nodeType": "YulFunctionCall",
																"src": "9414:50:12"
															},
															"nativeSrc": "9414:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "9414:50:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed",
												"nativeSrc": "9186:284:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9270:9:12",
														"nodeType": "YulTypedName",
														"src": "9270:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9281:6:12",
														"nodeType": "YulTypedName",
														"src": "9281:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9289:6:12",
														"nodeType": "YulTypedName",
														"src": "9289:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9300:4:12",
														"nodeType": "YulTypedName",
														"src": "9300:4:12",
														"type": ""
													}
												],
												"src": "9186:284:12"
											},
											{
												"body": {
													"nativeSrc": "9649:228:12",
													"nodeType": "YulBlock",
													"src": "9649:228:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9666:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9666:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9677:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9677:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9659:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9659:6:12"
																},
																"nativeSrc": "9659:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9659:21:12"
															},
															"nativeSrc": "9659:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9659:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9700:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9700:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9711:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9711:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9696:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9696:3:12"
																		},
																		"nativeSrc": "9696:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9696:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9716:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9716:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9689:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9689:6:12"
																},
																"nativeSrc": "9689:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9689:30:12"
															},
															"nativeSrc": "9689:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9689:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9739:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9739:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9750:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9750:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9735:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9735:3:12"
																		},
																		"nativeSrc": "9735:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9735:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "9755:34:12",
																		"nodeType": "YulLiteral",
																		"src": "9755:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9728:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9728:6:12"
																},
																"nativeSrc": "9728:62:12",
																"nodeType": "YulFunctionCall",
																"src": "9728:62:12"
															},
															"nativeSrc": "9728:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "9728:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9810:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9810:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9821:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9821:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9806:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9806:3:12"
																		},
																		"nativeSrc": "9806:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9806:18:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "9826:8:12",
																		"nodeType": "YulLiteral",
																		"src": "9826:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9799:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9799:6:12"
																},
																"nativeSrc": "9799:36:12",
																"nodeType": "YulFunctionCall",
																"src": "9799:36:12"
															},
															"nativeSrc": "9799:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "9799:36:12"
														},
														{
															"nativeSrc": "9844:27:12",
															"nodeType": "YulAssignment",
															"src": "9844:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9856:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9856:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9867:3:12",
																		"nodeType": "YulLiteral",
																		"src": "9867:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9852:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9852:3:12"
																},
																"nativeSrc": "9852:19:12",
																"nodeType": "YulFunctionCall",
																"src": "9852:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9844:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9844:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9475:402:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9626:9:12",
														"nodeType": "YulTypedName",
														"src": "9626:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9640:4:12",
														"nodeType": "YulTypedName",
														"src": "9640:4:12",
														"type": ""
													}
												],
												"src": "9475:402:12"
											},
											{
												"body": {
													"nativeSrc": "10056:233:12",
													"nodeType": "YulBlock",
													"src": "10056:233:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10073:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10073:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10084:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10084:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10066:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10066:6:12"
																},
																"nativeSrc": "10066:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10066:21:12"
															},
															"nativeSrc": "10066:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "10066:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10107:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10107:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10118:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10118:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10103:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10103:3:12"
																		},
																		"nativeSrc": "10103:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10103:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10123:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10123:2:12",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10096:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10096:6:12"
																},
																"nativeSrc": "10096:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10096:30:12"
															},
															"nativeSrc": "10096:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "10096:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10146:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10146:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10157:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10157:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10142:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10142:3:12"
																		},
																		"nativeSrc": "10142:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10142:18:12"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nativeSrc": "10162:34:12",
																		"nodeType": "YulLiteral",
																		"src": "10162:34:12",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10135:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10135:6:12"
																},
																"nativeSrc": "10135:62:12",
																"nodeType": "YulFunctionCall",
																"src": "10135:62:12"
															},
															"nativeSrc": "10135:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "10135:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10217:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10217:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10228:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10228:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10213:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10213:3:12"
																		},
																		"nativeSrc": "10213:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10213:18:12"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "10233:13:12",
																		"nodeType": "YulLiteral",
																		"src": "10233:13:12",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10206:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10206:6:12"
																},
																"nativeSrc": "10206:41:12",
																"nodeType": "YulFunctionCall",
																"src": "10206:41:12"
															},
															"nativeSrc": "10206:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "10206:41:12"
														},
														{
															"nativeSrc": "10256:27:12",
															"nodeType": "YulAssignment",
															"src": "10256:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10268:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10268:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10279:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10279:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10264:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10264:3:12"
																},
																"nativeSrc": "10264:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10264:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10256:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10256:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9882:407:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10033:9:12",
														"nodeType": "YulTypedName",
														"src": "10033:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10047:4:12",
														"nodeType": "YulTypedName",
														"src": "10047:4:12",
														"type": ""
													}
												],
												"src": "9882:407:12"
											},
											{
												"body": {
													"nativeSrc": "10375:103:12",
													"nodeType": "YulBlock",
													"src": "10375:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10421:16:12",
																"nodeType": "YulBlock",
																"src": "10421:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10430:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10430:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10433:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10433:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10423:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10423:6:12"
																			},
																			"nativeSrc": "10423:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10423:12:12"
																		},
																		"nativeSrc": "10423:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10423:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10396:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10396:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10405:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10405:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10392:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10392:3:12"
																		},
																		"nativeSrc": "10392:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10392:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10417:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10417:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10388:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10388:3:12"
																},
																"nativeSrc": "10388:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10388:32:12"
															},
															"nativeSrc": "10385:52:12",
															"nodeType": "YulIf",
															"src": "10385:52:12"
														},
														{
															"nativeSrc": "10446:26:12",
															"nodeType": "YulAssignment",
															"src": "10446:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10462:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10462:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10456:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10456:5:12"
																},
																"nativeSrc": "10456:16:12",
																"nodeType": "YulFunctionCall",
																"src": "10456:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "10446:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10446:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "10294:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10341:9:12",
														"nodeType": "YulTypedName",
														"src": "10341:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10352:7:12",
														"nodeType": "YulTypedName",
														"src": "10352:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10364:6:12",
														"nodeType": "YulTypedName",
														"src": "10364:6:12",
														"type": ""
													}
												],
												"src": "10294:184:12"
											},
											{
												"body": {
													"nativeSrc": "10657:236:12",
													"nodeType": "YulBlock",
													"src": "10657:236:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10674:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10674:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10685:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10685:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10667:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10667:6:12"
																},
																"nativeSrc": "10667:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10667:21:12"
															},
															"nativeSrc": "10667:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "10667:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10708:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10708:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10719:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10719:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10704:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10704:3:12"
																		},
																		"nativeSrc": "10704:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10704:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10724:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10724:2:12",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10697:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10697:6:12"
																},
																"nativeSrc": "10697:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10697:30:12"
															},
															"nativeSrc": "10697:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "10697:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10747:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10747:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10758:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10758:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10743:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10743:3:12"
																		},
																		"nativeSrc": "10743:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10743:18:12"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e74617469",
																		"kind": "string",
																		"nativeSrc": "10763:34:12",
																		"nodeType": "YulLiteral",
																		"src": "10763:34:12",
																		"type": "",
																		"value": "ERC1967Upgrade: new implementati"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10736:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:12"
																},
																"nativeSrc": "10736:62:12",
																"nodeType": "YulFunctionCall",
																"src": "10736:62:12"
															},
															"nativeSrc": "10736:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "10736:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10818:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10818:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10829:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10829:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10814:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10814:3:12"
																		},
																		"nativeSrc": "10814:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10814:18:12"
																	},
																	{
																		"hexValue": "6f6e206973206e6f742055555053",
																		"kind": "string",
																		"nativeSrc": "10834:16:12",
																		"nodeType": "YulLiteral",
																		"src": "10834:16:12",
																		"type": "",
																		"value": "on is not UUPS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10807:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10807:6:12"
																},
																"nativeSrc": "10807:44:12",
																"nodeType": "YulFunctionCall",
																"src": "10807:44:12"
															},
															"nativeSrc": "10807:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "10807:44:12"
														},
														{
															"nativeSrc": "10860:27:12",
															"nodeType": "YulAssignment",
															"src": "10860:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10872:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10872:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10883:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10883:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10868:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10868:3:12"
																},
																"nativeSrc": "10868:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10868:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10860:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10860:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10483:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10634:9:12",
														"nodeType": "YulTypedName",
														"src": "10634:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10648:4:12",
														"nodeType": "YulTypedName",
														"src": "10648:4:12",
														"type": ""
													}
												],
												"src": "10483:410:12"
											},
											{
												"body": {
													"nativeSrc": "11072:231:12",
													"nodeType": "YulBlock",
													"src": "11072:231:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11089:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11089:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11100:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11100:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11082:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11082:6:12"
																},
																"nativeSrc": "11082:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11082:21:12"
															},
															"nativeSrc": "11082:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "11082:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11123:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11123:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11134:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11134:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11119:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11119:3:12"
																		},
																		"nativeSrc": "11119:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11119:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11139:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11139:2:12",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11112:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11112:6:12"
																},
																"nativeSrc": "11112:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11112:30:12"
															},
															"nativeSrc": "11112:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11112:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11162:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11162:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11173:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11173:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11158:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11158:3:12"
																		},
																		"nativeSrc": "11158:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11158:18:12"
																	},
																	{
																		"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f78",
																		"kind": "string",
																		"nativeSrc": "11178:34:12",
																		"nodeType": "YulLiteral",
																		"src": "11178:34:12",
																		"type": "",
																		"value": "ERC1967Upgrade: unsupported prox"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11151:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11151:6:12"
																},
																"nativeSrc": "11151:62:12",
																"nodeType": "YulFunctionCall",
																"src": "11151:62:12"
															},
															"nativeSrc": "11151:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "11151:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11233:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11233:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11244:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11244:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11229:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11229:3:12"
																		},
																		"nativeSrc": "11229:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11229:18:12"
																	},
																	{
																		"hexValue": "6961626c6555554944",
																		"kind": "string",
																		"nativeSrc": "11249:11:12",
																		"nodeType": "YulLiteral",
																		"src": "11249:11:12",
																		"type": "",
																		"value": "iableUUID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11222:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11222:6:12"
																},
																"nativeSrc": "11222:39:12",
																"nodeType": "YulFunctionCall",
																"src": "11222:39:12"
															},
															"nativeSrc": "11222:39:12",
															"nodeType": "YulExpressionStatement",
															"src": "11222:39:12"
														},
														{
															"nativeSrc": "11270:27:12",
															"nodeType": "YulAssignment",
															"src": "11270:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11282:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11282:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11293:3:12",
																		"nodeType": "YulLiteral",
																		"src": "11293:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11278:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11278:3:12"
																},
																"nativeSrc": "11278:19:12",
																"nodeType": "YulFunctionCall",
																"src": "11278:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11270:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11270:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10898:405:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11049:9:12",
														"nodeType": "YulTypedName",
														"src": "11049:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11063:4:12",
														"nodeType": "YulTypedName",
														"src": "11063:4:12",
														"type": ""
													}
												],
												"src": "10898:405:12"
											},
											{
												"body": {
													"nativeSrc": "11482:182:12",
													"nodeType": "YulBlock",
													"src": "11482:182:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11499:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11499:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11510:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11510:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11492:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11492:6:12"
																},
																"nativeSrc": "11492:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11492:21:12"
															},
															"nativeSrc": "11492:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "11492:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11533:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11533:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11544:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11544:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11529:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11529:3:12"
																		},
																		"nativeSrc": "11529:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11529:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11549:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11549:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11522:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11522:6:12"
																},
																"nativeSrc": "11522:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11522:30:12"
															},
															"nativeSrc": "11522:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11522:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11572:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11572:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11583:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11583:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11568:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11568:3:12"
																		},
																		"nativeSrc": "11568:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11568:18:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "11588:34:12",
																		"nodeType": "YulLiteral",
																		"src": "11588:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11561:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11561:6:12"
																},
																"nativeSrc": "11561:62:12",
																"nodeType": "YulFunctionCall",
																"src": "11561:62:12"
															},
															"nativeSrc": "11561:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "11561:62:12"
														},
														{
															"nativeSrc": "11632:26:12",
															"nodeType": "YulAssignment",
															"src": "11632:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11644:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11644:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11655:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11655:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11640:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11640:3:12"
																},
																"nativeSrc": "11640:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11640:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11632:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11632:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11308:356:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11459:9:12",
														"nodeType": "YulTypedName",
														"src": "11459:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11473:4:12",
														"nodeType": "YulTypedName",
														"src": "11473:4:12",
														"type": ""
													}
												],
												"src": "11308:356:12"
											},
											{
												"body": {
													"nativeSrc": "11843:235:12",
													"nodeType": "YulBlock",
													"src": "11843:235:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11860:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11860:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11871:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11871:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11853:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11853:6:12"
																},
																"nativeSrc": "11853:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11853:21:12"
															},
															"nativeSrc": "11853:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "11853:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11894:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11894:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11905:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11905:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11890:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11890:3:12"
																		},
																		"nativeSrc": "11890:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11890:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11910:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11910:2:12",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11883:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11883:6:12"
																},
																"nativeSrc": "11883:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11883:30:12"
															},
															"nativeSrc": "11883:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11883:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11933:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11933:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11944:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11944:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11929:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11929:3:12"
																		},
																		"nativeSrc": "11929:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11929:18:12"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nativeSrc": "11949:34:12",
																		"nodeType": "YulLiteral",
																		"src": "11949:34:12",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11922:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11922:6:12"
																},
																"nativeSrc": "11922:62:12",
																"nodeType": "YulFunctionCall",
																"src": "11922:62:12"
															},
															"nativeSrc": "11922:62:12",
															"nodeType": "YulExpressionStatement",
															"src": "11922:62:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12004:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12004:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12015:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12015:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12000:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12000:3:12"
																		},
																		"nativeSrc": "12000:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12000:18:12"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "12020:15:12",
																		"nodeType": "YulLiteral",
																		"src": "12020:15:12",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11993:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11993:6:12"
																},
																"nativeSrc": "11993:43:12",
																"nodeType": "YulFunctionCall",
																"src": "11993:43:12"
															},
															"nativeSrc": "11993:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "11993:43:12"
														},
														{
															"nativeSrc": "12045:27:12",
															"nodeType": "YulAssignment",
															"src": "12045:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12057:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12057:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12068:3:12",
																		"nodeType": "YulLiteral",
																		"src": "12068:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12053:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12053:3:12"
																},
																"nativeSrc": "12053:19:12",
																"nodeType": "YulFunctionCall",
																"src": "12053:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12045:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12045:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11669:409:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11820:9:12",
														"nodeType": "YulTypedName",
														"src": "11820:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11834:4:12",
														"nodeType": "YulTypedName",
														"src": "11834:4:12",
														"type": ""
													}
												],
												"src": "11669:409:12"
											},
											{
												"body": {
													"nativeSrc": "12220:164:12",
													"nodeType": "YulBlock",
													"src": "12220:164:12",
													"statements": [
														{
															"nativeSrc": "12230:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12230:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12250:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12250:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12244:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12244:5:12"
																},
																"nativeSrc": "12244:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12244:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12234:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12234:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12272:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12272:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12281:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12281:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12289:4:12",
																				"nodeType": "YulLiteral",
																				"src": "12289:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12277:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12277:3:12"
																		},
																		"nativeSrc": "12277:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12277:17:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12296:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12296:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "12266:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12266:5:12"
																},
																"nativeSrc": "12266:37:12",
																"nodeType": "YulFunctionCall",
																"src": "12266:37:12"
															},
															"nativeSrc": "12266:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "12266:37:12"
														},
														{
															"nativeSrc": "12312:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12312:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12326:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12326:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12331:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12331:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12322:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12322:3:12"
																},
																"nativeSrc": "12322:16:12",
																"nodeType": "YulFunctionCall",
																"src": "12322:16:12"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "12316:2:12",
																	"nodeType": "YulTypedName",
																	"src": "12316:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "12354:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "12354:2:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12358:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12358:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12347:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12347:6:12"
																},
																"nativeSrc": "12347:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12347:13:12"
															},
															"nativeSrc": "12347:13:12",
															"nodeType": "YulExpressionStatement",
															"src": "12347:13:12"
														},
														{
															"nativeSrc": "12369:9:12",
															"nodeType": "YulAssignment",
															"src": "12369:9:12",
															"value": {
																"name": "_1",
																"nativeSrc": "12376:2:12",
																"nodeType": "YulIdentifier",
																"src": "12376:2:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12369:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12369:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12083:301:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12196:3:12",
														"nodeType": "YulTypedName",
														"src": "12196:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12201:6:12",
														"nodeType": "YulTypedName",
														"src": "12201:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12212:3:12",
														"nodeType": "YulTypedName",
														"src": "12212:3:12",
														"type": ""
													}
												],
												"src": "12083:301:12"
											},
											{
												"body": {
													"nativeSrc": "12563:179:12",
													"nodeType": "YulBlock",
													"src": "12563:179:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12580:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12580:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12591:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12591:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12573:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12573:6:12"
																},
																"nativeSrc": "12573:21:12",
																"nodeType": "YulFunctionCall",
																"src": "12573:21:12"
															},
															"nativeSrc": "12573:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "12573:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12614:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12614:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12625:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12625:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12610:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12610:3:12"
																		},
																		"nativeSrc": "12610:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12610:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12630:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12630:2:12",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12603:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12603:6:12"
																},
																"nativeSrc": "12603:30:12",
																"nodeType": "YulFunctionCall",
																"src": "12603:30:12"
															},
															"nativeSrc": "12603:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "12603:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12653:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12653:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12664:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12664:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12649:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12649:3:12"
																		},
																		"nativeSrc": "12649:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12649:18:12"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "12669:31:12",
																		"nodeType": "YulLiteral",
																		"src": "12669:31:12",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12642:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12642:6:12"
																},
																"nativeSrc": "12642:59:12",
																"nodeType": "YulFunctionCall",
																"src": "12642:59:12"
															},
															"nativeSrc": "12642:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "12642:59:12"
														},
														{
															"nativeSrc": "12710:26:12",
															"nodeType": "YulAssignment",
															"src": "12710:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12722:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12722:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12733:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12733:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12718:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12718:3:12"
																},
																"nativeSrc": "12718:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12718:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12710:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12710:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12389:353:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12540:9:12",
														"nodeType": "YulTypedName",
														"src": "12540:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12554:4:12",
														"nodeType": "YulTypedName",
														"src": "12554:4:12",
														"type": ""
													}
												],
												"src": "12389:353:12"
											},
											{
												"body": {
													"nativeSrc": "12868:297:12",
													"nodeType": "YulBlock",
													"src": "12868:297:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12885:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12885:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12896:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12896:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12878:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12878:6:12"
																},
																"nativeSrc": "12878:21:12",
																"nodeType": "YulFunctionCall",
																"src": "12878:21:12"
															},
															"nativeSrc": "12878:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "12878:21:12"
														},
														{
															"nativeSrc": "12908:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12908:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12928:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12928:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12922:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12922:5:12"
																},
																"nativeSrc": "12922:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12922:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12912:6:12",
																	"nodeType": "YulTypedName",
																	"src": "12912:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12955:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12955:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12966:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12966:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12951:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12951:3:12"
																		},
																		"nativeSrc": "12951:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12951:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12971:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12971:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12944:6:12"
																},
																"nativeSrc": "12944:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12944:34:12"
															},
															"nativeSrc": "12944:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "12944:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12997:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12997:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13008:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13008:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12993:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12993:3:12"
																		},
																		"nativeSrc": "12993:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12993:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13017:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13017:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13025:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13025:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13013:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13013:3:12"
																		},
																		"nativeSrc": "13013:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13013:15:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13030:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13030:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "12987:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "12987:5:12"
																},
																"nativeSrc": "12987:50:12",
																"nodeType": "YulFunctionCall",
																"src": "12987:50:12"
															},
															"nativeSrc": "12987:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "12987:50:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13061:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "13061:9:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "13072:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "13072:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13057:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13057:3:12"
																				},
																				"nativeSrc": "13057:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13057:22:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13081:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13081:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13053:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13053:3:12"
																		},
																		"nativeSrc": "13053:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13053:31:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13086:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13086:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13046:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13046:6:12"
																},
																"nativeSrc": "13046:42:12",
																"nodeType": "YulFunctionCall",
																"src": "13046:42:12"
															},
															"nativeSrc": "13046:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "13046:42:12"
														},
														{
															"nativeSrc": "13097:62:12",
															"nodeType": "YulAssignment",
															"src": "13097:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13113:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13113:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "13132:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "13132:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13140:2:12",
																								"nodeType": "YulLiteral",
																								"src": "13140:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "13128:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "13128:3:12"
																						},
																						"nativeSrc": "13128:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "13128:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13149:2:12",
																								"nodeType": "YulLiteral",
																								"src": "13149:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "13145:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "13145:3:12"
																						},
																						"nativeSrc": "13145:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "13145:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "13124:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "13124:3:12"
																				},
																				"nativeSrc": "13124:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13124:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13109:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13109:3:12"
																		},
																		"nativeSrc": "13109:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13109:45:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13156:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13156:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13105:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13105:3:12"
																},
																"nativeSrc": "13105:54:12",
																"nodeType": "YulFunctionCall",
																"src": "13105:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13097:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13097:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12747:418:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12837:9:12",
														"nodeType": "YulTypedName",
														"src": "12837:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12848:6:12",
														"nodeType": "YulTypedName",
														"src": "12848:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12859:4:12",
														"nodeType": "YulTypedName",
														"src": "12859:4:12",
														"type": ""
													}
												],
												"src": "12747:418:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1718__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid alva address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid xALVA address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"Function must be called through \")\n        mstore(add(headStart, 96), \"active proxy\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"UUPSUpgradeable: must not be cal\")\n        mstore(add(headStart, 96), \"led through delegatecall\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"BlackListed User\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Can not unStake\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Already in same status\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bool__to_t_address_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: new implementati\")\n        mstore(add(headStart, 96), \"on is not UUPS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: unsupported prox\")\n        mstore(add(headStart, 96), \"iableUUID\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"687": [
									{
										"length": 32,
										"start": 1282
									},
									{
										"length": 32,
										"start": 1346
									},
									{
										"length": 32,
										"start": 1503
									},
									{
										"length": 32,
										"start": 1567
									},
									{
										"length": 32,
										"start": 1712
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEF JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6AC10901 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xA59F3E0C GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xA59F3E0C EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0xB3D6E119 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0xE0CEF1B0 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2EE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6AC10901 EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x91DB7B0D EQ PUSH2 0x27C JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x3B0E0133 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x3B0E0133 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x67DFD4C9 EQ PUSH2 0x20D JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0xC8E32D2 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x323BF9F0 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x10D CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xCB PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0x145C JUMP JUMPDEST PUSH2 0x30D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xC9 SLOAD PUSH2 0x171 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x194 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x1A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1D6 PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH1 0xCC PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x128 JUMP JUMPDEST PUSH2 0x150 PUSH2 0x1F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x14AA JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x204 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x6A4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x218 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x227 CALLDATASIZE PUSH1 0x4 PUSH2 0x156E JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0xCA SLOAD PUSH2 0x171 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0xA23 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x171 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x156E JUMP JUMPDEST PUSH2 0xA36 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x156E JUMP JUMPDEST PUSH2 0xA7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x11E PUSH1 0xCD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x2E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0xDF1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x150 PUSH2 0x308 CALLDATASIZE PUSH1 0x4 PUSH2 0x1443 JUMP JUMPDEST PUSH2 0xEC3 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x32B JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x344 JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x344 JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x3AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x3CD JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x3D5 PUSH2 0xF39 JUMP JUMPDEST PUSH2 0x3DD PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x42A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C696420616C76612061646472657373 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x478 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C69642078414C56412061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0xC9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0xCA DUP1 SLOAD SWAP3 DUP7 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xCD DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x588 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x5B7 DUP2 PUSH2 0xF8D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x5D2 SWAP2 DUP4 SWAP2 SWAP1 PUSH2 0xF95 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND ADDRESS SUB PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x15C7 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x665 PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x68B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x694 DUP3 PUSH2 0xF8D JUMP JUMPDEST PUSH2 0x6A0 DUP3 DUP3 PUSH1 0x1 PUSH2 0xF95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST POP PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x213630B1B5A634B9BA32B2102AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0xCD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7C7 SWAP2 SWAP1 PUSH2 0x1673 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x43616E206E6F7420756E5374616B65 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0xCA SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x84F JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x873 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BE JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E2 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH2 0x8EC SWAP1 DUP6 PUSH2 0x169D JUMP JUMPDEST PUSH2 0x8F6 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0xCA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x79CC6790 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x950 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x962 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0xC9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH4 0xA9059CBB SWAP1 POP CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9C4 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x16D3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xA2B PUSH2 0x1104 JUMP JUMPDEST PUSH2 0xA34 PUSH0 PUSH2 0x115E JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA3E PUSH2 0x1104 JUMP JUMPDEST PUSH1 0xCD SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0xF814EAFA160E3546FC1EA6B8939A578EF5F64D31E04888BCD82E8CD9F9EC2909 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0xCD SSTORE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x1 SUB PUSH2 0xAD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x213630B1B5A634B9BA32B2102AB9B2B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0xC9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB1B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB3F SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0xCA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB92 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBB6 SWAP2 SWAP1 PUSH2 0x1686 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 PUSH2 0xBC3 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0xC83 JUMPI PUSH1 0xCA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC1F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC31 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xC3C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP5 PUSH1 0x40 MLOAD PUSH2 0xC76 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0xD54 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xC8F DUP4 DUP7 PUSH2 0x169D JUMP JUMPDEST PUSH2 0xC99 SWAP2 SWAP1 PUSH2 0x16B4 JUMP JUMPDEST PUSH1 0xCA SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD05 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD10 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xEBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A DUP3 PUSH1 0x40 MLOAD PUSH2 0xD4A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCB PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0xC9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD PUSH2 0xD7D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDCD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4F2 SWAP2 SWAP1 PUSH2 0x16D3 JUMP JUMPDEST PUSH2 0xDF9 PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 ISZERO ISZERO PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO SUB PUSH2 0xE61 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x416C726561647920696E2073616D6520737461747573 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0xCC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP6 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP3 MLOAD SWAP4 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE PUSH32 0x2F2EA19E5340217456E8ECB94895965BA2AFA084E4A94F9FC7C315B1478243B7 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0xECB PUSH2 0x1104 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xF30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x5D2 DUP2 PUSH2 0x115E JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0xA34 PUSH2 0x11AF JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0x5D2 PUSH2 0x1104 JUMP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xFCD JUMPI PUSH2 0xFC8 DUP4 PUSH2 0x11DE JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1027 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1024 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1686 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x108A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A206E657720696D706C656D656E74617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x6F6E206973206E6F742055555053 PUSH1 0x90 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP2 EQ PUSH2 0x10F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A20756E737570706F727465642070726F78 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x1A58589B1955555251 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST POP PUSH2 0xFC8 DUP4 DUP4 DUP4 PUSH2 0x1279 JUMP JUMPDEST PUSH1 0x33 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH2 0xA34 CALLER PUSH2 0x115E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x124B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A3 JUMP JUMPDEST PUSH0 MLOAD PUSH1 0x20 PUSH2 0x178C PUSH0 CODECOPY PUSH0 MLOAD SWAP1 PUSH0 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x1282 DUP4 PUSH2 0x129D JUMP JUMPDEST PUSH0 DUP3 MLOAD GT DUP1 PUSH2 0x128E JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xFC8 JUMPI PUSH2 0x4F2 DUP4 DUP4 PUSH2 0x12DC JUMP JUMPDEST PUSH2 0x12A6 DUP2 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1301 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17AC PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x130A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1326 SWAP2 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x135E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1374 DUP7 DUP4 DUP4 DUP8 PUSH2 0x137E JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x13EC JUMPI DUP3 MLOAD PUSH0 SUB PUSH2 0x13E5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND EXTCODESIZE PUSH2 0x13E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A3 JUMP JUMPDEST POP DUP2 PUSH2 0x13F6 JUMP JUMPDEST PUSH2 0x13F6 DUP4 DUP4 PUSH2 0x13FE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x140E JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x1756 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x143E JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1453 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1301 DUP3 PUSH2 0x1428 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x146E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1477 DUP5 PUSH2 0x1428 JUMP JUMPDEST SWAP3 POP PUSH2 0x1485 PUSH1 0x20 DUP6 ADD PUSH2 0x1428 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14BB JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x14C4 DUP4 PUSH2 0x1428 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x14EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1509 JUMPI PUSH2 0x1509 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1538 PUSH2 0x1496 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x154F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x157E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15AC DUP4 PUSH2 0x1428 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x15BC DUP2 PUSH2 0x1585 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x19195B1959D85D1958D85B1B PUSH1 0xA2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820 PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x6163746976652070726F7879 PUSH1 0xA0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1304 JUMPI PUSH2 0x1304 PUSH2 0x165F JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1304 JUMPI PUSH2 0x1304 PUSH2 0x165F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x16CE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16E3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x16EE DUP2 PUSH2 0x1585 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x6564A264697066735822122014 ISZERO 0x4B 0xC1 0xA7 ADDRESS 0xC4 CALLDATACOPY STOP 0x2C EXTCODESIZE 0x27 0xC2 0xA6 SWAPN 0xD1 0xE2 DUP1 OR 0xE9 PUSH26 0x535DF8F7E551E48FF2820C64736F6C634300081E003300000000 ",
							"sourceMap": "323:3189:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;452:49;;;;;;;;;;-1:-1:-1;452:49:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;529:25:12;;;517:2;502:18;452:49:10;;;;;;;;961:418;;;;;;;;;;-1:-1:-1;961:418:10;;;;;:::i;:::-;;:::i;:::-;;402:18;;;;;;;;;;-1:-1:-1;402:18:10;;;;-1:-1:-1;;;;;402:18:10;;;;;;-1:-1:-1;;;;;1123:32:12;;;1105:51;;1093:2;1078:18;402::10;944:218:12;3408:195:6;;;;;;;;;;-1:-1:-1;3408:195:6;;;;;:::i;:::-;;:::i;507:48:10:-;;;;;;;;;;-1:-1:-1;507:48:10;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1332:14:12;;1325:22;1307:41;;1295:2;1280:18;507:48:10;1167:187:12;3922:220:6;;;;;;:::i;:::-;;:::i;3027:131::-;;;;;;;;;;;;;:::i;2191:546:10:-;;;;;;;;;;-1:-1:-1;2191:546:10;;;;;:::i;:::-;;:::i;426:19::-;;;;;;;;;;-1:-1:-1;426:19:10;;;;-1:-1:-1;;;;;426:19:10;;;2085:101:0;;;;;;;;;;;;;:::i;1462:85::-;;;;;;;;;;-1:-1:-1;1534:6:0;;-1:-1:-1;;;;;1534:6:0;1462:85;;3218:174:10;;;;;;;;;;-1:-1:-1;3218:174:10;;;;;:::i;:::-;;:::i;1445:691::-;;;;;;;;;;-1:-1:-1;1445:691:10;;;;;:::i;:::-;;:::i;562:27::-;;;;;;;;;;;;;;;;2941:245;;;;;;;;;;-1:-1:-1;2941:245:10;;;;;:::i;:::-;;:::i;2335:198:0:-;;;;;;;;;;-1:-1:-1;2335:198:0;;;;;:::i;:::-;;:::i;961:418:10:-;3279:19:5;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:5;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:5;1713:19:7;:23;;;3387:66:5;;-1:-1:-1;3436:12:5;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:5;;3780:2:12;3325:201:5;;;3762:21:12;3819:2;3799:18;;;3792:30;3858:34;3838:18;;;3831:62;-1:-1:-1;;;3909:18:12;;;3902:44;3963:19;;3325:201:5;;;;;;;;;3536:12;:16;;-1:-1:-1;;3536:16:5;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:5;;;;;3562:65;1094:16:10::1;:14;:16::i;:::-;1120:24;:22;:24::i;:::-;-1:-1:-1::0;;;;;1163:19:10;::::1;1155:52;;;::::0;-1:-1:-1;;;1155:52:10;;4195:2:12;1155:52:10::1;::::0;::::1;4177:21:12::0;4234:2;4214:18;;;4207:30;-1:-1:-1;;;4253:18:12;;;4246:50;4313:18;;1155:52:10::1;3993:344:12::0;1155:52:10::1;-1:-1:-1::0;;;;;1225:20:10;::::1;1217:54;;;::::0;-1:-1:-1;;;1217:54:10;;4544:2:12;1217:54:10::1;::::0;::::1;4526:21:12::0;4583:2;4563:18;;;4556:30;-1:-1:-1;;;4602:18:12;;;4595:51;4663:18;;1217:54:10::1;4342:345:12::0;1217:54:10::1;1282:4;:20:::0;;-1:-1:-1;;;;;1282:20:10;;::::1;-1:-1:-1::0;;;;;;1282:20:10;;::::1;;::::0;;;1312:5:::1;:22:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;1344:12:::1;:28:::0;;;3647:99:5;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:5;;;3721:14;;-1:-1:-1;4844:36:12;;3721:14:5;;4832:2:12;4817:18;3721:14:5;;;;;;;3647:99;3269:483;961:418:10;;;:::o;3408:195:6:-;-1:-1:-1;;;;;1764:6:6;1747:23;1755:4;1747:23;1739:80;;;;-1:-1:-1;;;1739:80:6;;;;;;;:::i;:::-;1861:6;-1:-1:-1;;;;;1837:30:6;:20;-1:-1:-1;;;;;;;;;;;1557:65:3;-1:-1:-1;;;;;1557:65:3;;1478:151;1837:20:6;-1:-1:-1;;;;;1837:30:6;;1829:87;;;;-1:-1:-1;;;1829:87:6;;;;;;;:::i;:::-;3489:36:::1;3507:17;3489;:36::i;:::-;3576:12;::::0;;3586:1:::1;3576:12:::0;;;::::1;::::0;::::1;::::0;;;3535:61:::1;::::0;3557:17;;3576:12;3535:21:::1;:61::i;:::-;3408:195:::0;:::o;3922:220::-;-1:-1:-1;;;;;1764:6:6;1747:23;1755:4;1747:23;1739:80;;;;-1:-1:-1;;;1739:80:6;;;;;;;:::i;:::-;1861:6;-1:-1:-1;;;;;1837:30:6;:20;-1:-1:-1;;;;;;;;;;;1557:65:3;-1:-1:-1;;;;;1557:65:3;;1478:151;1837:20:6;-1:-1:-1;;;;;1837:30:6;;1829:87;;;;-1:-1:-1;;;1829:87:6;;;;;;;:::i;:::-;4037:36:::1;4055:17;4037;:36::i;:::-;4083:52;4105:17;4124:4;4130;4083:21;:52::i;:::-;3922:220:::0;;:::o;3027:131::-;3105:7;2190:4;-1:-1:-1;;;;;2199:6:6;2182:23;;2174:92;;;;-1:-1:-1;;;2174:92:6;;5919:2:12;2174:92:6;;;5901:21:12;5958:2;5938:18;;;5931:30;5997:34;5977:18;;;5970:62;6068:26;6048:18;;;6041:54;6112:19;;2174:92:6;5717:420:12;2174:92:6;-1:-1:-1;;;;;;;;;;;;3027:131:6;:::o;2191:546:10:-;2264:10;2247:28;;;;:16;:28;;;;;;;;:36;;:28;:36;2239:65;;;;-1:-1:-1;;;2239:65:10;;6344:2:12;2239:65:10;;;6326:21:12;6383:2;6363:18;;;6356:30;-1:-1:-1;;;6402:18:12;;;6395:46;6458:18;;2239:65:10;6142:340:12;2239:65:10;2384:12;;2370:10;2355:26;;;;:14;:26;;;;;;:41;;2384:12;2355:41;:::i;:::-;2335:15;:62;;2314:124;;;;-1:-1:-1;;;2314:124:10;;6951:2:12;2314:124:10;;;6933:21:12;6990:2;6970:18;;;6963:30;-1:-1:-1;;;7009:18:12;;;7002:45;7064:18;;2314:124:10;6749:339:12;2314:124:10;2470:5;;:19;;;-1:-1:-1;;;2470:19:10;;;;2448;;-1:-1:-1;;;;;2470:5:10;;:17;;:19;;;;;;;;;;;;;;:5;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2530:4;;:29;;-1:-1:-1;;;2530:29:10;;2553:4;2530:29;;;1105:51:12;2448:41:10;;-1:-1:-1;2499:18:10;;2448:41;;-1:-1:-1;;;;;2530:4:10;;:14;;1078:18:12;;2530:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2521:38;;:6;:38;:::i;:::-;2520:66;;;;:::i;:::-;2596:5;;2499:87;;-1:-1:-1;;;;;;2596:5:10;:14;965:10:8;2596:36:10;;-1:-1:-1;;;;;;2596:36:10;;;;;;;-1:-1:-1;;;;;7869:32:12;;;2596:36:10;;;7851:51:12;7918:18;;;7911:34;;;7824:18;;2596:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2642:4:10;;-1:-1:-1;;;;;2642:4:10;;-1:-1:-1;2642:13:10;;-1:-1:-1;965:10:8;2642:39:10;;-1:-1:-1;;;;;;2642:39:10;;;;;;;-1:-1:-1;;;;;7869:32:12;;;2642:39:10;;;7851:51:12;7918:18;;;7911:34;;;7824:18;;2642:39:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2697:33:10;;529:25:12;;;965:10:8;;2697:33:10;;517:2:12;502:18;2697:33:10;;;;;;;2229:508;;2191:546;:::o;2085:101:0:-;1355:13;:11;:13::i;:::-;2149:30:::1;2176:1;2149:18;:30::i;:::-;2085:101::o:0;3218:174:10:-;1355:13:0;:11;:13::i;:::-;3318:12:10::1;::::0;3301:45:::1;::::0;;8380:25:12;;;8436:2;8421:18;;8414:34;;;3301:45:10::1;::::0;8353:18:12;3301:45:10::1;;;;;;;3357:12;:28:::0;3218:174::o;1445:691::-;1519:10;1502:28;;;;:16;:28;;;;;;;;:36;;:28;:36;1494:65;;;;-1:-1:-1;;;1494:65:10;;6344:2:12;1494:65:10;;;6326:21:12;6383:2;6363:18;;;6356:30;-1:-1:-1;;;6402:18:12;;;6395:46;6458:18;;1494:65:10;6142:340:12;1494:65:10;1589:4;;:29;;-1:-1:-1;;;1589:29:10;;1612:4;1589:29;;;1105:51:12;1569:17:10;;-1:-1:-1;;;;;1589:4:10;;:14;;1078:18:12;;1589:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1569:49;;1628:19;1650:5;;;;;;;;;-1:-1:-1;;;;;1650:5:10;-1:-1:-1;;;;;1650:17:10;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1628:41;-1:-1:-1;1683:16:10;;;:34;;-1:-1:-1;1703:14:10;;1683:34;1679:332;;;1733:5;;-1:-1:-1;;;;;1733:5:10;:10;965::8;1733:33:10;;-1:-1:-1;;;;;;1733:33:10;;;;;;;-1:-1:-1;;;;;7869:32:12;;;1733:33:10;;;7851:51:12;7918:18;;;7911:34;;;7824:18;;1733:33:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1791:12;965:10:8;;886:96;1791:12:10;-1:-1:-1;;;;;1785:28:10;;1805:7;1785:28;;;;529:25:12;;517:2;502:18;;383:177;1785:28:10;;;;;;;;1679:332;;;1844:18;1891:9;1866:21;1876:11;1866:7;:21;:::i;:::-;1865:35;;;;:::i;:::-;1914:5;;1844:56;;-1:-1:-1;;;;;;1914:5:10;:10;965::8;1914:36:10;;-1:-1:-1;;;;;;1914:36:10;;;;;;;-1:-1:-1;;;;;7869:32:12;;;1914:36:10;;;7851:51:12;7918:18;;;7911:34;;;7824:18;;1914:36:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1975:12;965:10:8;;886:96;1975:12:10;-1:-1:-1;;;;;1969:31:10;;1989:10;1969:31;;;;529:25:12;;517:2;502:18;;383:177;1969:31:10;;;;;;;;1830:181;1679:332;2035:10;2020:26;;;;:14;:26;;;;;2049:15;2020:44;;2074:4;;-1:-1:-1;;;;;2074:4:10;:17;2092:12;965:10:8;;886:96;2092:12:10;2074:55;;-1:-1:-1;;;;;;2074:55:10;;;;;;;-1:-1:-1;;;;;8679:32:12;;;2074:55:10;;;8661:51:12;2114:4:10;8728:18:12;;;8721:60;8797:18;;;8790:34;;;8634:18;;2074:55:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2941:245::-;1355:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;3030:23:10;::::1;;::::0;;;:16:::1;:23;::::0;;;;;:34;::::1;;:23;::::0;;::::1;:34;;::::0;3022:69:::1;;;::::0;-1:-1:-1;;;3022:69:10;;9037:2:12;3022:69:10::1;::::0;::::1;9019:21:12::0;9076:2;9056:18;;;9049:30;-1:-1:-1;;;9095:18:12;;;9088:52;9157:18;;3022:69:10::1;8835:346:12::0;3022:69:10::1;-1:-1:-1::0;;;;;3101:23:10;::::1;;::::0;;;:16:::1;:23;::::0;;;;;;;;:33;;-1:-1:-1;;3101:33:10::1;::::0;::::1;;::::0;;::::1;::::0;;;3150:29;;9354:51:12;;;9421:18;;;9414:50;3150:29:10::1;::::0;9327:18:12;3150:29:10::1;;;;;;;2941:245:::0;;:::o;2335:198:0:-;1355:13;:11;:13::i;:::-;-1:-1:-1;;;;;2423:22:0;::::1;2415:73;;;::::0;-1:-1:-1;;;2415:73:0;;9677:2:12;2415:73:0::1;::::0;::::1;9659:21:12::0;9716:2;9696:18;;;9689:30;9755:34;9735:18;;;9728:62;-1:-1:-1;;;9806:18:12;;;9799:36;9852:19;;2415:73:0::1;9475:402:12::0;2415:73:0::1;2498:28;2517:8;2498:18;:28::i;1024:95::-:0;5374:13:5;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;:::-;1086:26:0::1;:24;:26::i;2290:67:6:-:0;5374:13:5;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;3398:112:10:-;1355:13:0;:11;:13::i;2841:944:3:-;839:66;3257:59;;;3253:526;;;3332:37;3351:17;3332:18;:37::i;:::-;2841:944;;;:::o;3253:526::-;3433:17;-1:-1:-1;;;;;3404:61:3;;:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3404:63:3;;;;;;;;-1:-1:-1;;3404:63:3;;;;;;;;;;;;:::i;:::-;;;3400:302;;3631:56;;-1:-1:-1;;;3631:56:3;;10685:2:12;3631:56:3;;;10667:21:12;10724:2;10704:18;;;10697:30;10763:34;10743:18;;;10736:62;-1:-1:-1;;;10814:18:12;;;10807:44;10868:19;;3631:56:3;10483:410:12;3400:302:3;-1:-1:-1;;;;;;;;;;;3517:28:3;;3509:82;;;;-1:-1:-1;;;3509:82:3;;11100:2:12;3509:82:3;;;11082:21:12;11139:2;11119:18;;;11112:30;11178:34;11158:18;;;11151:62;-1:-1:-1;;;11229:18:12;;;11222:39;11278:19;;3509:82:3;10898:405:12;3509:82:3;3468:138;3715:53;3733:17;3752:4;3758:9;3715:17;:53::i;1620:130:0:-;1534:6;;-1:-1:-1;;;;;1534:6:0;965:10:8;1683:23:0;1675:68;;;;-1:-1:-1;;;1675:68:0;;11510:2:12;1675:68:0;;;11492:21:12;;;11529:18;;;11522:30;11588:34;11568:18;;;11561:62;11640:18;;1675:68:0;11308:356:12;2687:187:0;2779:6;;;-1:-1:-1;;;;;2795:17:0;;;-1:-1:-1;;;;;;2795:17:0;;;;;;;2827:40;;2779:6;;;2795:17;2779:6;;2827:40;;2760:16;;2827:40;2750:124;2687:187;:::o;1125:111::-;5374:13:5;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:5;;;;;;;:::i;:::-;1197:32:0::1;965:10:8::0;1197:18:0::1;:32::i;1720:281:3:-:0;-1:-1:-1;;;;;1713:19:7;;;1793:106:3;;;;-1:-1:-1;;;1793:106:3;;11871:2:12;1793:106:3;;;11853:21:12;11910:2;11890:18;;;11883:30;11949:34;11929:18;;;11922:62;-1:-1:-1;;;12000:18:12;;;11993:43;12053:19;;1793:106:3;11669:409:12;1793:106:3;-1:-1:-1;;;;;;;;;;;1909:85:3;;-1:-1:-1;;;;;;1909:85:3;-1:-1:-1;;;;;1909:85:3;;;;;;;;;;1720:281::o;2393:276::-;2501:29;2512:17;2501:10;:29::i;:::-;2558:1;2544:4;:11;:15;:28;;;;2563:9;2544:28;2540:123;;;2588:64;2628:17;2647:4;2588:39;:64::i;2107:152::-;2173:37;2192:17;2173:18;:37::i;:::-;2225:27;;-1:-1:-1;;;;;2225:27:3;;;;;;;;2107:152;:::o;6685:198:7:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6792:84;;6685:198;;;;;:::o;7069:325::-;7210:12;7235;7249:23;7276:6;-1:-1:-1;;;;;7276:19:7;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:7:o;7682:628::-;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;-1:-1:-1;;;;;1713:19:7;;;8124:60;;;;-1:-1:-1;;;8124:60:7;;12591:2:12;8124:60:7;;;12573:21:12;12630:2;12610:18;;;12603:30;12669:31;12649:18;;;12642:59;12718:18;;8124:60:7;12389:353:12;8124:60:7;-1:-1:-1;8219:10:7;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;:::-;7682:628;;;;;;:::o;8832:540::-;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;-1:-1:-1;;;9335:20:7;;;;;;;;:::i;14:173:12:-;82:20;;-1:-1:-1;;;;;131:31:12;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:374::-;642:6;650;658;711:2;699:9;690:7;686:23;682:32;679:52;;;727:1;724;717:12;679:52;750:29;769:9;750:29;:::i;:::-;740:39;;798:38;832:2;821:9;817:18;798:38;:::i;:::-;565:374;;788:48;;-1:-1:-1;;;905:2:12;890:18;;;;877:32;;565:374::o;1359:127::-;1420:10;1415:3;1411:20;1408:1;1401:31;1451:4;1448:1;1441:15;1475:4;1472:1;1465:15;1491:1018;1568:6;1576;1629:2;1617:9;1608:7;1604:23;1600:32;1597:52;;;1645:1;1642;1635:12;1597:52;1668:29;1687:9;1668:29;:::i;:::-;1658:39;;1748:2;1737:9;1733:18;1720:32;1775:18;1767:6;1764:30;1761:50;;;1807:1;1804;1797:12;1761:50;1830:22;;1883:4;1875:13;;1871:27;-1:-1:-1;1861:55:12;;1912:1;1909;1902:12;1861:55;1952:2;1939:16;1978:18;1970:6;1967:30;1964:56;;;2000:18;;:::i;:::-;2049:2;2043:9;2141:2;2103:17;;-1:-1:-1;;2099:31:12;;;2132:2;2095:40;2091:54;2079:67;;2176:18;2161:34;;2197:22;;;2158:62;2155:88;;;2223:18;;:::i;:::-;2259:2;2252:22;2283;;;2324:15;;;2341:2;2320:24;2317:37;-1:-1:-1;2314:57:12;;;2367:1;2364;2357:12;2314:57;2423:6;2418:2;2414;2410:11;2405:2;2397:6;2393:15;2380:50;2476:1;2471:2;2462:6;2454;2450:19;2446:28;2439:39;2497:6;2487:16;;;;;1491:1018;;;;;:::o;2696:226::-;2755:6;2808:2;2796:9;2787:7;2783:23;2779:32;2776:52;;;2824:1;2821;2814:12;2776:52;-1:-1:-1;2869:23:12;;2696:226;-1:-1:-1;2696:226:12:o;3135:118::-;3221:5;3214:13;3207:21;3200:5;3197:32;3187:60;;3243:1;3240;3233:12;3258:315;3323:6;3331;3384:2;3372:9;3363:7;3359:23;3355:32;3352:52;;;3400:1;3397;3390:12;3352:52;3423:29;3442:9;3423:29;:::i;:::-;3413:39;;3502:2;3491:9;3487:18;3474:32;3515:28;3537:5;3515:28;:::i;:::-;3562:5;3552:15;;;3258:315;;;;;:::o;4891:408::-;5093:2;5075:21;;;5132:2;5112:18;;;5105:30;5171:34;5166:2;5151:18;;5144:62;-1:-1:-1;;;5237:2:12;5222:18;;5215:42;5289:3;5274:19;;4891:408::o;5304:::-;5506:2;5488:21;;;5545:2;5525:18;;;5518:30;5584:34;5579:2;5564:18;;5557:62;-1:-1:-1;;;5650:2:12;5635:18;;5628:42;5702:3;5687:19;;5304:408::o;6487:127::-;6548:10;6543:3;6539:20;6536:1;6529:31;6579:4;6576:1;6569:15;6603:4;6600:1;6593:15;6619:125;6684:9;;;6705:10;;;6702:36;;;6718:18;;:::i;7093:184::-;7163:6;7216:2;7204:9;7195:7;7191:23;7187:32;7184:52;;;7232:1;7229;7222:12;7184:52;-1:-1:-1;7255:16:12;;7093:184;-1:-1:-1;7093:184:12:o;7282:168::-;7355:9;;;7386;;7403:15;;;7397:22;;7383:37;7373:71;;7424:18;;:::i;7455:217::-;7495:1;7521;7511:132;;7565:10;7560:3;7556:20;7553:1;7546:31;7600:4;7597:1;7590:15;7628:4;7625:1;7618:15;7511:132;-1:-1:-1;7657:9:12;;7455:217::o;7956:245::-;8023:6;8076:2;8064:9;8055:7;8051:23;8047:32;8044:52;;;8092:1;8089;8082:12;8044:52;8124:9;8118:16;8143:28;8165:5;8143:28;:::i;:::-;8190:5;7956:245;-1:-1:-1;;;7956:245:12:o;9882:407::-;10084:2;10066:21;;;10123:2;10103:18;;;10096:30;10162:34;10157:2;10142:18;;10135:62;-1:-1:-1;;;10228:2:12;10213:18;;10206:41;10279:3;10264:19;;9882:407::o;12083:301::-;12212:3;12250:6;12244:13;12296:6;12289:4;12281:6;12277:17;12272:3;12266:37;12358:1;12322:16;;12347:13;;;-1:-1:-1;12322:16:12;12083:301;-1:-1:-1;12083:301:12:o;12747:418::-;12896:2;12885:9;12878:21;12859:4;12928:6;12922:13;12971:6;12966:2;12955:9;12951:18;12944:34;13030:6;13025:2;13017:6;13013:15;13008:2;12997:9;12993:18;12987:50;13086:1;13081:2;13072:6;13061:9;13057:22;13053:31;13046:42;13156:2;13149;13145:7;13140:2;13132:6;13128:15;13124:29;13113:9;13109:45;13105:54;13097:62;;;12747:418;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1230400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ALVA()": "2404",
								"blackListAddress(address)": "2555",
								"blackListUser(address,bool)": "30517",
								"enter(uint256)": "infinite",
								"initialize(address,address,uint256)": "infinite",
								"leave(uint256)": "infinite",
								"lockedPeriod()": "2327",
								"owner()": "2397",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "28425",
								"updateLockPeriod(uint256)": "28012",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"userLockPeriod(address)": "2533",
								"xALVA()": "2359"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1198,
									"end": 1202,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1155,
									"end": 1203,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 902,
									"end": 955,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 902,
									"end": 955,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 902,
									"end": 955,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 902,
									"end": 955,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 902,
									"end": 955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 902,
									"end": 955,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 902,
									"end": 955,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 926,
									"end": 948,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 926,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "5"
								},
								{
									"begin": 926,
									"end": 948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 926,
									"end": 948,
									"name": "tag",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 926,
									"end": 948,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 5939,
									"end": 6219,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 6007,
									"end": 6020,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6006,
									"end": 6020,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 216,
									"end": 218,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 198,
									"end": 219,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 255,
									"end": 257,
									"name": "PUSH",
									"source": 12,
									"value": "27"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 235,
									"end": 253,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 235,
									"end": 253,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 228,
									"end": 258,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 294,
									"end": 328,
									"name": "PUSH",
									"source": 12,
									"value": "496E697469616C697A61626C653A20636F6E747261637420697320696E697469"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 274,
									"end": 292,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 274,
									"end": 292,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 267,
									"end": 329,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "616C697A696E67"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 345,
									"end": 363,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 345,
									"end": 363,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 345,
									"end": 363,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 338,
									"end": 375,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 392,
									"end": 411,
									"name": "PUSH",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 392,
									"end": 411,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "tag",
									"source": 5,
									"value": "8"
								},
								{
									"begin": 5998,
									"end": 6064,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 6094,
									"end": 6109,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6090,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6078,
									"end": 6109,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6137,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 6140,
									"end": 6155,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6125,
									"end": 6155,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 564,
									"end": 600,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 564,
									"end": 600,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 564,
									"end": 600,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 5,
									"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 552,
									"end": 554,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 555,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 6174,
									"end": 6202,
									"name": "LOG1",
									"source": 5
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 6074,
									"end": 6213,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 5939,
									"end": 6219,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 422,
									"end": 606,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 422,
									"end": 606,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "687"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 3512,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122014154bc1a730c437002c3b27c2a6e7d1e28017e979535df8f7e551e48ff2820c64736f6c634300081e0033",
									".code": [
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "6AC10901"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "A59F3E0C"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "A59F3E0C"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "B3D6E119"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "E0CEF1B0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "6AC10901"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "91DB7B0D"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "3B0E0133"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "3B0E0133"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "4F1EF286"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "52D1902D"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "67DFD4C9"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "C8E32D2"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "1794BB3C"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "323BF9F0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "3659CFE6"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 3512,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 452,
											"end": 501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 452,
											"end": 501,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 452,
											"end": 501,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 452,
											"end": 501,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 961,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 961,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 402,
											"end": 420,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1155,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1093,
											"end": 1095,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 402,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 944,
											"end": 1162,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3408,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3408,
											"end": 3603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 507,
											"end": 555,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 507,
											"end": 555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 507,
											"end": 555,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1332,
											"end": 1346,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1332,
											"end": 1346,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1325,
											"end": 1347,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1307,
											"end": 1348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1307,
											"end": 1348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1298,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 507,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1167,
											"end": 1354,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3922,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3922,
											"end": 4142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3027,
											"end": 3158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2191,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2191,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 426,
											"end": 445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 426,
											"end": 445,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 426,
											"end": 445,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2085,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1462,
											"end": 1547,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3218,
											"end": 3392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3218,
											"end": 3392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1445,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1445,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 562,
											"end": 589,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 562,
											"end": 589,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2941,
											"end": 3186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 2941,
											"end": 3186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2335,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2335,
											"end": 2533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3279,
											"end": 3298,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3302,
											"end": 3315,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3301,
											"end": 3315,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3377,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3365,
											"end": 3381,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3347,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3346,
											"end": 3454,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3436,
											"end": 3448,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3436,
											"end": 3453,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3387,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3780,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3762,
											"end": 3783,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3819,
											"end": 3821,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3792,
											"end": 3822,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3858,
											"end": 3892,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3831,
											"end": 3893,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3909,
											"end": 3927,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3902,
											"end": 3946,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 3982,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3963,
											"end": 3982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3325,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3536,
											"end": 3552,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3609,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3562,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1094,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1094,
											"end": 1108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 1094,
											"end": 1110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1094,
											"end": 1110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1120,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1120,
											"end": 1142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 1120,
											"end": 1144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1120,
											"end": 1144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 1120,
											"end": 1144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1163,
											"end": 1182,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1163,
											"end": 1182,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1155,
											"end": 1207,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1155,
											"end": 1207,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1155,
											"end": 1207,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1207,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1155,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1155,
											"end": 1207,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1155,
											"end": 1207,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4177,
											"end": 4198,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4234,
											"end": 4236,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4214,
											"end": 4232,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4207,
											"end": 4237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420616C76612061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4253,
											"end": 4271,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4246,
											"end": 4296,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 3993,
											"end": 4337,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1155,
											"end": 1207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 1155,
											"end": 1207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1225,
											"end": 1245,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1225,
											"end": 1245,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1217,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1217,
											"end": 1271,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1217,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1271,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1271,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1217,
											"end": 1271,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4544,
											"end": 4546,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1217,
											"end": 1271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1217,
											"end": 1271,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4526,
											"end": 4547,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4583,
											"end": 4585,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4556,
											"end": 4586,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642078414C56412061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4595,
											"end": 4646,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4663,
											"end": 4681,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1217,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 4342,
											"end": 4687,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1217,
											"end": 1271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 1217,
											"end": 1271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1302,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1302,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1282,
											"end": 1302,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1312,
											"end": 1334,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 1344,
											"end": 1372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1372,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1344,
											"end": 1372,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3697,
											"end": 3702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3681,
											"end": 3702,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 4844,
											"end": 4880,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4844,
											"end": 4880,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4832,
											"end": 4834,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4817,
											"end": 4835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3647,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3269,
											"end": 3752,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "687"
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1739,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "687"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1478,
											"end": 1629,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1829,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3525,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3507,
											"end": 3524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3506,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 3489,
											"end": 3525,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3489,
											"end": 3525,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3489,
											"end": 3525,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3586,
											"end": 3587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3535,
											"end": 3596,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3574,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3574,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3535,
											"end": 3596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3535,
											"end": 3596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1764,
											"end": 1770,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "687"
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1755,
											"end": 1759,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1770,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 1739,
											"end": 1819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1739,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "687"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1557,
											"end": 1622,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1478,
											"end": 1629,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 1837,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1837,
											"end": 1867,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1829,
											"end": 1916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1829,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4055,
											"end": 4072,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4037,
											"end": 4073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4037,
											"end": 4073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4105,
											"end": 4122,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4124,
											"end": 4128,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4083,
											"end": 4104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4083,
											"end": 4135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4083,
											"end": 4135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4083,
											"end": 4135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 4142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3922,
											"end": 4142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2194,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2205,
											"name": "PUSHIMMUTABLE",
											"source": 6,
											"value": "687"
										},
										{
											"begin": 2182,
											"end": 2205,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2205,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5919,
											"end": 5921,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5901,
											"end": 5922,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "PUSH",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 5938,
											"end": 5956,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 5938,
											"end": 5956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5938,
											"end": 5956,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5931,
											"end": 5961,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5997,
											"end": 6031,
											"name": "PUSH",
											"source": 12,
											"value": "555550535570677261646561626C653A206D757374206E6F742062652063616C"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5977,
											"end": 5995,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 6032,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6068,
											"end": 6094,
											"name": "PUSH",
											"source": 12,
											"value": "6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6066,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6041,
											"end": 6095,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6112,
											"end": 6131,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 6112,
											"end": 6131,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 5717,
											"end": 6137,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2174,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3027,
											"end": 3158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3027,
											"end": 3158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2264,
											"end": 2274,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2263,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2247,
											"end": 2275,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2247,
											"end": 2283,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6347,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "213630B1B5A634B9BA32B2102AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 6142,
											"end": 6482,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 2239,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2380,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2369,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2381,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2355,
											"end": 2396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2384,
											"end": 2396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 2355,
											"end": 2396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2355,
											"end": 2396,
											"name": "tag",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 2355,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2350,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2397,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2397,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6951,
											"end": 6953,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6933,
											"end": 6954,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6990,
											"end": 6992,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6963,
											"end": 6993,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E206E6F7420756E5374616B65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7009,
											"end": 7027,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7002,
											"end": 7047,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7064,
											"end": 7082,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 7064,
											"end": 7082,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 6749,
											"end": 7088,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2314,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 2470,
											"end": 2487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2475,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2470,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 2470,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2534,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 2530,
											"end": 2534,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2448,
											"end": 2489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2489,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2489,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2448,
											"end": 2489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2530,
											"end": 2534,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2534,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 2530,
											"end": 2544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 2530,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 2530,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 2521,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2520,
											"end": 2586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 2520,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2586,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 2520,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2601,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 2596,
											"end": 2601,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2586,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2596,
											"end": 2601,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2610,
											"name": "PUSH",
											"source": 10,
											"value": "79CC6790"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7851,
											"end": 7902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 2596,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2642,
											"end": 2655,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 2642,
											"end": 2655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7851,
											"end": 7902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2642,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "PUSH",
											"source": 10,
											"value": "85082129D87B2FE11527CB1B3B7A520AEB5AA6913F88A3D8757FE40D1DB02FDD"
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2697,
											"end": 2730,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2229,
											"end": 2737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2191,
											"end": 2737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2085,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2176,
											"end": 2177,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2149,
											"end": 2179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2149,
											"end": 2179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2085,
											"end": 2186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3218,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3318,
											"end": 3330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 3318,
											"end": 3330,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3301,
											"end": 3346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 8380,
											"end": 8405,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8380,
											"end": 8405,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8380,
											"end": 8405,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8436,
											"end": 8438,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8421,
											"end": 8439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8414,
											"end": 8448,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "F814EAFA160E3546FC1EA6B8939A578EF5F64D31E04888BCD82E8CD9F9EC2909"
										},
										{
											"begin": 3301,
											"end": 3346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8353,
											"end": 8371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3301,
											"end": 3346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3301,
											"end": 3346,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3346,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3346,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3346,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3346,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3301,
											"end": 3346,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 3357,
											"end": 3369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "CD"
										},
										{
											"begin": 3357,
											"end": 3385,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3218,
											"end": 3392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1445,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1529,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1518,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1538,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1538,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1530,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1502,
											"end": 1538,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6326,
											"end": 6347,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6383,
											"end": 6385,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6386,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "213630B1B5A634B9BA32B2102AB9B2B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6402,
											"end": 6420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6395,
											"end": 6441,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 6142,
											"end": 6482,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "tag",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 1494,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1593,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 1589,
											"end": 1593,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1616,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1105,
											"end": 1156,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1569,
											"end": 1586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1569,
											"end": 1586,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1589,
											"end": 1593,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1593,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1589,
											"end": 1603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1078,
											"end": 1096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1589,
											"end": 1618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1589,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1618,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1569,
											"end": 1618,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1628,
											"end": 1647,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "AND",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1650,
											"end": 1667,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1667,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1650,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1628,
											"end": 1669,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1683,
											"end": 1699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1699,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1699,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1683,
											"end": 1717,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1703,
											"end": 1717,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1703,
											"end": 1717,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1683,
											"end": 1717,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1683,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 2011,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1679,
											"end": 2011,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1738,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1743,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7851,
											"end": 7902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1733,
											"end": 1766,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 886,
											"end": 982,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH",
											"source": 10,
											"value": "EBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A"
										},
										{
											"begin": 1805,
											"end": 1812,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1785,
											"end": 1813,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1679,
											"end": 2011,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 2011,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1679,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1891,
											"end": 1900,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1876,
											"end": 1887,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1873,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 1866,
											"end": 1887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1866,
											"end": 1887,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1866,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1865,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "PUSH",
											"source": 10,
											"value": "CA"
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1900,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1844,
											"end": 1900,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 1919,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1924,
											"name": "PUSH",
											"source": 10,
											"value": "40C10F19"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7869,
											"end": 7901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7851,
											"end": 7902,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7918,
											"end": 7936,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 7945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7824,
											"end": 7842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1914,
											"end": 1950,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 886,
											"end": 982,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "tag",
											"source": 10,
											"value": "226"
										},
										{
											"begin": 1975,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "PUSH",
											"source": 10,
											"value": "EBEDB8B3C678666E7F36970BC8F57ABF6D8FA2E828C0DA91EA5B75BF68ED101A"
										},
										{
											"begin": 1989,
											"end": 1999,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1969,
											"end": 2000,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1830,
											"end": 2011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1679,
											"end": 2011,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1679,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2035,
											"end": 2045,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2046,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2034,
											"name": "PUSH",
											"source": 10,
											"value": "CB"
										},
										{
											"begin": 2020,
											"end": 2046,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2046,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2046,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2046,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2046,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2064,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2020,
											"end": 2064,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "PUSH",
											"source": 10,
											"value": "C9"
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2091,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 2092,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 965,
											"end": 975,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 886,
											"end": 982,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2092,
											"end": 2104,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2092,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8679,
											"end": 8711,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8679,
											"end": 8711,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8679,
											"end": 8711,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8661,
											"end": 8712,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2118,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 8728,
											"end": 8746,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8728,
											"end": 8746,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8728,
											"end": 8746,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8721,
											"end": 8781,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8797,
											"end": 8815,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8790,
											"end": 8824,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8790,
											"end": 8824,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8790,
											"end": 8824,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8634,
											"end": 8652,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8634,
											"end": 8652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2129,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 2074,
											"end": 2129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 3030,
											"end": 3053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3064,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3064,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3022,
											"end": 3091,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3022,
											"end": 3091,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3022,
											"end": 3091,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3091,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9037,
											"end": 9039,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3022,
											"end": 3091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3022,
											"end": 3091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3091,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9019,
											"end": 9040,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9078,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 9056,
											"end": 9074,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9056,
											"end": 9074,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9056,
											"end": 9074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9049,
											"end": 9079,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "416C726561647920696E2073616D6520737461747573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9095,
											"end": 9113,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9088,
											"end": 9140,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9157,
											"end": 9175,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3022,
											"end": 3091,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 8835,
											"end": 9181,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3022,
											"end": 3091,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3022,
											"end": 3091,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "CC"
										},
										{
											"begin": 3101,
											"end": 3124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3124,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3101,
											"end": 3134,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3101,
											"end": 3134,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3179,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9354,
											"end": 9405,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9354,
											"end": 9405,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9354,
											"end": 9405,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9421,
											"end": 9439,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9414,
											"end": 9464,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2F2EA19E5340217456E8ECB94895965BA2AFA084E4A94F9FC7C315B1478243B7"
										},
										{
											"begin": 3150,
											"end": 3179,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9345,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3179,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2335,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2423,
											"end": 2445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2423,
											"end": 2445,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9677,
											"end": 9679,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2415,
											"end": 2488,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9659,
											"end": 9680,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9716,
											"end": 9718,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 9696,
											"end": 9714,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9696,
											"end": 9714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9696,
											"end": 9714,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9689,
											"end": 9719,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9755,
											"end": 9789,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9735,
											"end": 9753,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9735,
											"end": 9753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9735,
											"end": 9753,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9728,
											"end": 9790,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9806,
											"end": 9824,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9799,
											"end": 9835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9852,
											"end": 9871,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 9852,
											"end": 9871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 9475,
											"end": 9877,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 2415,
											"end": 2488,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2526,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2517,
											"end": 2525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2498,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2498,
											"end": 2526,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1024,
											"end": 1119,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1024,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1086,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1086,
											"end": 1110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1086,
											"end": 1112,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2357,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2290,
											"end": 2357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3398,
											"end": 3510,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 3398,
											"end": 3510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1355,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1355,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1355,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 839,
											"end": 905,
											"name": "PUSH",
											"source": 3,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 3257,
											"end": 3316,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3351,
											"end": 3368,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 3332,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3332,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 3785,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2841,
											"end": 3785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 3253,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3433,
											"end": 3450,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3465,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3465,
											"name": "PUSH",
											"source": 3,
											"value": "52D1902D"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "STATICCALL",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "163"
										},
										{
											"begin": 3404,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "tag",
											"source": 3,
											"value": "275"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 3404,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3400,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 3400,
											"end": 3702,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10685,
											"end": 10687,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10667,
											"end": 10688,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10724,
											"end": 10726,
											"name": "PUSH",
											"source": 12,
											"value": "2E"
										},
										{
											"begin": 10704,
											"end": 10722,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10704,
											"end": 10722,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10704,
											"end": 10722,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10697,
											"end": 10727,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10763,
											"end": 10797,
											"name": "PUSH",
											"source": 12,
											"value": "45524331393637557067726164653A206E657720696D706C656D656E74617469"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10736,
											"end": 10798,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6F6E206973206E6F742055555053"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10814,
											"end": 10832,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10807,
											"end": 10851,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10868,
											"end": 10887,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10868,
											"end": 10887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3631,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 10483,
											"end": 10893,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3702,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 3400,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3517,
											"end": 3545,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3517,
											"end": 3545,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11100,
											"end": 11102,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11082,
											"end": 11103,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11139,
											"end": 11141,
											"name": "PUSH",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 11119,
											"end": 11137,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11119,
											"end": 11137,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11119,
											"end": 11137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11112,
											"end": 11142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11178,
											"end": 11212,
											"name": "PUSH",
											"source": 12,
											"value": "45524331393637557067726164653A20756E737570706F727465642070726F78"
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11158,
											"end": 11176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11213,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A58589B1955555251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11229,
											"end": 11247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11222,
											"end": 11261,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11278,
											"end": 11297,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 11278,
											"end": 11297,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 10898,
											"end": 11303,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 3509,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3468,
											"end": 3606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3715,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 3733,
											"end": 3750,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3752,
											"end": 3756,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3758,
											"end": 3767,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3715,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 3715,
											"end": 3768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1620,
											"end": 1750,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1620,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1683,
											"end": 1706,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11510,
											"end": 11512,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11492,
											"end": 11513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11492,
											"end": 11513,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11492,
											"end": 11513,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11529,
											"end": 11547,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11522,
											"end": 11552,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11588,
											"end": 11622,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11568,
											"end": 11586,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11561,
											"end": 11623,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11658,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11640,
											"end": 11658,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1675,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 11308,
											"end": 11664,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2687,
											"end": 2874,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2687,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2779,
											"end": 2785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2827,
											"end": 2867,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2750,
											"end": 2874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2687,
											"end": 2874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1236,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1125,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 5374,
											"end": 5387,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "253"
										},
										{
											"begin": 5366,
											"end": 5435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 5366,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1197,
											"end": 1229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 965,
											"end": 975,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1197,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 1197,
											"end": 1229,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1720,
											"end": 2001,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 1720,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11871,
											"end": 11873,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11853,
											"end": 11874,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11910,
											"end": 11912,
											"name": "PUSH",
											"source": 12,
											"value": "2D"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11883,
											"end": 11913,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11949,
											"end": 11983,
											"name": "PUSH",
											"source": 12,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11929,
											"end": 11947,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11922,
											"end": 11984,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11993,
											"end": 12036,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12053,
											"end": 12072,
											"name": "PUSH",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 12053,
											"end": 12072,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 11669,
											"end": 12078,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "tag",
											"source": 3,
											"value": "307"
										},
										{
											"begin": 1793,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1909,
											"end": 1994,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1720,
											"end": 2001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2393,
											"end": 2669,
											"name": "tag",
											"source": 3,
											"value": "288"
										},
										{
											"begin": 2393,
											"end": 2669,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2512,
											"end": 2529,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 2501,
											"end": 2530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "tag",
											"source": 3,
											"value": "312"
										},
										{
											"begin": 2501,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2558,
											"end": 2559,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2548,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2555,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2559,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 2544,
											"end": 2572,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2540,
											"end": 2663,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2540,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 2540,
											"end": 2663,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2628,
											"end": 2645,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2588,
											"end": 2627,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "317"
										},
										{
											"begin": 2588,
											"end": 2652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2259,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 2107,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 2192,
											"end": 2209,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 2173,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2173,
											"end": 2210,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 2173,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2225,
											"end": 2252,
											"name": "LOG2",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2107,
											"end": 2259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6780,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6828,
											"end": 6832,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH data",
											"source": 7,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6819,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 6799,
											"end": 6876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 6799,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6792,
											"end": 6876,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6792,
											"end": 6876,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7222,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7235,
											"end": 7247,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7282,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7276,
											"end": 7295,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7296,
											"end": 7300,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 7276,
											"end": 7301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DELEGATECALL",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7276,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7301,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7345,
											"end": 7351,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7360,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7362,
											"end": 7372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7374,
											"end": 7386,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7318,
											"end": 7387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7318,
											"end": 7387,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7387,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7069,
											"end": 7394,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7069,
											"end": 7394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7862,
											"end": 7874,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7890,
											"end": 7897,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7927,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7917,
											"end": 7939,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 7913,
											"end": 8199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1732,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12591,
											"end": 12593,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12573,
											"end": 12594,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12630,
											"end": 12632,
											"name": "PUSH",
											"source": 12,
											"value": "1D"
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12603,
											"end": 12633,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12669,
											"end": 12700,
											"name": "PUSH",
											"source": 12,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 12649,
											"end": 12667,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 12649,
											"end": 12667,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12649,
											"end": 12667,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12718,
											"end": 12736,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 12718,
											"end": 12736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 12389,
											"end": 12742,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8124,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8219,
											"end": 8229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 8212,
											"end": 8229,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7886,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 8268,
											"end": 8278,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8280,
											"end": 8292,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8267,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 8260,
											"end": 8293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 8260,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7682,
											"end": 8310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 8832,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9008,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9012,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9219,
											"end": 9229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9213,
											"end": 9230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9262,
											"end": 9272,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9258,
											"end": 9260,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9254,
											"end": 9273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9247,
											"end": 9291,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 8987,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9342,
											"end": 9354,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9335,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 9335,
											"end": 9355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 565,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 565,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 642,
											"end": 648,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 650,
											"end": 656,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 664,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 713,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 699,
											"end": 708,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 690,
											"end": 697,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 686,
											"end": 709,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 682,
											"end": 714,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 679,
											"end": 731,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 679,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 679,
											"end": 731,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 727,
											"end": 728,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 725,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 729,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 679,
											"end": 731,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 679,
											"end": 731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 750,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 769,
											"end": 778,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 750,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 750,
											"end": 779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 750,
											"end": 779,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 750,
											"end": 779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 740,
											"end": 779,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 740,
											"end": 779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 798,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 821,
											"end": 830,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 817,
											"end": 835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 798,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 798,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 798,
											"end": 836,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 798,
											"end": 836,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 565,
											"end": 939,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 565,
											"end": 939,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 788,
											"end": 836,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 788,
											"end": 836,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 905,
											"end": 907,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 890,
											"end": 908,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 890,
											"end": 908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 890,
											"end": 908,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 877,
											"end": 909,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 877,
											"end": 909,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 565,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1359,
											"end": 1486,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1359,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1420,
											"end": 1430,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 1415,
											"end": 1418,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1411,
											"end": 1431,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1408,
											"end": 1409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1401,
											"end": 1432,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1451,
											"end": 1455,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1441,
											"end": 1456,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1472,
											"end": 1473,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1465,
											"end": 1480,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1582,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1617,
											"end": 1626,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1608,
											"end": 1615,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1604,
											"end": 1627,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1600,
											"end": 1632,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1645,
											"end": 1646,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1643,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1647,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 1597,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 1687,
											"end": 1696,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 1668,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1668,
											"end": 1697,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 1668,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1658,
											"end": 1697,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1750,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1733,
											"end": 1751,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1767,
											"end": 1773,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1794,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 1761,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1871,
											"end": 1898,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1952,
											"end": 1954,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1939,
											"end": 1955,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1978,
											"end": 1996,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1970,
											"end": 1976,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 1997,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 1964,
											"end": 2020,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2000,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 2000,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2049,
											"end": 2051,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2141,
											"end": 2143,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2103,
											"end": 2120,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2099,
											"end": 2130,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2130,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2099,
											"end": 2130,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2132,
											"end": 2134,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 2095,
											"end": 2135,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2145,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2146,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2146,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2176,
											"end": 2194,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2195,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2161,
											"end": 2195,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2197,
											"end": 2219,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2220,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 2223,
											"end": 2241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2261,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2274,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2305,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2305,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2305,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2339,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2339,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2339,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2320,
											"end": 2344,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2317,
											"end": 2354,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2367,
											"end": 2368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 2314,
											"end": 2371,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2414,
											"end": 2416,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2410,
											"end": 2421,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2405,
											"end": 2407,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2397,
											"end": 2403,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2393,
											"end": 2408,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2380,
											"end": 2430,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 2476,
											"end": 2477,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2473,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2462,
											"end": 2468,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2460,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2450,
											"end": 2469,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2446,
											"end": 2474,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2478,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2503,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 2509,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1491,
											"end": 2509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2922,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2696,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2810,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2796,
											"end": 2805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2794,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2783,
											"end": 2806,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2779,
											"end": 2811,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2825,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2826,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 2776,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2869,
											"end": 2892,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2869,
											"end": 2892,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2696,
											"end": 2922,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2696,
											"end": 2922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3135,
											"end": 3253,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3135,
											"end": 3253,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3221,
											"end": 3226,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3214,
											"end": 3227,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3207,
											"end": 3228,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3200,
											"end": 3205,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3229,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3187,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 3187,
											"end": 3247,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3241,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3245,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3573,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 3258,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3372,
											"end": 3381,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3363,
											"end": 3370,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3359,
											"end": 3382,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3355,
											"end": 3387,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3400,
											"end": 3401,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3397,
											"end": 3398,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3402,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 3352,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3423,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3442,
											"end": 3451,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3423,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 3423,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3423,
											"end": 3452,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 3423,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3452,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3502,
											"end": 3504,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3491,
											"end": 3500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3487,
											"end": 3505,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3474,
											"end": 3506,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 3537,
											"end": 3542,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 3515,
											"end": 3543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3515,
											"end": 3543,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 3515,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3567,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3567,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3573,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3573,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 5299,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 4891,
											"end": 5299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5093,
											"end": 5095,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5075,
											"end": 5096,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5075,
											"end": 5096,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5075,
											"end": 5096,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5132,
											"end": 5134,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5105,
											"end": 5135,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5171,
											"end": 5205,
											"name": "PUSH",
											"source": 12,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 5166,
											"end": 5168,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5151,
											"end": 5169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5144,
											"end": 5206,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "19195B1959D85D1958D85B1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5239,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5222,
											"end": 5240,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5215,
											"end": 5257,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5289,
											"end": 5292,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5274,
											"end": 5293,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5274,
											"end": 5293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 5299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5712,
											"name": "tag",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 5304,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5506,
											"end": 5508,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5488,
											"end": 5509,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5509,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5488,
											"end": 5509,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5545,
											"end": 5547,
											"name": "PUSH",
											"source": 12,
											"value": "2C"
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5525,
											"end": 5543,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5518,
											"end": 5548,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5584,
											"end": 5618,
											"name": "PUSH",
											"source": 12,
											"value": "46756E6374696F6E206D7573742062652063616C6C6564207468726F75676820"
										},
										{
											"begin": 5579,
											"end": 5581,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5564,
											"end": 5582,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5564,
											"end": 5582,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5557,
											"end": 5619,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6163746976652070726F7879"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5650,
											"end": 5652,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5635,
											"end": 5653,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5635,
											"end": 5653,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5670,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5702,
											"end": 5705,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5687,
											"end": 5706,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5687,
											"end": 5706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6487,
											"end": 6614,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 6487,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6548,
											"end": 6558,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 6543,
											"end": 6546,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 6539,
											"end": 6559,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 6536,
											"end": 6537,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6529,
											"end": 6560,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6579,
											"end": 6583,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 6576,
											"end": 6577,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6569,
											"end": 6584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6607,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6600,
											"end": 6601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6593,
											"end": 6608,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6619,
											"end": 6744,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 6619,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6693,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6693,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6693,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6705,
											"end": 6715,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6705,
											"end": 6715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6705,
											"end": 6715,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6738,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6702,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 6702,
											"end": 6738,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 6718,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 6718,
											"end": 6736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7093,
											"end": 7277,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 7093,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7163,
											"end": 7169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7216,
											"end": 7218,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7204,
											"end": 7213,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7195,
											"end": 7202,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7191,
											"end": 7214,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7187,
											"end": 7219,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7184,
											"end": 7236,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7184,
											"end": 7236,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 7184,
											"end": 7236,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7229,
											"end": 7230,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7234,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7184,
											"end": 7236,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 7184,
											"end": 7236,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7255,
											"end": 7271,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7255,
											"end": 7271,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7093,
											"end": 7277,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7093,
											"end": 7277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7282,
											"end": 7450,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 7282,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7364,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7364,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7355,
											"end": 7364,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7395,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7386,
											"end": 7395,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7418,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7418,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7397,
											"end": 7419,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7397,
											"end": 7419,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7383,
											"end": 7420,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7373,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 7373,
											"end": 7444,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "320"
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 7424,
											"end": 7442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7455,
											"end": 7672,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 7455,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7495,
											"end": 7496,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7511,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7511,
											"end": 7643,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7565,
											"end": 7575,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B71"
										},
										{
											"begin": 7560,
											"end": 7563,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 7556,
											"end": 7576,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 7553,
											"end": 7554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7546,
											"end": 7577,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7600,
											"end": 7604,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7590,
											"end": 7605,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7632,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7625,
											"end": 7626,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7618,
											"end": 7633,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7511,
											"end": 7643,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 7511,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7657,
											"end": 7666,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7455,
											"end": 7672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 8201,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 7956,
											"end": 8201,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8023,
											"end": 8029,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8076,
											"end": 8078,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8064,
											"end": 8073,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8055,
											"end": 8062,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8051,
											"end": 8074,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8079,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8096,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 8044,
											"end": 8096,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8093,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8089,
											"end": 8090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8082,
											"end": 8094,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8044,
											"end": 8096,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 8044,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8133,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8143,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 8165,
											"end": 8170,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8143,
											"end": 8171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 8143,
											"end": 8171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8143,
											"end": 8171,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 8143,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8190,
											"end": 8195,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7956,
											"end": 8201,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7956,
											"end": 8201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9882,
											"end": 10289,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 9882,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10084,
											"end": 10086,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10066,
											"end": 10087,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10066,
											"end": 10087,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10066,
											"end": 10087,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10123,
											"end": 10125,
											"name": "PUSH",
											"source": 12,
											"value": "2B"
										},
										{
											"begin": 10103,
											"end": 10121,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10103,
											"end": 10121,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10103,
											"end": 10121,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10096,
											"end": 10126,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10162,
											"end": 10196,
											"name": "PUSH",
											"source": 12,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 10157,
											"end": 10159,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10142,
											"end": 10160,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10142,
											"end": 10160,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10135,
											"end": 10197,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10228,
											"end": 10230,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 10213,
											"end": 10231,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10213,
											"end": 10231,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10206,
											"end": 10247,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10279,
											"end": 10282,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 10264,
											"end": 10283,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10264,
											"end": 10283,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9882,
											"end": 10289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12083,
											"end": 12384,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 12083,
											"end": 12384,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12212,
											"end": 12215,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12250,
											"end": 12256,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12244,
											"end": 12257,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12296,
											"end": 12302,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12289,
											"end": 12293,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12281,
											"end": 12287,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12277,
											"end": 12294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12272,
											"end": 12275,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12266,
											"end": 12303,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 12358,
											"end": 12359,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12322,
											"end": 12338,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12322,
											"end": 12338,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12347,
											"end": 12360,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12322,
											"end": 12338,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12083,
											"end": 12384,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12083,
											"end": 12384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12747,
											"end": 13165,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 12747,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12896,
											"end": 12898,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12878,
											"end": 12899,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12863,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12928,
											"end": 12934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12922,
											"end": 12935,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12971,
											"end": 12977,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 12968,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12955,
											"end": 12964,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12951,
											"end": 12969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12944,
											"end": 12978,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13030,
											"end": 13036,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13027,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13017,
											"end": 13023,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13013,
											"end": 13028,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13008,
											"end": 13010,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12997,
											"end": 13006,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12993,
											"end": 13011,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12987,
											"end": 13037,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 13086,
											"end": 13087,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13081,
											"end": 13083,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13072,
											"end": 13078,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13061,
											"end": 13070,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13057,
											"end": 13079,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13053,
											"end": 13084,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13046,
											"end": 13088,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13156,
											"end": 13158,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 13149,
											"end": 13151,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13145,
											"end": 13152,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 13140,
											"end": 13142,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 13132,
											"end": 13138,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13128,
											"end": 13143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13124,
											"end": 13153,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 13113,
											"end": 13122,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 13109,
											"end": 13154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13105,
											"end": 13159,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13097,
											"end": 13159,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13097,
											"end": 13159,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13097,
											"end": 13159,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12747,
											"end": 13165,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12747,
											"end": 13165,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12747,
											"end": 13165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12747,
											"end": 13165,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12747,
											"end": 13165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
								"contracts/AlvaraDao.sol",
								"contracts/interfaces/IERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ALVA()": "323bf9f0",
							"blackListAddress(address)": "3b0e0133",
							"blackListUser(address,bool)": "e0cef1b0",
							"enter(uint256)": "a59f3e0c",
							"initialize(address,address,uint256)": "1794bb3c",
							"leave(uint256)": "67dfd4c9",
							"lockedPeriod()": "b3d6e119",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"updateLockPeriod(uint256)": "91db7b0d",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"userLockPeriod(address)": "0c8e32d2",
							"xALVA()": "6ac10901"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"BlackListUser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"xALVAReceived\",\"type\":\"uint256\"}],\"name\":\"Stake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"unstaker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"alvaReceived\",\"type\":\"uint256\"}],\"name\":\"Unstake\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedPeriod\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_lockedPeriod\",\"type\":\"uint256\"}],\"name\":\"UpdateLockPeriod\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ALVA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"blackListAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"blackListUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"enter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_alva\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_xalva\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockedPeriod\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_share\",\"type\":\"uint256\"}],\"name\":\"leave\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockedPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_lockedPeriod\",\"type\":\"uint256\"}],\"name\":\"updateLockPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xALVA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"blackListUser(address,bool)\":{\"details\":\"Used only by admin or owner, used to blacklist any user in any emergency case\",\"params\":{\"_status\":\"status of user\",\"_user\":\"address of blacklistef user\"}},\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AlvaraDao.sol\":\"AlvaraDao\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x359a1ab89b46b9aba7bcad3fb651924baf4893d15153049b9976b0fc9be1358e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e89863421b4014b96a4b62be76eb3b9f0a8afe9684664a6f389124c0964bfe5c\",\"dweb:/ipfs/Qmbk7xr1irpDuU1WdxXgxELBXxs61rHhCgod7heVcvFx16\"]},\"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol\":{\"keccak256\":\"0x47d6e06872b12e72c79d1b5eb55842f860b5fb1207b2317c2358d2766b950a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac55bf6f92fc7b90c6d79d346163a0a02bd5c648c7fede08b20e5da96d4ae2a0\",\"dweb:/ipfs/QmQoSrHhka35iKDK5iyNt8cuXXS5ANXVPjLhfsJjktB8V9\"]},\"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol\":{\"keccak256\":\"0x77c89f893e403efc6929ba842b7ccf6534d4ffe03afe31670b4a528c0ad78c0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496bd9b3df2455d571018c09f0c6badd29713fdeb907c6aa09d8d28cb603f053\",\"dweb:/ipfs/QmXdJDyYs6WMwMh21dez2BYPxhSUaUYFMDtVNcn2cgFR79\"]},\"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol\":{\"keccak256\":\"0x7795808e3899c805254e3ae58074b20f799b466e3f43e057e47bedee5fb771f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://319853a2a682f3f72411507242669ef5e76e0ad3457be53102439709ee8948f0\",\"dweb:/ipfs/QmRtm4Ese9u4jfxXyuWPXLwzenwFotuQjAWV7rXtZTB1E9\"]},\"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol\":{\"keccak256\":\"0x24b86ac8c005b8c654fbf6ac34a5a4f61580d7273541e83e013e89d66fbf0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dbfe1a3b3b3fb64294ce41fd2ad362e7b7012208117864f42c1a67620a6d5c1\",\"dweb:/ipfs/QmVMU5tWt7zBQMmf5cpMX8UMHV86T3kFeTxBTBjFqVWfoJ\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xefb41f5c1a00249b7a99f0782f8c557865605426a3fb6e5fe9ae334293ae4f33\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90def55e5782595aabc13f57780c02d3613e5226f20ce6c1709503a63fdeb58f\",\"dweb:/ipfs/Qmb5vcymmNEZUJMaHmYxnhvGJDEsGMae4YjcHwkA74jy99\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x75097e35253e7fb282ee4d7f27a80eaacfa759923185bf17302a89cbc059c5ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b06267c5f80bad727af3e48b1382333d591dad51376399ef2f6b0ee6d58bf95\",\"dweb:/ipfs/QmdU5La1agcQvghnfMpWZGDPz2TUDTCxUwTLKmuMRXBpAx\"]},\"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol\":{\"keccak256\":\"0x07ac95acad040f1fb1f6120dd0aa5f702db69446e95f82613721879d30de0908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9df9de7b5da1d1bd3d4b6c073d0174bc4211db60e794a321c8cb5d4eae34685\",\"dweb:/ipfs/QmWe49zj65jayrCe9jZpoWhYUZ1RiwSxyU2s7SBZnMztVy\"]},\"contracts/AlvaraDao.sol\":{\"keccak256\":\"0x914998417b825d0e9edfee9f7179bde3e9dc3a49693869b5d7da70cb31d33f8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a56246ae96810c3b50b2e66bbd32d6a19e78cd0d1047d7545a2f5d82caa9003\",\"dweb:/ipfs/QmenxYZpWEyETxgQgNReHvwhohHmPwWS8ipjrf5dRP7yhK\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x8bc93fd43424907389fc5a562f9ff329b67b2701c99c036a655ae14503880bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bd7d0172b4a5d639fc48a7a159880510e30073ff03d782a238d4073b5c19bf8\",\"dweb:/ipfs/QmQ2zryoqxdUxSjCtrwu6bkY5Bwo86fZJY3EEiP3TU85mB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 505,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 508,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1184,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 11,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 131,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 487,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "__gap",
								"offset": 0,
								"slot": "101",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 803,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "__gap",
								"offset": 0,
								"slot": "151",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1310,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "ALVA",
								"offset": 0,
								"slot": "201",
								"type": "t_contract(IERC20)1718"
							},
							{
								"astId": 1313,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "xALVA",
								"offset": 0,
								"slot": "202",
								"type": "t_contract(IERC20)1718"
							},
							{
								"astId": 1317,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "userLockPeriod",
								"offset": 0,
								"slot": "203",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1321,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "blackListAddress",
								"offset": 0,
								"slot": "204",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1323,
								"contract": "contracts/AlvaraDao.sol:AlvaraDao",
								"label": "lockedPeriod",
								"offset": 0,
								"slot": "205",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)1718": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"burnTokens(address,uint256)": "0d1118ce",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x8bc93fd43424907389fc5a562f9ff329b67b2701c99c036a655ae14503880bc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bd7d0172b4a5d639fc48a7a159880510e30073ff03d782a238d4073b5c19bf8\",\"dweb:/ipfs/QmQ2zryoqxdUxSjCtrwu6bkY5Bwo86fZJY3EEiP3TU85mB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1185
						],
						"Initializable": [
							667
						],
						"OwnableUpgradeable": [
							132
						]
					},
					"id": 133,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 1186,
							"src": "127:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 133,
							"sourceUnit": 668,
							"src": "169:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 667,
										"src": "177:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Initializable",
										"nameLocations": [
											"769:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 667,
										"src": "769:13:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "769:13:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"784:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1185,
										"src": "784:18:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "784:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "234:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132,
								1185,
								667
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "747:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "825:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "809:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "809:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 17,
									"name": "OwnershipTransferred",
									"nameLocation": "844:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "881:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "865:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "912:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "896:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "864:57:0"
									},
									"src": "838:84:0"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "1076:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 23,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1086:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "1086:26:0"
											}
										]
									},
									"documentation": {
										"id": 18,
										"nodeType": "StructuredDocumentation",
										"src": "928:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 27,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 21,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 20,
												"name": "onlyInitializing",
												"nameLocations": [
													"1059:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 612,
												"src": "1059:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1059:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1033:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1076:0:0"
									},
									"scope": 132,
									"src": "1024:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "1187:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 33,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "1216:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1216:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 32,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1197:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "1197:32:0"
											}
										]
									},
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 30,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 29,
												"name": "onlyInitializing",
												"nameLocations": [
													"1170:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 612,
												"src": "1170:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1170:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1134:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1158:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1187:0:0"
									},
									"scope": 132,
									"src": "1125:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1345:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 41,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "1355:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1355:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1355:13:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1378:1:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "1242:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1333:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1342:2:0"
									},
									"src": "1324:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "1517:30:0",
										"statements": [
											{
												"expression": {
													"id": 52,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "1534:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 51,
												"id": 53,
												"nodeType": "Return",
												"src": "1527:13:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1392:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 55,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1471:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1476:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 55,
												"src": "1508:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:9:0"
									},
									"scope": 132,
									"src": "1462:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1665:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 60,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 55,
																	"src": "1683:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1683:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 62,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "1694:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1694:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1683:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1708:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 59,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1675:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1675:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "1675:68:0"
											}
										]
									},
									"documentation": {
										"id": 56,
										"nodeType": "StructuredDocumentation",
										"src": "1553:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1629:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1640:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1665:0:0"
									},
									"scope": 132,
									"src": "1620:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "2139:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2176:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2168:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 76,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 79,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2168:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 75,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "2149:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2149:30:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "1756:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 73,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 72,
												"name": "onlyOwner",
												"nameLocations": [
													"2129:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2129:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2129:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2094:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2111:2:0"
									},
									"returnParameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2139:0:0"
									},
									"scope": 132,
									"src": "2085:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "2405:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 92,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "2423:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 95,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2443:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2435:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 93,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2435:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2435:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2423:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2447:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2415:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2415:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "ExpressionStatement",
												"src": "2415:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 102,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "2517:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "2498:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2498:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2498:28:0"
											}
										]
									},
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "2192:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 89,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 88,
												"name": "onlyOwner",
												"nameLocations": [
													"2395:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2395:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2395:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2344:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2370:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "2362:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2361:18:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2405:0:0"
									},
									"scope": 132,
									"src": "2335:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2750:124:0",
										"statements": [
											{
												"assignments": [
													113
												],
												"declarations": [
													{
														"constant": false,
														"id": 113,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2768:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 125,
														"src": "2760:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 112,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2760:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"id": 114,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 11,
													"src": "2779:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2760:25:0"
											},
											{
												"expression": {
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 116,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "2795:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 117,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "2804:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2795:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "2795:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 121,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "2848:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "2858:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 120,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "2827:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2827:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "EmitStatement",
												"src": "2822:45:0"
											}
										]
									},
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "2539:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2696:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2723:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2715:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:18:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2750:0:0"
									},
									"scope": 132,
									"src": "2687:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2880:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 131,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3159:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "3139:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 128,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3139:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 130,
										"length": {
											"hexValue": "3439",
											"id": 129,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3147:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3139:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 133,
							"src": "729:2438:0",
							"usedErrors": [],
							"usedEvents": [
								17,
								513
							]
						}
					],
					"src": "102:3066:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
					"exportedSymbols": {
						"IERC1967Upgradeable": [
							153
						]
					},
					"id": 154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 134,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 135,
								"nodeType": "StructuredDocumentation",
								"src": "132:133:1",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n _Available since v4.8.3._"
							},
							"fullyImplemented": true,
							"id": 153,
							"linearizedBaseContracts": [
								153
							],
							"name": "IERC1967Upgradeable",
							"nameLocation": "276:19:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "302:68:1",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 140,
									"name": "Upgraded",
									"nameLocation": "381:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "406:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "390:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "390:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:32:1"
									},
									"src": "375:47:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "428:67:1",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 147,
									"name": "AdminChanged",
									"nameLocation": "506:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "527:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "519:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "550:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "542:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "542:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:41:1"
									},
									"src": "500:60:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "566:59:1",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 152,
									"name": "BeaconUpgraded",
									"nameLocation": "636:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "667:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "651:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:24:1"
									},
									"src": "630:45:1"
								}
							],
							"scope": 154,
							"src": "266:411:1",
							"usedErrors": [],
							"usedEvents": [
								140,
								147,
								152
							]
						}
					],
					"src": "107:571:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
					"exportedSymbols": {
						"IERC1822ProxiableUpgradeable": [
							163
						]
					},
					"id": 164,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822ProxiableUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "138:203:2",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 163,
							"linearizedBaseContracts": [
								163
							],
							"name": "IERC1822ProxiableUpgradeable",
							"nameLocation": "352:28:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "387:438:2",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "839:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "852:2:2"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "878:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 159,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:9:2"
									},
									"scope": 163,
									"src": "830:57:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 164,
							"src": "342:547:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:777:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1134
						],
						"ERC1967UpgradeUpgradeable": [
							488
						],
						"IBeaconUpgradeable": [
							498
						],
						"IERC1822ProxiableUpgradeable": [
							163
						],
						"IERC1967Upgradeable": [
							153
						],
						"Initializable": [
							667
						],
						"StorageSlotUpgradeable": [
							1295
						]
					},
					"id": 489,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 165,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
							"file": "../beacon/IBeaconUpgradeable.sol",
							"id": 166,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 489,
							"sourceUnit": 499,
							"src": "141:42:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/IERC1967Upgradeable.sol",
							"file": "../../interfaces/IERC1967Upgradeable.sol",
							"id": 167,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 489,
							"sourceUnit": 154,
							"src": "184:50:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 489,
							"sourceUnit": 164,
							"src": "235:56:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 169,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 489,
							"sourceUnit": 1135,
							"src": "292:44:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
							"file": "../../utils/StorageSlotUpgradeable.sol",
							"id": 170,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 489,
							"sourceUnit": 1296,
							"src": "337:48:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../utils/Initializable.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 489,
							"sourceUnit": 668,
							"src": "386:57:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 667,
										"src": "394:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 174,
										"name": "Initializable",
										"nameLocations": [
											"677:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 667,
										"src": "677:13:3"
									},
									"id": 175,
									"nodeType": "InheritanceSpecifier",
									"src": "677:13:3"
								},
								{
									"baseName": {
										"id": 176,
										"name": "IERC1967Upgradeable",
										"nameLocations": [
											"692:19:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 153,
										"src": "692:19:3"
									},
									"id": 177,
									"nodeType": "InheritanceSpecifier",
									"src": "692:19:3"
								}
							],
							"canonicalName": "ERC1967UpgradeUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 173,
								"nodeType": "StructuredDocumentation",
								"src": "445:184:3",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._"
							},
							"fullyImplemented": true,
							"id": 488,
							"linearizedBaseContracts": [
								488,
								153,
								667
							],
							"name": "ERC1967UpgradeUpgradeable",
							"nameLocation": "648:25:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 180,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "822:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 488,
									"src": "797:108:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 178,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "797:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 179,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "839:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "912:214:3",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 184,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "1157:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 488,
									"src": "1131:115:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 182,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1131:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 183,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1180:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "1312:7:3",
										"statements": []
									},
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 187,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 186,
												"name": "onlyInitializing",
												"nameLocations": [
													"1295:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 612,
												"src": "1295:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1295:16:3"
										}
									],
									"name": "__ERC1967Upgrade_init",
									"nameLocation": "1262:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:2:3"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:0:3"
									},
									"scope": 488,
									"src": "1253:66:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 195,
										"nodeType": "Block",
										"src": "1394:7:3",
										"statements": []
									},
									"id": 196,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 192,
												"name": "onlyInitializing",
												"nameLocations": [
													"1377:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 612,
												"src": "1377:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1377:16:3"
										}
									],
									"name": "__ERC1967Upgrade_init_unchained",
									"nameLocation": "1334:31:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1365:2:3"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1394:0:3"
									},
									"scope": 488,
									"src": "1325:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "1540:89:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 204,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "1595:20:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 202,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "1557:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1295_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1580:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1217,
															"src": "1557:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1191_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1557:59:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1191_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1617:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1190,
													"src": "1557:65:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 201,
												"id": 207,
												"nodeType": "Return",
												"src": "1550:72:3"
											}
										]
									},
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "1406:67:3",
										"text": " @dev Returns the current implementation address."
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1487:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1505:2:3"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1531:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1531:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1530:9:3"
									},
									"scope": 488,
									"src": "1478:151:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 232,
										"nodeType": "Block",
										"src": "1783:218:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 218,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 212,
																	"src": "1831:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 216,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "1801:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1134_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1820:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 822,
																"src": "1801:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1801:48:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1851:47:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1793:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1793:106:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "1793:106:3"
											},
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 226,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 184,
																	"src": "1947:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 223,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "1909:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1295_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1932:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1217,
																"src": "1909:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1191_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1909:59:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1191_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 228,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1969:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1190,
														"src": "1909:65:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 229,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "1977:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1909:85:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1909:85:3"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1635:80:3",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1729:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1756:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 233,
												"src": "1748:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1747:27:3"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1783:0:3"
									},
									"scope": 488,
									"src": "1720:281:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "2163:96:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2192:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 239,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "2173:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2173:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2173:37:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 244,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2234:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 243,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2225:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2225:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "EmitStatement",
												"src": "2220:32:3"
											}
										]
									},
									"documentation": {
										"id": 234,
										"nodeType": "StructuredDocumentation",
										"src": "2007:95:3",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "2116:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2135:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "2127:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2126:27:3"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2163:0:3"
									},
									"scope": 488,
									"src": "2107:152:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "2491:178:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 259,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "2512:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 258,
														"name": "_upgradeTo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2501:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2501:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2501:29:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 262,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "2544:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2549:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2544:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2558:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2544:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 266,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 255,
														"src": "2563:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2544:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 276,
												"nodeType": "IfStatement",
												"src": "2540:123:3",
												"trueBody": {
													"id": 275,
													"nodeType": "Block",
													"src": "2574:89:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 271,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 251,
																		"src": "2628:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 272,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "2647:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 268,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "2588:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1134_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2607:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1021,
																	"src": "2588:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2588:64:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 274,
															"nodeType": "ExpressionStatement",
															"src": "2588:64:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "2265:123:3",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2402:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2428:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2420:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2420:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2460:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2447:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 252,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2447:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2471:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2466:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 254,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2466:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:62:3"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2491:0:3"
									},
									"scope": 488,
									"src": "2393:276:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 330,
										"nodeType": "Block",
										"src": "2943:842:3",
										"statements": [
											{
												"condition": {
													"expression": {
														"arguments": [
															{
																"id": 290,
																"name": "_ROLLBACK_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 180,
																"src": "3295:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 288,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "3257:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1295_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3280:14:3",
															"memberName": "getBooleanSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1228,
															"src": "3257:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$1194_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.BooleanSlot storage pointer)"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3257:53:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$1194_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.BooleanSlot storage pointer"
														}
													},
													"id": 292,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3311:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1193,
													"src": "3257:59:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 328,
													"nodeType": "Block",
													"src": "3386:393:3",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 313,
																		"nodeType": "Block",
																		"src": "3491:115:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							},
																							"id": 309,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 307,
																								"name": "slot",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 304,
																								"src": "3517:4:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "==",
																							"rightExpression": {
																								"id": 308,
																								"name": "_IMPLEMENTATION_SLOT",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 184,
																								"src": "3525:20:3",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes32",
																									"typeString": "bytes32"
																								}
																							},
																							"src": "3517:28:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						{
																							"hexValue": "45524331393637557067726164653a20756e737570706f727465642070726f786961626c6555554944",
																							"id": 310,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3547:43:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							},
																							"value": "ERC1967Upgrade: unsupported proxiableUUID"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							{
																								"typeIdentifier": "t_stringliteral_76b6b6debfc5febf101145a79ecf0b0d2e89e397dfdab2bca99888370411152c",
																								"typeString": "literal_string \"ERC1967Upgrade: unsupported proxiableUUID\""
																							}
																						],
																						"id": 306,
																						"name": "require",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967278,
																							4294967278,
																							4294967278
																						],
																						"referencedDeclaration": 4294967278,
																						"src": "3509:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (bool,string memory) pure"
																						}
																					},
																					"id": 311,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3509:82:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 312,
																				"nodeType": "ExpressionStatement",
																				"src": "3509:82:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 314,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 305,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 304,
																				"mutability": "mutable",
																				"name": "slot",
																				"nameLocation": "3485:4:3",
																				"nodeType": "VariableDeclaration",
																				"scope": 314,
																				"src": "3477:12:3",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 303,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "3477:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "3476:14:3"
																	},
																	"src": "3468:138:3"
																},
																{
																	"block": {
																		"id": 319,
																		"nodeType": "Block",
																		"src": "3613:89:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "45524331393637557067726164653a206e657720696d706c656d656e746174696f6e206973206e6f742055555053",
																							"id": 316,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "3638:48:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							},
																							"value": "ERC1967Upgrade: new implementation is not UUPS"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_8e8e2fbcb586f700b5b14e2c4a650c8d83b9773c31c5fe8962070ea544e11f24",
																								"typeString": "literal_string \"ERC1967Upgrade: new implementation is not UUPS\""
																							}
																						],
																						"id": 315,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "3631:6:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3631:56:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 318,
																				"nodeType": "ExpressionStatement",
																				"src": "3631:56:3"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 320,
																	"nodeType": "TryCatchClause",
																	"src": "3607:95:3"
																}
															],
															"externalCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 299,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 281,
																				"src": "3433:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 298,
																			"name": "IERC1822ProxiableUpgradeable",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "3404:28:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1822ProxiableUpgradeable_$163_$",
																				"typeString": "type(contract IERC1822ProxiableUpgradeable)"
																			}
																		},
																		"id": 300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3404:47:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1822ProxiableUpgradeable_$163",
																			"typeString": "contract IERC1822ProxiableUpgradeable"
																		}
																	},
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3452:13:3",
																	"memberName": "proxiableUUID",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 162,
																	"src": "3404:61:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
																		"typeString": "function () view external returns (bytes32)"
																	}
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3404:63:3",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 321,
															"nodeType": "TryStatement",
															"src": "3400:302:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 323,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "3733:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 324,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 283,
																		"src": "3752:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 325,
																		"name": "forceCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "3758:9:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 322,
																	"name": "_upgradeToAndCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "3715:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
																		"typeString": "function (address,bytes memory,bool)"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3715:53:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 327,
															"nodeType": "ExpressionStatement",
															"src": "3715:53:3"
														}
													]
												},
												"id": 329,
												"nodeType": "IfStatement",
												"src": "3253:526:3",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "3318:62:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 294,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "3351:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 293,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "3332:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3332:37:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 296,
															"nodeType": "ExpressionStatement",
															"src": "3332:37:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2675:161:3",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "2850:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2880:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2872:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2872:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2912:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2899:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2899:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2923:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 331,
												"src": "2918:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2918:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2871:62:3"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2943:0:3"
									},
									"scope": 488,
									"src": "2841:944:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 332,
										"nodeType": "StructuredDocumentation",
										"src": "3791:189:3",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 335,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "4011:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 488,
									"src": "3985:106:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 333,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3985:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 334,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4025:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "4206:80:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 343,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 335,
																"src": "4261:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 341,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "4223:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1295_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4246:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1217,
															"src": "4223:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1191_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4223:50:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1191_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4274:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1190,
													"src": "4223:56:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 340,
												"id": 346,
												"nodeType": "Return",
												"src": "4216:63:3"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "4098:50:3",
										"text": " @dev Returns the current admin."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4162:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4171:2:3"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "4197:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4197:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4196:9:3"
									},
									"scope": 488,
									"src": "4153:133:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "4413:167:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "4431:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4451:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4443:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4443:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4443:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4431:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4455:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4423:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4423:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4423:73:3"
											},
											{
												"expression": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 367,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "4544:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 364,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "4506:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1295_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4529:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1217,
																"src": "4506:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1191_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4506:50:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1191_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 369,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4557:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1190,
														"src": "4506:56:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 370,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "4565:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4506:67:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "4506:67:3"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "4292:71:3",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4377:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4395:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "4387:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4387:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4386:18:3"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4413:0:3"
									},
									"scope": 488,
									"src": "4368:212:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "4740:86:3",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 381,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "4768:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4768:11:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4781:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 380,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "4755:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4755:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "EmitStatement",
												"src": "4750:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "4810:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 386,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 374,
														"src": "4800:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4800:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "4800:19:3"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "4586:100:3",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "4700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4721:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "4713:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4712:18:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4740:0:3"
									},
									"scope": 488,
									"src": "4691:135:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "4832:232:3",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 395,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5095:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 488,
									"src": "5069:107:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 393,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5069:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 394,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5110:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "5293:81:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 403,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 395,
																"src": "5348:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 401,
																"name": "StorageSlotUpgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1295,
																"src": "5310:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1295_$",
																	"typeString": "type(library StorageSlotUpgradeable)"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5333:14:3",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1217,
															"src": "5310:37:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1191_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5310:51:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1191_storage_ptr",
															"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5362:5:3",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1190,
													"src": "5310:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 400,
												"id": 406,
												"nodeType": "Return",
												"src": "5303:64:3"
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "5183:51:3",
										"text": " @dev Returns the current beacon."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "5248:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5258:2:3"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "5284:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5283:9:3"
									},
									"scope": 488,
									"src": "5239:135:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "5503:368:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 417,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 411,
																	"src": "5551:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 415,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "5521:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1134_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5540:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 822,
																"src": "5521:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5521:40:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5563:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5513:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5513:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "5513:90:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 426,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 411,
																					"src": "5683:9:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 425,
																				"name": "IBeaconUpgradeable",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 498,
																				"src": "5664:18:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$498_$",
																					"typeString": "type(contract IBeaconUpgradeable)"
																				}
																			},
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5664:29:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeaconUpgradeable_$498",
																				"typeString": "contract IBeaconUpgradeable"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5694:14:3",
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 497,
																		"src": "5664:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5664:46:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 423,
																	"name": "AddressUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "5634:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1134_$",
																		"typeString": "type(library AddressUpgradeable)"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5653:10:3",
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 822,
																"src": "5634:29:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5634:77:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5725:50:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 422,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5613:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5613:172:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 433,
												"nodeType": "ExpressionStatement",
												"src": "5613:172:3"
											},
											{
												"expression": {
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 437,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5833:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 434,
																	"name": "StorageSlotUpgradeable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1295,
																	"src": "5795:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlotUpgradeable_$1295_$",
																		"typeString": "type(library StorageSlotUpgradeable)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5818:14:3",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1217,
																"src": "5795:37:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1191_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlotUpgradeable.AddressSlot storage pointer)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5795:51:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1191_storage_ptr",
																"typeString": "struct StorageSlotUpgradeable.AddressSlot storage pointer"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5847:5:3",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1190,
														"src": "5795:57:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 440,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "5855:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5795:69:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 442,
												"nodeType": "ExpressionStatement",
												"src": "5795:69:3"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "5380:71:3",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5465:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5484:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "5476:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5476:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5475:19:3"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5503:0:3"
									},
									"scope": 488,
									"src": "5456:415:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "6270:239:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "6291:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 454,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "6280:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6280:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 457,
												"nodeType": "ExpressionStatement",
												"src": "6280:21:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 459,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "6331:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 458,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 152,
														"src": "6316:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6316:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "EmitStatement",
												"src": "6311:30:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 462,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 449,
																"src": "6355:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6360:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "6355:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6369:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6355:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 466,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "6374:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6355:28:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "6351:152:3",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "6385:118:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 472,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 447,
																						"src": "6458:9:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 471,
																					"name": "IBeaconUpgradeable",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "6439:18:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeaconUpgradeable_$498_$",
																						"typeString": "type(contract IBeaconUpgradeable)"
																					}
																				},
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6439:29:3",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeaconUpgradeable_$498",
																					"typeString": "contract IBeaconUpgradeable"
																				}
																			},
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6469:14:3",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 497,
																			"src": "6439:44:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6439:46:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 476,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 449,
																		"src": "6487:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 468,
																		"name": "AddressUpgradeable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "6399:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1134_$",
																			"typeString": "type(library AddressUpgradeable)"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6418:20:3",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1021,
																	"src": "6399:39:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6399:93:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "6399:93:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "5877:292:3",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "6183:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6215:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "6207:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6207:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6239:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "6226:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6226:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "6250:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "6245:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6245:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6206:54:3"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6270:0:3"
									},
									"scope": 488,
									"src": "6174:335:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "6515:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 487,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "6794:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 488,
									"src": "6774:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 484,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "6774:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 486,
										"length": {
											"hexValue": "3530",
											"id": 485,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "6782:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "6774:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 489,
							"src": "630:6172:3",
							"usedErrors": [],
							"usedEvents": [
								140,
								147,
								152,
								513
							]
						}
					],
					"src": "116:6687:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol",
					"exportedSymbols": {
						"IBeaconUpgradeable": [
							498
						]
					},
					"id": 499,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 490,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "93:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeaconUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 491,
								"nodeType": "StructuredDocumentation",
								"src": "118:79:4",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 498,
							"linearizedBaseContracts": [
								498
							],
							"name": "IBeaconUpgradeable",
							"nameLocation": "208:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "233:162:4",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 497,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "409:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "423:2:4"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "449:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:9:4"
									},
									"scope": 498,
									"src": "400:58:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 499,
							"src": "198:262:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "93:368:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1134
						],
						"Initializable": [
							667
						]
					},
					"id": 668,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 500,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "113:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
							"file": "../../utils/AddressUpgradeable.sol",
							"id": 501,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 668,
							"sourceUnit": 1135,
							"src": "138:44:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 502,
								"nodeType": "StructuredDocumentation",
								"src": "184:2209:5",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 667,
							"linearizedBaseContracts": [
								667
							],
							"name": "Initializable",
							"nameLocation": "2412:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "2432:109:5",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 505,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "2560:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "2546:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 504,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2546:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2579:91:5",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 508,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "2688:13:5",
									"nodeType": "VariableDeclaration",
									"scope": 667,
									"src": "2675:26:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 507,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2675:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "2708:90:5",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 513,
									"name": "Initialized",
									"nameLocation": "2809:11:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "2827:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "2821:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 510,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2821:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2820:15:5"
									},
									"src": "2803:33:5"
								},
								{
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "3269:483:5",
										"statements": [
											{
												"assignments": [
													517
												],
												"declarations": [
													{
														"constant": false,
														"id": 517,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "3284:14:5",
														"nodeType": "VariableDeclaration",
														"scope": 568,
														"src": "3279:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 516,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3279:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3301:14:5",
													"subExpression": {
														"id": 518,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "3302:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3279:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 522,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "3347:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 523,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "3365:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 524,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3380:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3365:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3347:34:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 527,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3346:36:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "3387:45:5",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 532,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "3426:4:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$667",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$667",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 531,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "3418:7:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 530,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "3418:7:5",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "3418:13:5",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 528,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1134,
																						"src": "3388:18:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$1134_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 529,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3407:10:5",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 822,
																					"src": "3388:29:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3388:44:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 538,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 536,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 505,
																				"src": "3436:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 537,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3452:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "3436:17:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3387:66:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 540,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3386:68:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3346:108:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3468:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 521,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3325:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3325:201:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "3325:201:5"
											},
											{
												"expression": {
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 545,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "3536:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3551:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3536:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "3536:16:5"
											},
											{
												"condition": {
													"id": 549,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 517,
													"src": "3566:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 555,
												"nodeType": "IfStatement",
												"src": "3562:65:5",
												"trueBody": {
													"id": 554,
													"nodeType": "Block",
													"src": "3582:45:5",
													"statements": [
														{
															"expression": {
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 550,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "3596:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3612:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3596:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 553,
															"nodeType": "ExpressionStatement",
															"src": "3596:20:5"
														}
													]
												}
											},
											{
												"id": 556,
												"nodeType": "PlaceholderStatement",
												"src": "3636:1:5"
											},
											{
												"condition": {
													"id": 557,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 517,
													"src": "3651:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 567,
												"nodeType": "IfStatement",
												"src": "3647:99:5",
												"trueBody": {
													"id": 566,
													"nodeType": "Block",
													"src": "3667:79:5",
													"statements": [
														{
															"expression": {
																"id": 560,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 558,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "3681:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3697:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3681:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 561,
															"nodeType": "ExpressionStatement",
															"src": "3681:21:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3733:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 562,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "3721:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3721:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 565,
															"nodeType": "EmitStatement",
															"src": "3716:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "2842:399:5",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 569,
									"name": "initializer",
									"nameLocation": "3255:11:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3266:2:5"
									},
									"src": "3246:506:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "4863:255:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "4881:14:5",
																"subExpression": {
																	"id": 575,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "4882:13:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 577,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "4899:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 578,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 572,
																	"src": "4914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "4899:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4881:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4873:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:99:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "4873:99:5"
											},
											{
												"expression": {
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 584,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "4982:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 585,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "4997:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "4982:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "4982:22:5"
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 588,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "5014:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5030:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5014:20:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "5014:20:5"
											},
											{
												"id": 592,
												"nodeType": "PlaceholderStatement",
												"src": "5044:1:5"
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 593,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "5055:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5071:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5055:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "5055:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 598,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "5103:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 597,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "5091:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5091:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 600,
												"nodeType": "EmitStatement",
												"src": "5086:25:5"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "3758:1062:5",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 602,
									"name": "reinitializer",
									"nameLocation": "4834:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "4854:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "4848:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 571,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4848:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4847:15:5"
									},
									"src": "4825:293:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "5356:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 606,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5374:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5389:45:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 605,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5366:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5366:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "5366:69:5"
											},
											{
												"id": 610,
												"nodeType": "PlaceholderStatement",
												"src": "5445:1:5"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "5124:199:5",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 612,
									"name": "onlyInitializing",
									"nameLocation": "5337:16:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5353:2:5"
									},
									"src": "5328:125:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "5988:231:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6006:14:5",
															"subExpression": {
																"id": 617,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "6007:13:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6022:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 616,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5998:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:66:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 621,
												"nodeType": "ExpressionStatement",
												"src": "5998:66:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 622,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "6078:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6099:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 624,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "6099:5:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 623,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6094:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6094:11:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6106:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6094:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "6078:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 646,
												"nodeType": "IfStatement",
												"src": "6074:139:5",
												"trueBody": {
													"id": 645,
													"nodeType": "Block",
													"src": "6111:102:5",
													"statements": [
														{
															"expression": {
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 629,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "6125:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 632,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6145:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 631,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "6145:5:5",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 630,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "6140:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6140:11:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "6152:3:5",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "6140:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "6125:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 636,
															"nodeType": "ExpressionStatement",
															"src": "6125:30:5"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "6191:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 639,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "6191:5:5",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 638,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "6186:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6186:11:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6198:3:5",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "6186:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 637,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 513,
																	"src": "6174:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 644,
															"nodeType": "EmitStatement",
															"src": "6169:33:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "5459:475:5",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "5948:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5968:2:5"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5988:0:5"
									},
									"scope": 667,
									"src": "5939:280:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "6393:36:5",
										"statements": [
											{
												"expression": {
													"id": 654,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 505,
													"src": "6410:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 653,
												"id": 655,
												"nodeType": "Return",
												"src": "6403:19:5"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "6225:99:5",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "6338:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6360:2:5"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "6386:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 651,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6386:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6385:7:5"
									},
									"scope": 667,
									"src": "6329:100:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "6601:37:5",
										"statements": [
											{
												"expression": {
													"id": 663,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 508,
													"src": "6618:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 662,
												"id": 664,
												"nodeType": "Return",
												"src": "6611:20:5"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "6435:105:5",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "6554:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6569:2:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "6595:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 660,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6595:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6594:6:5"
									},
									"scope": 667,
									"src": "6545:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 668,
							"src": "2394:4246:5",
							"usedErrors": [],
							"usedEvents": [
								513
							]
						}
					],
					"src": "113:6528:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1134
						],
						"ERC1967UpgradeUpgradeable": [
							488
						],
						"IBeaconUpgradeable": [
							498
						],
						"IERC1822ProxiableUpgradeable": [
							163
						],
						"IERC1967Upgradeable": [
							153
						],
						"Initializable": [
							667
						],
						"StorageSlotUpgradeable": [
							1295
						],
						"UUPSUpgradeable": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 669,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol",
							"file": "../../interfaces/draft-IERC1822Upgradeable.sol",
							"id": 670,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 805,
							"sourceUnit": 164,
							"src": "140:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol",
							"file": "../ERC1967/ERC1967UpgradeUpgradeable.sol",
							"id": 671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 805,
							"sourceUnit": 489,
							"src": "197:50:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 805,
							"sourceUnit": 668,
							"src": "248:50:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 672,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 667,
										"src": "256:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 675,
										"name": "Initializable",
										"nameLocations": [
											"986:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 667,
										"src": "986:13:6"
									},
									"id": 676,
									"nodeType": "InheritanceSpecifier",
									"src": "986:13:6"
								},
								{
									"baseName": {
										"id": 677,
										"name": "IERC1822ProxiableUpgradeable",
										"nameLocations": [
											"1001:28:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 163,
										"src": "1001:28:6"
									},
									"id": 678,
									"nodeType": "InheritanceSpecifier",
									"src": "1001:28:6"
								},
								{
									"baseName": {
										"id": 679,
										"name": "ERC1967UpgradeUpgradeable",
										"nameLocations": [
											"1031:25:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 488,
										"src": "1031:25:6"
									},
									"id": 680,
									"nodeType": "InheritanceSpecifier",
									"src": "1031:25:6"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 674,
								"nodeType": "StructuredDocumentation",
								"src": "300:648:6",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 804,
							"linearizedBaseContracts": [
								804,
								488,
								153,
								163,
								667
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "967:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "1063:87:6",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable state-variable-assignment"
									},
									"id": 687,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1181:6:6",
									"nodeType": "VariableDeclaration",
									"scope": 804,
									"src": "1155:48:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 682,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1155:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 685,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1198:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$804",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$804",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 684,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1190:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 683,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1190:7:6",
												"typeDescriptions": {}
											}
										},
										"id": 686,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1190:13:6",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 709,
										"nodeType": "Block",
										"src": "1729:205:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 693,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1755:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$804",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$804",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1747:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 691,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1747:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1747:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 695,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "1764:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1747:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1772:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															},
															"value": "Function must be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36e108fa7a809b52ab1951dd91c117a7bc9ac5250bdf1aa162d4e104f7edf9eb",
																"typeString": "literal_string \"Function must be called through delegatecall\""
															}
														],
														"id": 690,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1739:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1739:80:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "1739:80:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 701,
																	"name": "_getImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "1837:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:20:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 703,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "1861:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1837:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6374696f6e206d7573742062652063616c6c6564207468726f756768206163746976652070726f7879",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1869:46:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															},
															"value": "Function must be called through active proxy"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52f1ead4d9653e13afbd2e90ef2587c30187cd50b2e97d784e3f7a7541247434",
																"typeString": "literal_string \"Function must be called through active proxy\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1829:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1829:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "1829:87:6"
											},
											{
												"id": 708,
												"nodeType": "PlaceholderStatement",
												"src": "1926:1:6"
											}
										]
									},
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1210:493:6",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 710,
									"name": "onlyProxy",
									"nameLocation": "1717:9:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1726:2:6"
									},
									"src": "1708:226:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "2164:120:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 716,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2190:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$804",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_UUPSUpgradeable_$804",
																			"typeString": "contract UUPSUpgradeable"
																		}
																	],
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2182:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 714,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2182:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2182:13:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 718,
																"name": "__self",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "2199:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2182:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "555550535570677261646561626c653a206d757374206e6f742062652063616c6c6564207468726f7567682064656c656761746563616c6c",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2207:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															},
															"value": "UUPSUpgradeable: must not be called through delegatecall"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67f0151b4ad1dcfa0e3302a0cd6019f51582ef1807b37dceb00bd852a514f7f4",
																"typeString": "literal_string \"UUPSUpgradeable: must not be called through delegatecall\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2174:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:92:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "2174:92:6"
											},
											{
												"id": 723,
												"nodeType": "PlaceholderStatement",
												"src": "2276:1:6"
											}
										]
									},
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "1940:195:6",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 725,
									"name": "notDelegated",
									"nameLocation": "2149:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:2:6"
									},
									"src": "2140:144:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "2350:7:6",
										"statements": []
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 728,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 727,
												"name": "onlyInitializing",
												"nameLocations": [
													"2333:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 612,
												"src": "2333:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2333:16:6"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2299:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:6"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2350:0:6"
									},
									"scope": 804,
									"src": "2290:67:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "2433:7:6",
										"statements": []
									},
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 734,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 733,
												"name": "onlyInitializing",
												"nameLocations": [
													"2416:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 612,
												"src": "2416:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2416:16:6"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "2372:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2404:2:6"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2433:0:6"
									},
									"scope": 804,
									"src": "2363:77:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										162
									],
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "3114:44:6",
										"statements": [
											{
												"expression": {
													"id": 746,
													"name": "_IMPLEMENTATION_SLOT",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 184,
													"src": "3131:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 745,
												"id": 747,
												"nodeType": "Return",
												"src": "3124:27:6"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "2445:577:6",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 742,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 741,
												"name": "notDelegated",
												"nameLocations": [
													"3083:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 725,
												"src": "3083:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3083:12:6"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3036:13:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 740,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3074:8:6"
									},
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "3105:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 743,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3104:9:6"
									},
									"scope": 804,
									"src": "3027:131:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "3479:124:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3507:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 757,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "3489:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3489:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "3489:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 762,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "3557:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3586:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3576:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 763,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3580:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3576:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3590:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 761,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "3535:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3535:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "3535:61:6"
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "3164:239:6",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "3659cfe6",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 755,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 754,
												"name": "onlyProxy",
												"nameLocations": [
													"3469:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 710,
												"src": "3469:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3469:9:6"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3417:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3435:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "3427:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:27:6"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3479:0:6"
									},
									"scope": 804,
									"src": "3408:195:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "4027:115:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 782,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "4055:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 781,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4037:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "4037:36:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 786,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "4105:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "4124:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4130:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 785,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "4083:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4083:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "4083:52:6"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "3609:308:6",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 779,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 778,
												"name": "onlyProxy",
												"nameLocations": [
													"4017:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 710,
												"src": "4017:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4017:9:6"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "3931:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3956:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3948:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3988:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "3975:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3975:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:46:6"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4027:0:6"
									},
									"scope": 804,
									"src": "3922:220:6",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "4148:397:6",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeTo} and {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal override onlyOwner {}\n ```"
									},
									"id": 798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "4559:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4585:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "4577:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4577:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4576:27:6"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4620:0:6"
									},
									"scope": 804,
									"src": "4550:71:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 799,
										"nodeType": "StructuredDocumentation",
										"src": "4627:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 803,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "4906:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 804,
									"src": "4886:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 800,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "4886:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 802,
										"length": {
											"hexValue": "3530",
											"id": 801,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4894:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "4886:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "949:3965:6",
							"usedErrors": [],
							"usedEvents": [
								140,
								147,
								152,
								513
							]
						}
					],
					"src": "115:4800:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1134,
							"linearizedBaseContracts": [
								1134
							],
							"name": "AddressUpgradeable",
							"nameLocation": "202:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "1489:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 815,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "1713:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1721:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1713:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1726:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1713:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1713:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 814,
												"id": 820,
												"nodeType": "Return",
												"src": "1706:30:7"
											}
										]
									},
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "227:1191:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1432:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1451:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1443:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:17:7"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "1483:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1482:6:7"
									},
									"scope": 1134,
									"src": "1423:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "2729:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 833,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2755:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1134",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1134",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2747:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 831,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2747:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2747:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2761:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2747:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 836,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "2772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2747:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2780:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 830,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 840,
												"nodeType": "ExpressionStatement",
												"src": "2739:73:7"
											},
											{
												"assignments": [
													842,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 842,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2829:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 855,
														"src": "2824:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 841,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2824:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 849,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2872:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 843,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "2842:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2852:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2842:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 846,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 845,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "2864:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2842:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2842:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2823:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 851,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "2893:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2902:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2885:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2885:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "2885:78:7"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "1749:904:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2667:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2693:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2677:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2712:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "2704:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2704:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:7"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:7"
									},
									"scope": 1134,
									"src": "2658:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "3801:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "3840:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3848:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3854:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3857:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 866,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															914,
															958
														],
														"referencedDeclaration": 958,
														"src": "3818:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3818:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 865,
												"id": 872,
												"nodeType": "Return",
												"src": "3811:79:7"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "2976:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3721:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3742:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "3734:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3734:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3763:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "3750:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 860,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3750:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3733:35:7"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "3787:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 863,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3787:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3786:14:7"
									},
									"scope": 1134,
									"src": "3712:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "4266:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 887,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "4305:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "4313:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 889,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4319:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 890,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "4322:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 886,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															914,
															958
														],
														"referencedDeclaration": 958,
														"src": "4283:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 885,
												"id": 892,
												"nodeType": "Return",
												"src": "4276:59:7"
											}
										]
									},
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "3903:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4128:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4158:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4150:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4150:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4187:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4174:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 878,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4174:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4215:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4201:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4201:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:93:7"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "4252:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4252:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4251:14:7"
									},
									"scope": 1134,
									"src": "4119:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "4817:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 907,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "4856:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 908,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "4864:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 909,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "4870:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4877:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 906,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															914,
															958
														],
														"referencedDeclaration": 958,
														"src": "4834:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4834:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 905,
												"id": 912,
												"nodeType": "Return",
												"src": "4827:94:7"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "4348:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4713:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4743:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4735:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4764:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4751:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 898,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4751:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4778:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4770:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4770:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:50:7"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "4803:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 903,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4803:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4802:14:7"
									},
									"scope": 1134,
									"src": "4704:224:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "5355:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 931,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5381:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1134",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$1134",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5373:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 929,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5373:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5373:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5387:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5373:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 934,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "5398:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5405:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "5365:81:7"
											},
											{
												"assignments": [
													940,
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5462:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "5457:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 939,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5457:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5484:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 957,
														"src": "5471:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 941,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5471:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 949,
												"initialValue": {
													"arguments": [
														{
															"id": 947,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "5524:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 943,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "5498:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5505:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5498:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 945,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "5517:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5498:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5456:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 951,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "5573:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "5581:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 953,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "5590:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 954,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "5602:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 950,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "5546:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5546:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 927,
												"id": 956,
												"nodeType": "Return",
												"src": "5539:76:7"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "4934:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5185:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5224:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5216:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5216:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5253:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5240:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5240:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5304:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5290:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 922,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5290:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5206:116:7"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "5341:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 925,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5341:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5340:14:7"
									},
									"scope": 1134,
									"src": "5176:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "5899:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 969,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "5935:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 970,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "5943:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5949:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 968,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															975,
															1004
														],
														"referencedDeclaration": 1004,
														"src": "5916:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5916:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 967,
												"id": 973,
												"nodeType": "Return",
												"src": "5909:80:7"
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "5628:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5808:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5835:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "5827:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5827:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5856:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "5843:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5843:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5826:35:7"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "5885:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5885:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5884:14:7"
									},
									"scope": 1134,
									"src": "5799:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "6338:168:7",
										"statements": [
											{
												"assignments": [
													988,
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 988,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6354:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1003,
														"src": "6349:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 987,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6349:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6376:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1003,
														"src": "6363:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 989,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6363:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 995,
												"initialValue": {
													"arguments": [
														{
															"id": 993,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 980,
															"src": "6408:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 991,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "6390:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6397:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6390:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6348:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 997,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 978,
															"src": "6457:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 998,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "6465:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 999,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "6474:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1000,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "6486:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 996,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "6430:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6430:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 986,
												"id": 1002,
												"nodeType": "Return",
												"src": "6423:76:7"
											}
										]
									},
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "6002:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6189:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6225:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "6217:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6217:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6254:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "6241:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 979,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6241:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6282:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "6268:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 981,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6268:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6207:93:7"
									},
									"returnParameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "6324:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 984,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6324:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:14:7"
									},
									"scope": 1134,
									"src": "6180:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1020,
										"nodeType": "Block",
										"src": "6782:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1015,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "6820:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "6828:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6834:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1014,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1021,
															1050
														],
														"referencedDeclaration": 1050,
														"src": "6799:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1013,
												"id": 1019,
												"nodeType": "Return",
												"src": "6792:84:7"
											}
										]
									},
									"documentation": {
										"id": 1005,
										"nodeType": "StructuredDocumentation",
										"src": "6512:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1021,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6694:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6723:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "6715:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6715:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6744:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "6731:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1008,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6731:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6714:35:7"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "6768:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1011,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6768:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6767:14:7"
									},
									"scope": 1134,
									"src": "6685:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "7224:170:7",
										"statements": [
											{
												"assignments": [
													1034,
													1036
												],
												"declarations": [
													{
														"constant": false,
														"id": 1034,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7240:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "7235:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1033,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7235:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1036,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7262:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1049,
														"src": "7249:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1035,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7249:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1041,
												"initialValue": {
													"arguments": [
														{
															"id": 1039,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "7296:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1037,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "7276:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7283:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7276:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7276:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7234:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1043,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "7345:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "7353:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1045,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "7362:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1046,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "7374:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1042,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "7318:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7318:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1032,
												"id": 1048,
												"nodeType": "Return",
												"src": "7311:76:7"
											}
										]
									},
									"documentation": {
										"id": 1022,
										"nodeType": "StructuredDocumentation",
										"src": "6889:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7078:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7116:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7108:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7145:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7132:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7132:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7173:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7159:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1027,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7159:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7098:93:7"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "7210:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1030,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7210:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7209:14:7"
									},
									"scope": 1134,
									"src": "7069:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "7876:434:7",
										"statements": [
											{
												"condition": {
													"id": 1064,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1055,
													"src": "7890:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1086,
													"nodeType": "Block",
													"src": "8246:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1082,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "8268:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1083,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1059,
																		"src": "8280:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1081,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "8260:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8260:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1085,
															"nodeType": "ExpressionStatement",
															"src": "8260:33:7"
														}
													]
												},
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "7886:418:7",
												"trueBody": {
													"id": 1080,
													"nodeType": "Block",
													"src": "7899:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1065,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1057,
																		"src": "7917:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7928:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7917:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7938:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7917:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1077,
															"nodeType": "IfStatement",
															"src": "7913:286:7",
															"trueBody": {
																"id": 1076,
																"nodeType": "Block",
																"src": "7941:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1071,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1053,
																							"src": "8143:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1070,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 822,
																						"src": "8132:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1072,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8132:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1073,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8152:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1069,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8124:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8124:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1075,
																		"nodeType": "ExpressionStatement",
																		"src": "8124:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1078,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1057,
																"src": "8219:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1063,
															"id": 1079,
															"nodeType": "Return",
															"src": "8212:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "7400:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7691:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "7727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7756:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "7751:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1054,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7751:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7786:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "7773:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1056,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7773:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7820:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "7806:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1058,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7806:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7717:121:7"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "7862:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1061,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7862:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:14:7"
									},
									"scope": 1134,
									"src": "7682:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "8691:135:7",
										"statements": [
											{
												"condition": {
													"id": 1101,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1092,
													"src": "8705:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1110,
													"nodeType": "Block",
													"src": "8762:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1106,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "8784:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1107,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1096,
																		"src": "8796:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1105,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1133,
																	"src": "8776:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8776:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1109,
															"nodeType": "ExpressionStatement",
															"src": "8776:33:7"
														}
													]
												},
												"id": 1111,
												"nodeType": "IfStatement",
												"src": "8701:119:7",
												"trueBody": {
													"id": 1104,
													"nodeType": "Block",
													"src": "8714:42:7",
													"statements": [
														{
															"expression": {
																"id": 1102,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "8735:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1100,
															"id": 1103,
															"nodeType": "Return",
															"src": "8728:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "8316:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8540:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8571:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8566:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1091,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8566:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8601:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8588:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8588:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8635:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8621:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1095,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8621:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:97:7"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "8677:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1098,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8677:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8676:14:7"
									},
									"scope": 1134,
									"src": "8531:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1132,
										"nodeType": "Block",
										"src": "8915:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1120,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "8991:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9002:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8991:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1122,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9011:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "9321:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "9342:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1126,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9335:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9335:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1129,
															"nodeType": "ExpressionStatement",
															"src": "9335:20:7"
														}
													]
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "8987:379:7",
												"trueBody": {
													"id": 1125,
													"nodeType": "Block",
													"src": "9014:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "9172:133:7",
																"nodeType": "YulBlock",
																"src": "9172:133:7",
																"statements": [
																	{
																		"nativeSrc": "9190:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9190:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "9219:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "9219:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "9213:5:7"
																			},
																			"nativeSrc": "9213:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9213:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "9194:15:7",
																				"nodeType": "YulTypedName",
																				"src": "9194:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9258:2:7",
																							"nodeType": "YulLiteral",
																							"src": "9258:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "9262:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "9262:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "9254:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "9254:3:7"
																					},
																					"nativeSrc": "9254:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "9254:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "9275:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "9275:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9247:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9247:6:7"
																			},
																			"nativeSrc": "9247:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9247:44:7"
																		},
																		"nativeSrc": "9247:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9247:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 1115,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9219:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1115,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9262:10:7",
																	"valueSize": 1
																}
															],
															"id": 1124,
															"nodeType": "InlineAssembly",
															"src": "9163:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8841:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8862:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "8849:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8849:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8888:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "8874:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8874:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8848:53:7"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8915:0:7"
									},
									"scope": 1134,
									"src": "8832:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1135,
							"src": "194:9180:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:9274:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1185
						],
						"Initializable": [
							667
						]
					},
					"id": 1186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 668,
							"src": "125:63:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1137,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 667,
										"src": "133:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1140,
										"name": "Initializable",
										"nameLocations": [
											"727:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 667,
										"src": "727:13:8"
									},
									"id": 1141,
									"nodeType": "InheritanceSpecifier",
									"src": "727:13:8"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1139,
								"nodeType": "StructuredDocumentation",
								"src": "190:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1185,
							"linearizedBaseContracts": [
								1185,
								667
							],
							"name": "ContextUpgradeable",
							"nameLocation": "705:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "799:7:8",
										"statements": []
									},
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1144,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1143,
												"name": "onlyInitializing",
												"nameLocations": [
													"782:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 612,
												"src": "782:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "782:16:8"
										}
									],
									"name": "__Context_init",
									"nameLocation": "756:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "770:2:8"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:0:8"
									},
									"scope": 1185,
									"src": "747:59:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "874:7:8",
										"statements": []
									},
									"id": 1153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1149,
												"name": "onlyInitializing",
												"nameLocations": [
													"857:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 612,
												"src": "857:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "857:16:8"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "821:24:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:2:8"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:0:8"
									},
									"scope": 1185,
									"src": "812:69:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "948:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1158,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "965:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "969:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "965:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1157,
												"id": 1160,
												"nodeType": "Return",
												"src": "958:17:8"
											}
										]
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "895:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "905:2:8"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "939:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "939:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "938:9:8"
									},
									"scope": 1185,
									"src": "886:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "1055:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1167,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1072:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1076:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1072:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1169,
												"nodeType": "Return",
												"src": "1065:15:8"
											}
										]
									},
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "997:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1005:2:8"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "1039:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1039:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:16:8"
									},
									"scope": 1185,
									"src": "988:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "1165:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1182:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1175,
												"id": 1177,
												"nodeType": "Return",
												"src": "1175:8:8"
											}
										]
									},
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1102:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:2:8"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1156:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:9:8"
									},
									"scope": 1185,
									"src": "1093:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "1196:254:8",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1184,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1475:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "1455:25:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 1181,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1455:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1183,
										"length": {
											"hexValue": "3530",
											"id": 1182,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1463:2:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1455:11:8",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1186,
							"src": "687:796:8",
							"usedErrors": [],
							"usedEvents": [
								513
							]
						}
					],
					"src": "101:1383:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol",
					"exportedSymbols": {
						"StorageSlotUpgradeable": [
							1295
						]
					},
					"id": 1296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "193:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlotUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1188,
								"nodeType": "StructuredDocumentation",
								"src": "218:1201:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n _Available since v4.9 for `string`, `bytes`._"
							},
							"fullyImplemented": true,
							"id": 1295,
							"linearizedBaseContracts": [
								1295
							],
							"name": "StorageSlotUpgradeable",
							"nameLocation": "1428:22:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlotUpgradeable.AddressSlot",
									"id": 1191,
									"members": [
										{
											"constant": false,
											"id": 1190,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1494:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1191,
											"src": "1486:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1189,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1486:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1464:11:9",
									"nodeType": "StructDefinition",
									"scope": 1295,
									"src": "1457:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BooleanSlot",
									"id": 1194,
									"members": [
										{
											"constant": false,
											"id": 1193,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1546:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1194,
											"src": "1541:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1192,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1541:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1519:11:9",
									"nodeType": "StructDefinition",
									"scope": 1295,
									"src": "1512:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Bytes32Slot",
									"id": 1197,
									"members": [
										{
											"constant": false,
											"id": 1196,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1601:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1197,
											"src": "1593:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1195,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1593:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1571:11:9",
									"nodeType": "StructDefinition",
									"scope": 1295,
									"src": "1564:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.Uint256Slot",
									"id": 1200,
									"members": [
										{
											"constant": false,
											"id": 1199,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1656:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1200,
											"src": "1648:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1198,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1648:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1626:11:9",
									"nodeType": "StructDefinition",
									"scope": 1295,
									"src": "1619:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.StringSlot",
									"id": 1203,
									"members": [
										{
											"constant": false,
											"id": 1202,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1709:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1203,
											"src": "1702:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1201,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1702:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1681:10:9",
									"nodeType": "StructDefinition",
									"scope": 1295,
									"src": "1674:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlotUpgradeable.BytesSlot",
									"id": 1206,
									"members": [
										{
											"constant": false,
											"id": 1205,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1760:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1206,
											"src": "1754:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1204,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1754:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1734:9:9",
									"nodeType": "StructDefinition",
									"scope": 1295,
									"src": "1727:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "1954:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2016:38:9",
													"nodeType": "YulBlock",
													"src": "2016:38:9",
													"statements": [
														{
															"nativeSrc": "2030:14:9",
															"nodeType": "YulAssignment",
															"src": "2030:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2040:4:9",
																"nodeType": "YulIdentifier",
																"src": "2040:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2030:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2030:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1213,
														"isOffset": false,
														"isSlot": true,
														"src": "2030:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1209,
														"isOffset": false,
														"isSlot": false,
														"src": "2040:4:9",
														"valueSize": 1
													}
												],
												"id": 1215,
												"nodeType": "InlineAssembly",
												"src": "2007:47:9"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "1778:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1879:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1902:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "1894:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1208,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:14:9"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1951:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "1931:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1191_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.AddressSlot"
												},
												"typeName": {
													"id": 1212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1211,
														"name": "AddressSlot",
														"nameLocations": [
															"1931:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1191,
														"src": "1931:11:9"
													},
													"referencedDeclaration": 1191,
													"src": "1931:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1191_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:23:9"
									},
									"scope": 1295,
									"src": "1870:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "2242:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2304:38:9",
													"nodeType": "YulBlock",
													"src": "2304:38:9",
													"statements": [
														{
															"nativeSrc": "2318:14:9",
															"nodeType": "YulAssignment",
															"src": "2318:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2328:4:9",
																"nodeType": "YulIdentifier",
																"src": "2328:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2318:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2318:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1224,
														"isOffset": false,
														"isSlot": true,
														"src": "2318:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1220,
														"isOffset": false,
														"isSlot": false,
														"src": "2328:4:9",
														"valueSize": 1
													}
												],
												"id": 1226,
												"nodeType": "InlineAssembly",
												"src": "2295:47:9"
											}
										]
									},
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "2066:87:9",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2167:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2190:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2182:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2181:14:9"
									},
									"returnParameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2239:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "2219:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1194_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
												},
												"typeName": {
													"id": 1223,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1222,
														"name": "BooleanSlot",
														"nameLocations": [
															"2219:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "2219:11:9"
													},
													"referencedDeclaration": 1194,
													"src": "2219:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1194_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2218:23:9"
									},
									"scope": 1295,
									"src": "2158:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "2530:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2592:38:9",
													"nodeType": "YulBlock",
													"src": "2592:38:9",
													"statements": [
														{
															"nativeSrc": "2606:14:9",
															"nodeType": "YulAssignment",
															"src": "2606:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2616:4:9",
																"nodeType": "YulIdentifier",
																"src": "2616:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2606:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1235,
														"isOffset": false,
														"isSlot": true,
														"src": "2606:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1231,
														"isOffset": false,
														"isSlot": false,
														"src": "2616:4:9",
														"valueSize": 1
													}
												],
												"id": 1237,
												"nodeType": "InlineAssembly",
												"src": "2583:47:9"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "2354:87:9",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2455:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2478:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2470:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1230,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:14:9"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2527:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "2507:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1197_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
												},
												"typeName": {
													"id": 1234,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1233,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2507:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1197,
														"src": "2507:11:9"
													},
													"referencedDeclaration": 1197,
													"src": "2507:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1197_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:23:9"
									},
									"scope": 1295,
									"src": "2446:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "2818:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2880:38:9",
													"nodeType": "YulBlock",
													"src": "2880:38:9",
													"statements": [
														{
															"nativeSrc": "2894:14:9",
															"nodeType": "YulAssignment",
															"src": "2894:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2904:4:9",
																"nodeType": "YulIdentifier",
																"src": "2904:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2894:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1246,
														"isOffset": false,
														"isSlot": true,
														"src": "2894:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1242,
														"isOffset": false,
														"isSlot": false,
														"src": "2904:4:9",
														"valueSize": 1
													}
												],
												"id": 1248,
												"nodeType": "InlineAssembly",
												"src": "2871:47:9"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "2642:87:9",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2743:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2766:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "2758:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1241,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2758:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:14:9"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2815:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "2795:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1200_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
												},
												"typeName": {
													"id": 1245,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1244,
														"name": "Uint256Slot",
														"nameLocations": [
															"2795:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1200,
														"src": "2795:11:9"
													},
													"referencedDeclaration": 1200,
													"src": "2795:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1200_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2794:23:9"
									},
									"scope": 1295,
									"src": "2734:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "3103:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3165:38:9",
													"nodeType": "YulBlock",
													"src": "3165:38:9",
													"statements": [
														{
															"nativeSrc": "3179:14:9",
															"nodeType": "YulAssignment",
															"src": "3179:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3189:4:9",
																"nodeType": "YulIdentifier",
																"src": "3189:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3179:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3179:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1257,
														"isOffset": false,
														"isSlot": true,
														"src": "3179:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1253,
														"isOffset": false,
														"isSlot": false,
														"src": "3189:4:9",
														"valueSize": 1
													}
												],
												"id": 1259,
												"nodeType": "InlineAssembly",
												"src": "3156:47:9"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "2930:86:9",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3030:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3052:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "3044:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:14:9"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3100:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "3081:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1203_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 1256,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1255,
														"name": "StringSlot",
														"nameLocations": [
															"3081:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1203,
														"src": "3081:10:9"
													},
													"referencedDeclaration": 1203,
													"src": "3081:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1203_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3080:22:9"
									},
									"scope": 1295,
									"src": "3021:188:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "3411:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3473:44:9",
													"nodeType": "YulBlock",
													"src": "3473:44:9",
													"statements": [
														{
															"nativeSrc": "3487:20:9",
															"nodeType": "YulAssignment",
															"src": "3487:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3497:10:9",
																"nodeType": "YulIdentifier",
																"src": "3497:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3487:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1268,
														"isOffset": false,
														"isSlot": true,
														"src": "3487:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1264,
														"isOffset": false,
														"isSlot": true,
														"src": "3497:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1270,
												"nodeType": "InlineAssembly",
												"src": "3464:53:9"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "3215:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3330:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3359:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "3344:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1263,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3344:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3343:22:9"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3408:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "3389:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1203_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.StringSlot"
												},
												"typeName": {
													"id": 1267,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1266,
														"name": "StringSlot",
														"nameLocations": [
															"3389:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1203,
														"src": "3389:10:9"
													},
													"referencedDeclaration": 1203,
													"src": "3389:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1203_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:22:9"
									},
									"scope": 1295,
									"src": "3321:202:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "3699:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3761:38:9",
													"nodeType": "YulBlock",
													"src": "3761:38:9",
													"statements": [
														{
															"nativeSrc": "3775:14:9",
															"nodeType": "YulAssignment",
															"src": "3775:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3785:4:9",
																"nodeType": "YulIdentifier",
																"src": "3785:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3775:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3775:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1279,
														"isOffset": false,
														"isSlot": true,
														"src": "3775:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1275,
														"isOffset": false,
														"isSlot": false,
														"src": "3785:4:9",
														"valueSize": 1
													}
												],
												"id": 1281,
												"nodeType": "InlineAssembly",
												"src": "3752:47:9"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "3529:85:9",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3628:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3649:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "3641:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1274,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:14:9"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3696:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "3678:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1206_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 1278,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1277,
														"name": "BytesSlot",
														"nameLocations": [
															"3678:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1206,
														"src": "3678:9:9"
													},
													"referencedDeclaration": 1206,
													"src": "3678:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1206_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:21:9"
									},
									"scope": 1295,
									"src": "3619:186:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "4002:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4064:44:9",
													"nodeType": "YulBlock",
													"src": "4064:44:9",
													"statements": [
														{
															"nativeSrc": "4078:20:9",
															"nodeType": "YulAssignment",
															"src": "4078:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4088:10:9",
																"nodeType": "YulIdentifier",
																"src": "4088:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4078:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4078:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1290,
														"isOffset": false,
														"isSlot": true,
														"src": "4078:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1286,
														"isOffset": false,
														"isSlot": true,
														"src": "4088:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1292,
												"nodeType": "InlineAssembly",
												"src": "4055:53:9"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "3811:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3924:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3951:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "3937:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3937:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3936:21:9"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3999:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "3981:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1206_storage_ptr",
													"typeString": "struct StorageSlotUpgradeable.BytesSlot"
												},
												"typeName": {
													"id": 1289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1288,
														"name": "BytesSlot",
														"nameLocations": [
															"3981:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1206,
														"src": "3981:9:9"
													},
													"referencedDeclaration": 1206,
													"src": "3981:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1206_storage_ptr",
														"typeString": "struct StorageSlotUpgradeable.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:21:9"
									},
									"scope": 1295,
									"src": "3915:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1296,
							"src": "1420:2696:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3924:9"
				},
				"id": 9
			},
			"contracts/AlvaraDao.sol": {
				"ast": {
					"absolutePath": "contracts/AlvaraDao.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							1134
						],
						"AlvaraDao": [
							1639
						],
						"ContextUpgradeable": [
							1185
						],
						"ERC1967UpgradeUpgradeable": [
							488
						],
						"IBeaconUpgradeable": [
							498
						],
						"IERC1822ProxiableUpgradeable": [
							163
						],
						"IERC1967Upgradeable": [
							153
						],
						"IERC20": [
							1718
						],
						"Initializable": [
							667
						],
						"OwnableUpgradeable": [
							132
						],
						"StorageSlotUpgradeable": [
							1295
						],
						"UUPSUpgradeable": [
							804
						]
					},
					"id": 1640,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 133,
							"src": "58:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 668,
							"src": "134:75:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 805,
							"src": "210:77:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 1301,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1640,
							"sourceUnit": 1719,
							"src": "288:33:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1302,
										"name": "Initializable",
										"nameLocations": [
											"345:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 667,
										"src": "345:13:10"
									},
									"id": 1303,
									"nodeType": "InheritanceSpecifier",
									"src": "345:13:10"
								},
								{
									"baseName": {
										"id": 1304,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"360:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 132,
										"src": "360:18:10"
									},
									"id": 1305,
									"nodeType": "InheritanceSpecifier",
									"src": "360:18:10"
								},
								{
									"baseName": {
										"id": 1306,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"380:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "380:15:10"
									},
									"id": 1307,
									"nodeType": "InheritanceSpecifier",
									"src": "380:15:10"
								}
							],
							"canonicalName": "AlvaraDao",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1639,
							"linearizedBaseContracts": [
								1639,
								804,
								488,
								153,
								163,
								132,
								1185,
								667
							],
							"name": "AlvaraDao",
							"nameLocation": "332:9:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "323bf9f0",
									"id": 1310,
									"mutability": "mutable",
									"name": "ALVA",
									"nameLocation": "416:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1639,
									"src": "402:18:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1718",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1309,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1308,
											"name": "IERC20",
											"nameLocations": [
												"402:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1718,
											"src": "402:6:10"
										},
										"referencedDeclaration": 1718,
										"src": "402:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1718",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6ac10901",
									"id": 1313,
									"mutability": "mutable",
									"name": "xALVA",
									"nameLocation": "440:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1639,
									"src": "426:19:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1718",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1312,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1311,
											"name": "IERC20",
											"nameLocations": [
												"426:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1718,
											"src": "426:6:10"
										},
										"referencedDeclaration": 1718,
										"src": "426:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1718",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0c8e32d2",
									"id": 1317,
									"mutability": "mutable",
									"name": "userLockPeriod",
									"nameLocation": "487:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1639,
									"src": "452:49:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1316,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1314,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "460:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "452:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1315,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "471:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b0e0133",
									"id": 1321,
									"mutability": "mutable",
									"name": "blackListAddress",
									"nameLocation": "539:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1639,
									"src": "507:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1320,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1318,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "515:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "507:24:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1319,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "526:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3d6e119",
									"id": 1323,
									"mutability": "mutable",
									"name": "lockedPeriod",
									"nameLocation": "577:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1639,
									"src": "562:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1322,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "562:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ebedb8b3c678666e7f36970bc8f57abf6d8fa2e828c0da91ea5b75bf68ed101a",
									"id": 1329,
									"name": "Stake",
									"nameLocation": "602:5:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"indexed": true,
												"mutability": "mutable",
												"name": "staker",
												"nameLocation": "624:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "608:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "608:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1327,
												"indexed": false,
												"mutability": "mutable",
												"name": "xALVAReceived",
												"nameLocation": "640:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1329,
												"src": "632:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "607:47:10"
									},
									"src": "596:59:10"
								},
								{
									"anonymous": false,
									"eventSelector": "85082129d87b2fe11527cb1b3b7a520aeb5aa6913f88a3d8757fe40d1db02fdd",
									"id": 1335,
									"name": "Unstake",
									"nameLocation": "666:7:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"indexed": true,
												"mutability": "mutable",
												"name": "unstaker",
												"nameLocation": "690:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "674:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1333,
												"indexed": false,
												"mutability": "mutable",
												"name": "alvaReceived",
												"nameLocation": "708:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "700:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:48:10"
									},
									"src": "660:62:10"
								},
								{
									"anonymous": false,
									"eventSelector": "2f2ea19e5340217456e8ecb94895965ba2afa084e4a94f9fc7c315b1478243b7",
									"id": 1341,
									"name": "BlackListUser",
									"nameLocation": "733:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"indexed": false,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "755:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "747:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1339,
												"indexed": false,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "767:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "762:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "762:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:29:10"
									},
									"src": "727:49:10"
								},
								{
									"anonymous": false,
									"eventSelector": "f814eafa160e3546fc1ea6b8939a578ef5f64d31e04888bcd82e8cd9f9ec2909",
									"id": 1347,
									"name": "UpdateLockPeriod",
									"nameLocation": "787:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockedPeriod",
												"nameLocation": "809:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "804:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "804:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"indexed": false,
												"mutability": "mutable",
												"name": "_lockedPeriod",
												"nameLocation": "828:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "823:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:39:10"
									},
									"src": "781:62:10"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "916:39:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1351,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 648,
														"src": "926:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "926:22:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "926:22:10"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "849:48:10",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 1355,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "913:2:10"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:0:10"
									},
									"scope": 1639,
									"src": "902:53:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "1084:295:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1366,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1094:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:16:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "1094:16:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1369,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "1120:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1120:24:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "1120:24:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1373,
																"name": "_alva",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "1163:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1180:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1172:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1374,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1172:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1172:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1163:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616c76612061646472657373",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1",
																"typeString": "literal_string \"Invalid alva address\""
															},
															"value": "Invalid alva address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b1471e8298fb0fdee6f4979056baf840dac83498fd0403a768190450218d14c1",
																"typeString": "literal_string \"Invalid alva address\""
															}
														],
														"id": 1372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1155:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1155:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "1155:52:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1383,
																"name": "_xalva",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "1225:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1243:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1235:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1384,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1235:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1235:10:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1225:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642078414c56412061646472657373",
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1247:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898",
																"typeString": "literal_string \"Invalid xALVA address\""
															},
															"value": "Invalid xALVA address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5bec71c0a16c9cd7a466d8c8147fe1a528e182d277a5c381b3e448cb9518e898",
																"typeString": "literal_string \"Invalid xALVA address\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1217:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1217:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "1217:54:10"
											},
											{
												"expression": {
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1392,
														"name": "ALVA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "1282:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1718",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1394,
																"name": "_alva",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1357,
																"src": "1296:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1393,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "1289:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1718_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1718",
															"typeString": "contract IERC20"
														}
													},
													"src": "1282:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1718",
														"typeString": "contract IERC20"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "1282:20:10"
											},
											{
												"expression": {
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1398,
														"name": "xALVA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "1312:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1718",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1400,
																"name": "_xalva",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "1327:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1399,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "1320:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1718_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1320:14:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1718",
															"typeString": "contract IERC20"
														}
													},
													"src": "1312:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1718",
														"typeString": "contract IERC20"
													}
												},
												"id": 1403,
												"nodeType": "ExpressionStatement",
												"src": "1312:22:10"
											},
											{
												"expression": {
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1404,
														"name": "lockedPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "1344:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1405,
														"name": "_lockedPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "1359:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1344:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "1344:28:10"
											}
										]
									},
									"functionSelector": "1794bb3c",
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1363,
												"name": "initializer",
												"nameLocations": [
													"1072:11:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 569,
												"src": "1072:11:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1072:11:10"
										}
									],
									"name": "initialize",
									"nameLocation": "970:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "_alva",
												"nameLocation": "998:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "990:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "_xalva",
												"nameLocation": "1021:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "1013:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_lockedPeriod",
												"nameLocation": "1045:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "1037:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:84:10"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:0:10"
									},
									"scope": 1639,
									"src": "961:418:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "1484:652:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1415,
																	"name": "blackListAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "1502:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1418,
																"indexExpression": {
																	"expression": {
																		"id": 1416,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1519:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1523:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1519:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1502:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1534:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "1502:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b4c69737465642055736572",
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1540:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841",
																"typeString": "literal_string \"BlackListed User\""
															},
															"value": "BlackListed User"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841",
																"typeString": "literal_string \"BlackListed User\""
															}
														],
														"id": 1414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1494:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1494:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "1494:65:10"
											},
											{
												"assignments": [
													1425
												],
												"declarations": [
													{
														"constant": false,
														"id": 1425,
														"mutability": "mutable",
														"name": "totalAlva",
														"nameLocation": "1577:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "1569:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1424,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1569:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1433,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1430,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1612:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AlvaraDao_$1639",
																		"typeString": "contract AlvaraDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AlvaraDao_$1639",
																		"typeString": "contract AlvaraDao"
																	}
																],
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1604:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1428,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1604:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1604:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1426,
															"name": "ALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "1589:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1718",
																"typeString": "contract IERC20"
															}
														},
														"id": 1427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1594:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1653,
														"src": "1589:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1589:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1569:49:10"
											},
											{
												"assignments": [
													1435
												],
												"declarations": [
													{
														"constant": false,
														"id": 1435,
														"mutability": "mutable",
														"name": "totalShares",
														"nameLocation": "1636:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1507,
														"src": "1628:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1434,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1628:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1439,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1436,
															"name": "xALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "1650:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1718",
																"typeString": "contract IERC20"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1656:11:10",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "1650:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1650:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1628:41:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1440,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1435,
															"src": "1683:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1698:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1683:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1443,
															"name": "totalAlva",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "1703:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1716:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1703:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1683:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1485,
													"nodeType": "Block",
													"src": "1830:181:10",
													"statements": [
														{
															"assignments": [
																1463
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1463,
																	"mutability": "mutable",
																	"name": "_userShare",
																	"nameLocation": "1852:10:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1485,
																	"src": "1844:18:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1462,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1844:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1470,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1464,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1411,
																				"src": "1866:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1465,
																				"name": "totalShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1435,
																				"src": "1876:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1866:21:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1467,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1865:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1468,
																	"name": "totalAlva",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1425,
																	"src": "1891:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1865:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1844:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1474,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "1925:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1925:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1476,
																		"name": "_userShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "1939:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1471,
																		"name": "xALVA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "1914:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1718",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1920:4:10",
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1717,
																	"src": "1914:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1914:36:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1478,
															"nodeType": "ExpressionStatement",
															"src": "1914:36:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1480,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "1975:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1975:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1482,
																		"name": "_userShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1463,
																		"src": "1989:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1479,
																	"name": "Stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "1969:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1969:31:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1484,
															"nodeType": "EmitStatement",
															"src": "1964:36:10"
														}
													]
												},
												"id": 1486,
												"nodeType": "IfStatement",
												"src": "1679:332:10",
												"trueBody": {
													"id": 1461,
													"nodeType": "Block",
													"src": "1719:105:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1450,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "1744:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1744:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1452,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "1758:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1447,
																		"name": "xALVA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1313,
																		"src": "1733:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1718",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1739:4:10",
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1717,
																	"src": "1733:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1733:33:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1454,
															"nodeType": "ExpressionStatement",
															"src": "1733:33:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1456,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "1791:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1791:12:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1458,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "1805:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1455,
																	"name": "Stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1329,
																	"src": "1785:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1785:28:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1460,
															"nodeType": "EmitStatement",
															"src": "1780:33:10"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1487,
															"name": "userLockPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "2020:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1490,
														"indexExpression": {
															"expression": {
																"id": 1488,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2035:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2039:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2035:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2020:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1491,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2049:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2055:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2049:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2020:44:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1494,
												"nodeType": "ExpressionStatement",
												"src": "2020:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1498,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "2092:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2092:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1502,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2114:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AlvaraDao_$1639",
																		"typeString": "contract AlvaraDao"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AlvaraDao_$1639",
																		"typeString": "contract AlvaraDao"
																	}
																],
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2106:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1500,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2106:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2106:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1411,
															"src": "2121:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1495,
															"name": "ALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2074:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1718",
																"typeString": "contract IERC20"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2079:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1691,
														"src": "2074:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2074:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "2074:55:10"
											}
										]
									},
									"functionSelector": "a59f3e0c",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "enter",
									"nameLocation": "1454:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1468:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "1460:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1459:17:10"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1484:0:10"
									},
									"scope": 1639,
									"src": "1445:691:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "2229:508:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1514,
																	"name": "blackListAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "2247:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1517,
																"indexExpression": {
																	"expression": {
																		"id": 1515,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2264:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2268:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2264:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2247:28:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2279:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "2247:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "426c61636b4c69737465642055736572",
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841",
																"typeString": "literal_string \"BlackListed User\""
															},
															"value": "BlackListed User"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da321e71bf8852328c0aca58600e20e3c46b219b6c7a003ca6d38e16a8649841",
																"typeString": "literal_string \"BlackListed User\""
															}
														],
														"id": 1513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2239:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2239:65:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1522,
												"nodeType": "ExpressionStatement",
												"src": "2239:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1524,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2335:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2341:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2335:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1526,
																				"name": "userLockPeriod",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1317,
																				"src": "2355:14:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1529,
																			"indexExpression": {
																				"expression": {
																					"id": 1527,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2370:3:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1528,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2374:6:10",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2370:10:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2355:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1530,
																			"name": "lockedPeriod",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1323,
																			"src": "2384:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2355:41:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1532,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2354:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2335:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e206e6f7420756e5374616b65",
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2411:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728",
																"typeString": "literal_string \"Can not unStake\""
															},
															"value": "Can not unStake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7d6d2814c0e538a9dfcdf30584136cd8b783d78774c3c549658170a640f9728",
																"typeString": "literal_string \"Can not unStake\""
															}
														],
														"id": 1523,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2314:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:124:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "2314:124:10"
											},
											{
												"assignments": [
													1538
												],
												"declarations": [
													{
														"constant": false,
														"id": 1538,
														"mutability": "mutable",
														"name": "totalShares",
														"nameLocation": "2456:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "2448:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2448:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1542,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1539,
															"name": "xALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "2470:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1718",
																"typeString": "contract IERC20"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2476:11:10",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1646,
														"src": "2470:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2470:19:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2448:41:10"
											},
											{
												"assignments": [
													1544
												],
												"declarations": [
													{
														"constant": false,
														"id": 1544,
														"mutability": "mutable",
														"name": "_userShare",
														"nameLocation": "2507:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "2499:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1545,
																	"name": "_share",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1510,
																	"src": "2521:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1550,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2553:4:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_AlvaraDao_$1639",
																						"typeString": "contract AlvaraDao"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_AlvaraDao_$1639",
																						"typeString": "contract AlvaraDao"
																					}
																				],
																				"id": 1549,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2545:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1548,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2545:7:10",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2545:13:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"id": 1546,
																			"name": "ALVA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1310,
																			"src": "2530:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1718",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2535:9:10",
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1653,
																		"src": "2530:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2530:29:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2521:38:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1554,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2520:40:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1555,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1538,
														"src": "2575:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2520:66:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:87:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1561,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "2611:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2611:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1563,
															"name": "_share",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "2625:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1558,
															"name": "xALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "2596:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1718",
																"typeString": "contract IERC20"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2602:8:10",
														"memberName": "burnFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1710,
														"src": "2596:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:36:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1565,
												"nodeType": "ExpressionStatement",
												"src": "2596:36:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1569,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "2656:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2656:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1571,
															"name": "_userShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "2670:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1566,
															"name": "ALVA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1310,
															"src": "2642:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1718",
																"typeString": "contract IERC20"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2647:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "2642:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2642:39:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "2642:39:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1575,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1162,
																"src": "2705:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2705:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1577,
															"name": "_userShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1544,
															"src": "2719:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1574,
														"name": "Unstake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1335,
														"src": "2697:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2697:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1579,
												"nodeType": "EmitStatement",
												"src": "2692:38:10"
											}
										]
									},
									"functionSelector": "67dfd4c9",
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leave",
									"nameLocation": "2200:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "_share",
												"nameLocation": "2214:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "2206:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:16:10"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2229:0:10"
									},
									"scope": 1639,
									"src": "2191:546:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "3012:174:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1592,
																	"name": "blackListAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "3030:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1594,
																"indexExpression": {
																	"id": 1593,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "3047:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3030:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1595,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "3057:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3030:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920696e2073616d6520737461747573",
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3066:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9",
																"typeString": "literal_string \"Already in same status\""
															},
															"value": "Already in same status"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1bb34286905b9621b4b62da46af3cd2b17f8f35925c44cf938b33cc057917e9",
																"typeString": "literal_string \"Already in same status\""
															}
														],
														"id": 1591,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3022:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3022:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "3022:69:10"
											},
											{
												"expression": {
													"id": 1604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1600,
															"name": "blackListAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "3101:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1602,
														"indexExpression": {
															"id": 1601,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "3118:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3101:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1603,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "3127:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3101:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1605,
												"nodeType": "ExpressionStatement",
												"src": "3101:33:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1607,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "3164:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1608,
															"name": "_status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1586,
															"src": "3171:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1606,
														"name": "BlackListUser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "3150:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3150:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1610,
												"nodeType": "EmitStatement",
												"src": "3145:34:10"
											}
										]
									},
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "2743:193:10",
										"text": " @dev Used only by admin or owner, used to blacklist any user in any emergency case\n @param _user address of blacklistef user\n @param _status status of user"
									},
									"functionSelector": "e0cef1b0",
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1589,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1588,
												"name": "onlyOwner",
												"nameLocations": [
													"3002:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3002:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3002:9:10"
										}
									],
									"name": "blackListUser",
									"nameLocation": "2950:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "2972:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2964:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "_status",
												"nameLocation": "2984:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "2979:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2979:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2963:29:10"
									},
									"returnParameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3012:0:10"
									},
									"scope": 1639,
									"src": "2941:245:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "3286:106:10",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1620,
															"name": "lockedPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "3318:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1621,
															"name": "_lockedPeriod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "3332:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1619,
														"name": "UpdateLockPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1347,
														"src": "3301:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3301:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1623,
												"nodeType": "EmitStatement",
												"src": "3296:50:10"
											},
											{
												"expression": {
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1624,
														"name": "lockedPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "3357:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1625,
														"name": "_lockedPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "3372:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3357:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "3357:28:10"
											}
										]
									},
									"functionSelector": "91db7b0d",
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1617,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1616,
												"name": "onlyOwner",
												"nameLocations": [
													"3276:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3276:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3276:9:10"
										}
									],
									"name": "updateLockPeriod",
									"nameLocation": "3227:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "_lockedPeriod",
												"nameLocation": "3252:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "3244:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3244:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3243:23:10"
									},
									"returnParameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3286:0:10"
									},
									"scope": 1639,
									"src": "3218:174:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										798
									],
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "3508:2:10",
										"statements": []
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1635,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1634,
												"name": "onlyOwner",
												"nameLocations": [
													"3494:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "3494:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3494:9:10"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "3407:17:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1633,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3477:8:10"
									},
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3433:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "3425:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3425:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3424:27:10"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3508:0:10"
									},
									"scope": 1639,
									"src": "3398:112:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1640,
							"src": "323:3189:10",
							"usedErrors": [],
							"usedEvents": [
								17,
								140,
								147,
								152,
								513,
								1329,
								1335,
								1341,
								1347
							]
						}
					],
					"src": "32:3481:10"
				},
				"id": 10
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1718
						]
					},
					"id": 1719,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1641,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1718,
							"linearizedBaseContracts": [
								1718
							],
							"name": "IERC20",
							"nameLocation": "68:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 1646,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "90:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "101:2:11"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1646,
												"src": "127:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "127:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "126:9:11"
									},
									"scope": 1718,
									"src": "81:55:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "151:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "169:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "161:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "161:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "160:17:11"
									},
									"returnParameters": {
										"id": 1652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1653,
												"src": "201:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "201:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "200:9:11"
									},
									"scope": 1718,
									"src": "142:68:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "225:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "251:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "243:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "278:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "270:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "270:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "233:57:11"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "309:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "308:6:11"
									},
									"scope": 1718,
									"src": "216:99:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "330:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "357:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "349:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "380:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "372:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "372:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "339:54:11"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "417:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "417:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:9:11"
									},
									"scope": 1718,
									"src": "321:105:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "441:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "457:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "449:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "449:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "474:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "466:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "466:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "448:33:11"
									},
									"returnParameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "500:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "500:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:6:11"
									},
									"scope": 1718,
									"src": "432:74:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "521:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "551:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "543:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "575:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "567:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "567:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "602:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "594:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "533:81:11"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "633:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1688,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "633:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:6:11"
									},
									"scope": 1718,
									"src": "512:127:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 1696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "654:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "667:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "659:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "658:16:11"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:0:11"
									},
									"scope": 1718,
									"src": "645:39:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0d1118ce",
									"id": 1703,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnTokens",
									"nameLocation": "700:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "719:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "711:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "736:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1703,
												"src": "728:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "728:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "710:33:11"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "752:0:11"
									},
									"scope": 1718,
									"src": "691:62:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79cc6790",
									"id": 1710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "768:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "777:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "802:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1710,
												"src": "794:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "794:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:33:11"
									},
									"returnParameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "818:0:11"
									},
									"scope": 1718,
									"src": "759:60:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 1717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "834:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "847:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "839:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "839:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "864:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "856:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:33:11"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "880:0:11"
									},
									"scope": 1718,
									"src": "825:56:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1719,
							"src": "58:825:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:852:11"
				},
				"id": 11
			}
		}
	}
}