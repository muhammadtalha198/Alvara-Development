{
	"id": "be0651377e85e15d67364bfaa58cac01",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/tokens/WETH_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\n// SPDX-License-Identifier: MIT\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n\n// File: @openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary AddressUpgradeable {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.2;\n\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     * @custom:oz-retyped-from bool\n     */\n    uint8 private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint8 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n     * constructor.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        bool isTopLevelCall = !_initializing;\n        require(\n            (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1),\n            \"Initializable: contract is already initialized\"\n        );\n        _initialized = 1;\n        if (isTopLevelCall) {\n            _initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            _initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: setting the version to 255 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint8 version) {\n        require(!_initializing && _initialized < version, \"Initializable: contract is already initialized\");\n        _initialized = version;\n        _initializing = true;\n        _;\n        _initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        require(!_initializing, \"Initializable: contract is initializing\");\n        if (_initialized != type(uint8).max) {\n            _initialized = type(uint8).max;\n            emit Initialized(type(uint8).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint8) {\n        return _initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _initializing;\n    }\n}\n\n// File: @openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n\n// File: @openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[45] private __gap;\n}\n\n// File: @openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    function __Ownable_init() internal onlyInitializing {\n        __Ownable_init_unchained();\n    }\n\n    function __Ownable_init_unchained() internal onlyInitializing {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n\n// File: contracts/tokens/WETH.sol\n\n\npragma solidity ^0.8.9;\n/**\n  This is custom WETH token smart-contract, to solve the faucet issue. \n  Now all Testnet Eth will be sent to this smart-contract and we have a \n  custom method to extract back the tokens to our admin address and re-use \n  the tokens\n */\n\n\n\ncontract WETH is ERC20Upgradeable, OwnableUpgradeable {\n    event Deposit(address indexed dst, uint256 wad);\n    event Withdrawal(address indexed src, uint256 wad);\n\n    function initialize() public initializer {\n        __ERC20_init(\"Wrapped Ether\", \"WETH\");\n        __Ownable_init();\n\n        super._mint(msg.sender, 10000000000 * (10 ** uint256(decimals())));\n    }\n\n    receive() external payable {\n        deposit();\n    }\n\n    function deposit() public payable {\n        super._mint(msg.sender, msg.value);\n        emit Deposit(msg.sender, msg.value);\n    }\n\n    function withdraw() public onlyOwner {\n        uint256 amount = address(this).balance;\n        require(amount > 0, \"Not enough balance to withdraw\");\n        payable(msg.sender).transfer(amount);\n        emit Withdrawal(msg.sender, amount);\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        super._mint(to, amount);\n    }\n\n    function burn(address from, uint256 amount) public onlyOwner {\n        super._burn(from, amount);\n    }\n\n    function withdraw(uint256 wad) public {\n        require(balanceOf(msg.sender) >= wad);\n        super._burn(msg.sender,wad);\n        payable(msg.sender).transfer(wad);\n        emit Withdrawal(msg.sender, wad);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "prague"
		}
	},
	"output": {
		"contracts": {
			"contracts/tokens/WETH_flattened.sol": {
				"AddressUpgradeable": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/WETH_flattened.sol\":3818:12998  library AddressUpgradeable {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/WETH_flattened.sol\":3818:12998  library AddressUpgradeable {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220bd2a4a98d34db976649be963a5b0e11fad2105461da5de0c35d2d0b60f2b611764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220bd2a4a98d34db976649be963a5b0e11fad2105461da5de0c35d2d0b60f2b611764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0x2A BLOBBASEFEE SWAP9 0xD3 0x4D 0xB9 PUSH23 0x649BE963A5B0E11FAD2105461DA5DE0C35D2D0B60F2B61 OR PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "3818:9180:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;3818:9180:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220bd2a4a98d34db976649be963a5b0e11fad2105461da5de0c35d2d0b60f2b611764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBD 0x2A BLOBBASEFEE SWAP9 0xD3 0x4D 0xB9 PUSH23 0x649BE963A5B0E11FAD2105461DA5DE0C35D2D0B60F2B61 OR PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "3818:9180:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3818,
									"end": 12998,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bd2a4a98d34db976649be963a5b0e11fad2105461da5de0c35d2d0b60f2b611764736f6c634300081e0033",
									".code": [
										{
											"begin": 3818,
											"end": 12998,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 12998,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 12998,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 12998,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3818,
											"end": 12998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 12998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 12998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 12998,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 12998,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/tokens/WETH_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/WETH_flattened.sol\":\"AddressUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/WETH_flattened.sol\":{\"keccak256\":\"0xd8229db91c1da2575074da952bbd0575f4d99c4eb7a5f7ce6a2cf346e9af8f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282221fc6f02901ee7e33326f1f45663b52a1ad8a8f48f4d71d6335ebf32f221\",\"dweb:/ipfs/QmRYy4ZLKMpjC1u9LiFdG9sKKddBD7r2FhYvCtRq7h7gPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ContextUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/WETH_flattened.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/WETH_flattened.sol\":{\"keccak256\":\"0xd8229db91c1da2575074da952bbd0575f4d99c4eb7a5f7ce6a2cf346e9af8f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282221fc6f02901ee7e33326f1f45663b52a1ad8a8f48f4d71d6335ebf32f221\",\"dweb:/ipfs/QmRYy4ZLKMpjC1u9LiFdG9sKKddBD7r2FhYvCtRq7h7gPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 434,
								"contract": "contracts/tokens/WETH_flattened.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 437,
								"contract": "contracts/tokens/WETH_flattened.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 643,
								"contract": "contracts/tokens/WETH_flattened.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/WETH_flattened.sol\":22592:34453  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/WETH_flattened.sol\":22592:34453  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/tokens/WETH_flattened.sol\":23476:23574  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/WETH_flattened.sol\":25762:25959  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":25762:25959  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":24573:24679  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"contracts/tokens/WETH_flattened.sol\":24660:24672  _totalSupply */\n      sload(0x35)\n        /* \"contracts/tokens/WETH_flattened.sol\":24573:24679  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":24573:24679  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":26521:26777  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":24422:24513  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"contracts/tokens/WETH_flattened.sol\":24504:24506  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":24422:24513  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":27172:27406  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":24737:24862  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24855  _balances[account] */\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":24811:24818  uint256 */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24855  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24846  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24855  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":24737:24862  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":23687:23789  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":27893:28320  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":25058:25247  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":25305:25454  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":23476:23574  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"contracts/tokens/WETH_flattened.sol\":23530:23543  string memory */\n      0x60\n        /* \"contracts/tokens/WETH_flattened.sol\":23562:23567  _name */\n      0x36\n        /* \"contracts/tokens/WETH_flattened.sol\":23555:23567  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":23476:23574  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":25762:25959  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"contracts/tokens/WETH_flattened.sol\":25845:25849  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":25899:25931  _approve(owner, spender, amount) */\n      tag_73\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":25915:25922  spender */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":25924:25930  amount */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":25899:25907  _approve */\n      tag_74\n        /* \"contracts/tokens/WETH_flattened.sol\":25899:25931  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/tokens/WETH_flattened.sol\":25948:25952  true */\n      0x01\n        /* \"contracts/tokens/WETH_flattened.sol\":25941:25952  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":25762:25959  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":26521:26777  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"contracts/tokens/WETH_flattened.sol\":26618:26622  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":26674:26712  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"contracts/tokens/WETH_flattened.sol\":26690:26694  from */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":26705:26711  amount */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":26674:26689  _spendAllowance */\n      tag_79\n        /* \"contracts/tokens/WETH_flattened.sol\":26674:26712  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/tokens/WETH_flattened.sol\":26722:26749  _transfer(from, to, amount) */\n      tag_80\n        /* \"contracts/tokens/WETH_flattened.sol\":26732:26736  from */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":26738:26740  to */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":26742:26748  amount */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":26722:26731  _transfer */\n      tag_81\n        /* \"contracts/tokens/WETH_flattened.sol\":26722:26749  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":26766:26770  true */\n      0x01\n      swap5\n        /* \"contracts/tokens/WETH_flattened.sol\":26521:26777  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":27172:27406  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/tokens/WETH_flattened.sol\":27260:27264  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":27314:27378  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":27330:27337  spender */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":27367:27377  addedValue */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":27339:27364  allowance(owner, spender) */\n      tag_86\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup4\n        /* \"contracts/tokens/WETH_flattened.sol\":27330:27337  spender */\n      dup4\n        /* \"contracts/tokens/WETH_flattened.sol\":27339:27348  allowance */\n      tag_61\n        /* \"contracts/tokens/WETH_flattened.sol\":27339:27364  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/tokens/WETH_flattened.sol\":27339:27377  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/tokens/WETH_flattened.sol\":27314:27322  _approve */\n      tag_74\n        /* \"contracts/tokens/WETH_flattened.sol\":27314:27378  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":23687:23789  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"contracts/tokens/WETH_flattened.sol\":23743:23756  string memory */\n      0x60\n        /* \"contracts/tokens/WETH_flattened.sol\":23775:23782  _symbol */\n      0x37\n        /* \"contracts/tokens/WETH_flattened.sol\":23768:23782  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":27893:28320  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/tokens/WETH_flattened.sol\":27986:27990  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":27986:27990  bool */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":28067:28092  allowance(owner, spender) */\n      tag_98\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":28084:28091  spender */\n      dup7\n        /* \"contracts/tokens/WETH_flattened.sol\":28067:28076  allowance */\n      tag_61\n        /* \"contracts/tokens/WETH_flattened.sol\":28067:28092  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/tokens/WETH_flattened.sol\":28040:28092  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":28130:28145  subtractedValue */\n      dup4\n        /* \"contracts/tokens/WETH_flattened.sol\":28110:28126  currentAllowance */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":28110:28145  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/tokens/WETH_flattened.sol\":28102:28187  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":28102:28187  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3114:3135   */\n      mstore\n        /* \"#utility.yul\":3171:3173   */\n      0x25\n        /* \"#utility.yul\":3151:3169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3144:3174   */\n      mstore\n        /* \"#utility.yul\":3210:3244   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3190:3208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3183:3245   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3254:3289   */\n      mstore\n        /* \"#utility.yul\":3306:3325   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":28102:28187  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/tokens/WETH_flattened.sol\":28221:28281  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"contracts/tokens/WETH_flattened.sol\":28230:28235  owner */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":28237:28244  spender */\n      dup7\n        /* \"contracts/tokens/WETH_flattened.sol\":28265:28280  subtractedValue */\n      dup7\n        /* \"contracts/tokens/WETH_flattened.sol\":28246:28262  currentAllowance */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":28246:28280  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/tokens/WETH_flattened.sol\":28221:28229  _approve */\n      tag_74\n        /* \"contracts/tokens/WETH_flattened.sol\":28221:28281  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":25058:25247  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"contracts/tokens/WETH_flattened.sol\":25137:25141  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":25191:25219  _transfer(owner, to, amount) */\n      tag_73\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":25208:25210  to */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":25212:25218  amount */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":25191:25200  _transfer */\n      tag_81\n        /* \"contracts/tokens/WETH_flattened.sol\":25191:25219  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":25305:25454  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25438  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":25394:25401  uint256 */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25438  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25431  _allowances */\n      0x34\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25438  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25447  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":25305:25454  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":31775:32115  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":31876:31895  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":31868:31936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":31868:31936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3520:3541   */\n      mstore\n        /* \"#utility.yul\":3577:3579   */\n      0x24\n        /* \"#utility.yul\":3557:3575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3550:3580   */\n      mstore\n        /* \"#utility.yul\":3616:3650   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3596:3614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3589:3651   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3667:3685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3660:3694   */\n      mstore\n        /* \"#utility.yul\":3711:3730   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":31868:31936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3336:3736   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":31868:31936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":31954:31975  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":31946:32014  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":31946:32014  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3925:3946   */\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x22\n        /* \"#utility.yul\":3962:3980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4055   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4001:4019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3994:4056   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4072:4090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4065:4097   */\n      mstore\n        /* \"#utility.yul\":4114:4133   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":31946:32014  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3741:4139   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":31946:32014  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32043  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32036  _allowances */\n      0x34\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32043  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32052  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32061  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":32076:32108  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":32076:32108  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":32076:32108  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/WETH_flattened.sol\":31775:32115  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":32396:32807  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"contracts/tokens/WETH_flattened.sol\":32496:32520  uint256 currentAllowance */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":32523:32548  allowance(owner, spender) */\n      tag_117\n        /* \"contracts/tokens/WETH_flattened.sol\":32533:32538  owner */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32540:32547  spender */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32523:32532  allowance */\n      tag_61\n        /* \"contracts/tokens/WETH_flattened.sol\":32523:32548  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/tokens/WETH_flattened.sol\":32496:32548  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"contracts/tokens/WETH_flattened.sol\":32562:32578  currentAllowance */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":32562:32599  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/tokens/WETH_flattened.sol\":32558:32801  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"contracts/tokens/WETH_flattened.sol\":32643:32649  amount */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":32623:32639  currentAllowance */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":32623:32649  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/tokens/WETH_flattened.sol\":32615:32683  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":32615:32683  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4328:4349   */\n      mstore\n        /* \"#utility.yul\":4385:4387   */\n      0x1d\n        /* \"#utility.yul\":4365:4383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4358:4388   */\n      mstore\n        /* \"#utility.yul\":4424:4455   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4404:4422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4397:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":32615:32683  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4144:4497   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":32615:32683  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"contracts/tokens/WETH_flattened.sol\":32725:32776  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"contracts/tokens/WETH_flattened.sol\":32734:32739  owner */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32741:32748  spender */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32769:32775  amount */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32750:32766  currentAllowance */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32750:32775  currentAllowance - amount */\n      sub\n        /* \"contracts/tokens/WETH_flattened.sol\":32725:32733  _approve */\n      tag_74\n        /* \"contracts/tokens/WETH_flattened.sol\":32725:32776  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/tokens/WETH_flattened.sol\":32486:32807  {... */\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":32396:32807  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":28774:29562  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":28870:28888  from != address(0) */\n      dup4\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":28862:28930  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":28862:28930  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4686:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x25\n        /* \"#utility.yul\":4723:4741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4716:4746   */\n      mstore\n        /* \"#utility.yul\":4782:4816   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4762:4780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4755:4817   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4833:4851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4826:4861   */\n      mstore\n        /* \"#utility.yul\":4878:4897   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":28862:28930  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4502:4903   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":28862:28930  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":28948:28964  to != address(0) */\n      dup3\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":28940:29004  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5110:5112   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":28940:29004  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5092:5113   */\n      mstore\n        /* \"#utility.yul\":5149:5151   */\n      0x23\n        /* \"#utility.yul\":5129:5147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5122:5152   */\n      mstore\n        /* \"#utility.yul\":5188:5222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5168:5186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5161:5223   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5232:5265   */\n      mstore\n        /* \"#utility.yul\":5282:5301   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":28940:29004  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4908:5307   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":28940:29004  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":29086:29101  _balances[from] */\n      dup4\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":29064:29083  uint256 fromBalance */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":29086:29101  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":29086:29095  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":29086:29101  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/WETH_flattened.sol\":29119:29140  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/tokens/WETH_flattened.sol\":29111:29183  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":29111:29183  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5496:5517   */\n      mstore\n        /* \"#utility.yul\":5553:5555   */\n      0x26\n        /* \"#utility.yul\":5533:5551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5526:5556   */\n      mstore\n        /* \"#utility.yul\":5592:5626   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5572:5590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5565:5627   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5636:5672   */\n      mstore\n        /* \"#utility.yul\":5689:5708   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":29111:29183  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5312:5714   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":29111:29183  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":29217:29232  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":29217:29226  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":29217:29232  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":29235:29255  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"contracts/tokens/WETH_flattened.sol\":29217:29255  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":29432:29445  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":29432:29455  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":29481:29507  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_135\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":29249:29255  amount */\n      dup7\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":29481:29507  Transfer(from, to, amount) */\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/WETH_flattened.sol\":29518:29555  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"contracts/tokens/WETH_flattened.sol\":33391:33482  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_140:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_144\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_144:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_146\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_146:\n        /* \"#utility.yul\":783:812   */\n      tag_147\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_140\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_31:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_151:\n        /* \"#utility.yul\":1479:1508   */\n      tag_152\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_140\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_153\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_140\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_44:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_156:\n        /* \"#utility.yul\":2013:2042   */\n      tag_157\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_140\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_60:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_159:\n        /* \"#utility.yul\":2221:2250   */\n      tag_160\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_161\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_140\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_65:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_163\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_163:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_164:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2925   */\n    tag_88:\n        /* \"#utility.yul\":2768:2777   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2789:2799   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2786:2919   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2841:2851   */\n      0x4e487b71\n        /* \"#utility.yul\":2836:2839   */\n      0xe0\n        /* \"#utility.yul\":2832:2852   */\n      shl\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2822:2853   */\n      mstore\n        /* \"#utility.yul\":2876:2880   */\n      0x11\n        /* \"#utility.yul\":2873:2874   */\n      0x04\n        /* \"#utility.yul\":2866:2881   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n\n    auxdata: 0xa26469706673582212208df363c2a489aa8189ef72b86255ef9669878b57a12861ca141611bbf3ae94bf64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506108218061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf9190610691565b60405180910390f35b6100db6100d63660046106e1565b61022b565b60405190151581526020016100bf565b6035545b6040519081526020016100bf565b6100db61010b366004610709565b610244565b604051601281526020016100bf565b6100db61012d3660046106e1565b610267565b6100ef610140366004610743565b6001600160a01b03165f9081526033602052604090205490565b6100b2610288565b6100db6101703660046106e1565b610297565b6100db6101833660046106e1565b610316565b6100ef610196366004610763565b610323565b6060603680546101aa90610794565b80601f01602080910402602001604051908101604052809291908181526020018280546101d690610794565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107cc565b61034d565b6060603780546101aa90610794565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260336020526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106849086815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106dc575f5ffd5b919050565b5f5f604083850312156106f2575f5ffd5b6106fb836106c6565b946020939093013593505050565b5f5f5f6060848603121561071b575f5ffd5b610724846106c6565b9250610732602085016106c6565b929592945050506040919091013590565b5f60208284031215610753575f5ffd5b61075c826106c6565b9392505050565b5f5f60408385031215610774575f5ffd5b61077d836106c6565b915061078b602084016106c6565b90509250929050565b600181811c908216806107a857607f821691505b6020821081036107c657634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212208df363c2a489aa8189ef72b86255ef9669878b57a12861ca141611bbf3ae94bf64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x821 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x684 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6FB DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x724 DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x732 PUSH1 0x20 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x75C DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77D DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x78B PUSH1 0x20 DUP5 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 RETURN PUSH4 0xC2A489AA DUP2 DUP10 0xEF PUSH19 0xB86255EF9669878B57A12861CA141611BBF3AE SWAP5 0xBF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "22592:11861:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1245": {
									"entryPoint": null,
									"id": 1245,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1180": {
									"entryPoint": 845,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1234": {
									"entryPoint": null,
									"id": 1234,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_621": {
									"entryPoint": null,
									"id": 621,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1223": {
									"entryPoint": 1136,
									"id": 1223,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1006": {
									"entryPoint": 1256,
									"id": 1006,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_801": {
									"entryPoint": 803,
									"id": 801,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_826": {
									"entryPoint": 555,
									"id": 826,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_758": {
									"entryPoint": null,
									"id": 758,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_734": {
									"entryPoint": null,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_929": {
									"entryPoint": 663,
									"id": 929,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_888": {
									"entryPoint": 615,
									"id": 888,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_714": {
									"entryPoint": 411,
									"id": 714,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_724": {
									"entryPoint": 648,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_859": {
									"entryPoint": 580,
									"id": 859,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_783": {
									"entryPoint": 790,
									"id": 783,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5716:1",
										"nodeType": "YulBlock",
										"src": "0:5716:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:1",
													"nodeType": "YulBlock",
													"src": "135:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:1"
																},
																"nativeSrc": "145:21:1",
																"nodeType": "YulFunctionCall",
																"src": "145:21:1"
															},
															"nativeSrc": "145:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:1"
														},
														{
															"nativeSrc": "175:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nativeSrc": "189:13:1",
																"nodeType": "YulFunctionCall",
																"src": "189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:1",
																	"nodeType": "YulTypedName",
																	"src": "179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:1"
																		},
																		"nativeSrc": "218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "211:34:1"
															},
															"nativeSrc": "211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "275:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nativeSrc": "260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nativeSrc": "280:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																},
																"nativeSrc": "254:50:1",
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nativeSrc": "254:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:1"
																				},
																				"nativeSrc": "324:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "353:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																},
																"nativeSrc": "313:42:1",
																"nodeType": "YulFunctionCall",
																"src": "313:42:1"
															},
															"nativeSrc": "313:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:1"
														},
														{
															"nativeSrc": "364:62:1",
															"nodeType": "YulAssignment",
															"src": "364:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:1",
																								"nodeType": "YulLiteral",
																								"src": "407:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:1"
																						},
																						"nativeSrc": "395:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:1",
																								"nodeType": "YulLiteral",
																								"src": "416:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:1"
																						},
																						"nativeSrc": "412:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nativeSrc": "391:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nativeSrc": "372:54:1",
																"nodeType": "YulFunctionCall",
																"src": "372:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:418:1"
											},
											{
												"body": {
													"nativeSrc": "486:124:1",
													"nodeType": "YulBlock",
													"src": "486:124:1",
													"statements": [
														{
															"nativeSrc": "496:29:1",
															"nodeType": "YulAssignment",
															"src": "496:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:1"
																},
																"nativeSrc": "505:20:1",
																"nodeType": "YulFunctionCall",
																"src": "505:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:1",
																"nodeType": "YulBlock",
																"src": "588:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:1",
																					"nodeType": "YulLiteral",
																					"src": "597:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:1",
																					"nodeType": "YulLiteral",
																					"src": "600:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:1"
																			},
																			"nativeSrc": "590:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:1"
																		},
																		"nativeSrc": "590:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:1",
																										"nodeType": "YulLiteral",
																										"src": "573:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:1",
																										"nodeType": "YulLiteral",
																										"src": "578:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:1"
																								},
																								"nativeSrc": "569:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:1",
																								"nodeType": "YulLiteral",
																								"src": "582:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:1"
																						},
																						"nativeSrc": "565:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:1"
																				},
																				"nativeSrc": "554:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:1"
																		},
																		"nativeSrc": "544:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nativeSrc": "537:50:1",
																"nodeType": "YulFunctionCall",
																"src": "537:50:1"
															},
															"nativeSrc": "534:70:1",
															"nodeType": "YulIf",
															"src": "534:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:1",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:1",
														"nodeType": "YulTypedName",
														"src": "476:5:1",
														"type": ""
													}
												],
												"src": "437:173:1"
											},
											{
												"body": {
													"nativeSrc": "702:213:1",
													"nodeType": "YulBlock",
													"src": "702:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:1",
																"nodeType": "YulBlock",
																"src": "748:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:1",
																					"nodeType": "YulLiteral",
																					"src": "757:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:1",
																					"nodeType": "YulLiteral",
																					"src": "760:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:1"
																			},
																			"nativeSrc": "750:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:1"
																		},
																		"nativeSrc": "750:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:1"
																		},
																		"nativeSrc": "719:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:1",
																		"nodeType": "YulLiteral",
																		"src": "744:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:1"
																},
																"nativeSrc": "715:32:1",
																"nodeType": "YulFunctionCall",
																"src": "715:32:1"
															},
															"nativeSrc": "712:52:1",
															"nodeType": "YulIf",
															"src": "712:52:1"
														},
														{
															"nativeSrc": "773:39:1",
															"nodeType": "YulAssignment",
															"src": "773:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:1"
																},
																"nativeSrc": "783:29:1",
																"nodeType": "YulFunctionCall",
																"src": "783:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																}
															]
														},
														{
															"nativeSrc": "821:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:1",
																"nodeType": "YulLiteral",
																"src": "834:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:1",
																	"nodeType": "YulTypedName",
																	"src": "825:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:1",
															"nodeType": "YulAssignment",
															"src": "844:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:1",
																				"nodeType": "YulLiteral",
																				"src": "881:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:1"
																		},
																		"nativeSrc": "866:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:1"
																},
																"nativeSrc": "853:32:1",
																"nodeType": "YulFunctionCall",
																"src": "853:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:1"
																}
															]
														},
														{
															"nativeSrc": "894:15:1",
															"nodeType": "YulAssignment",
															"src": "894:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:1",
																"nodeType": "YulIdentifier",
																"src": "904:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:1",
														"nodeType": "YulTypedName",
														"src": "660:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:1",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:1",
														"nodeType": "YulTypedName",
														"src": "683:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:1",
														"nodeType": "YulTypedName",
														"src": "691:6:1",
														"type": ""
													}
												],
												"src": "615:300:1"
											},
											{
												"body": {
													"nativeSrc": "1015:92:1",
													"nodeType": "YulBlock",
													"src": "1015:92:1",
													"statements": [
														{
															"nativeSrc": "1025:26:1",
															"nodeType": "YulAssignment",
															"src": "1025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:1"
																},
																"nativeSrc": "1033:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:1"
																				},
																				"nativeSrc": "1085:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:1"
																		},
																		"nativeSrc": "1078:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nativeSrc": "1060:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:1"
															},
															"nativeSrc": "1060:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:1",
														"nodeType": "YulTypedName",
														"src": "984:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:1",
														"nodeType": "YulTypedName",
														"src": "995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:1",
														"nodeType": "YulTypedName",
														"src": "1006:4:1",
														"type": ""
													}
												],
												"src": "920:187:1"
											},
											{
												"body": {
													"nativeSrc": "1213:76:1",
													"nodeType": "YulBlock",
													"src": "1213:76:1",
													"statements": [
														{
															"nativeSrc": "1223:26:1",
															"nodeType": "YulAssignment",
															"src": "1223:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:1"
																},
																"nativeSrc": "1231:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																},
																"nativeSrc": "1258:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:1"
															},
															"nativeSrc": "1258:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:1",
														"nodeType": "YulTypedName",
														"src": "1182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:1",
														"nodeType": "YulTypedName",
														"src": "1204:4:1",
														"type": ""
													}
												],
												"src": "1112:177:1"
											},
											{
												"body": {
													"nativeSrc": "1398:270:1",
													"nodeType": "YulBlock",
													"src": "1398:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:1",
																"nodeType": "YulBlock",
																"src": "1444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:1"
																			},
																			"nativeSrc": "1446:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:1"
																		},
																		"nativeSrc": "1446:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:1"
																		},
																		"nativeSrc": "1415:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:1"
																},
																"nativeSrc": "1411:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:1"
															},
															"nativeSrc": "1408:52:1",
															"nodeType": "YulIf",
															"src": "1408:52:1"
														},
														{
															"nativeSrc": "1469:39:1",
															"nodeType": "YulAssignment",
															"src": "1469:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:1"
																},
																"nativeSrc": "1479:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:1"
																}
															]
														},
														{
															"nativeSrc": "1517:48:1",
															"nodeType": "YulAssignment",
															"src": "1517:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:1"
																		},
																		"nativeSrc": "1546:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:1"
																},
																"nativeSrc": "1527:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:1"
																}
															]
														},
														{
															"nativeSrc": "1574:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:1",
																"nodeType": "YulLiteral",
																"src": "1587:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:1",
															"nodeType": "YulAssignment",
															"src": "1597:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:1"
																		},
																		"nativeSrc": "1619:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:1"
																},
																"nativeSrc": "1606:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:1"
																}
															]
														},
														{
															"nativeSrc": "1647:15:1",
															"nodeType": "YulAssignment",
															"src": "1647:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:1",
																"nodeType": "YulIdentifier",
																"src": "1657:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:1",
														"nodeType": "YulTypedName",
														"src": "1348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:1",
														"nodeType": "YulTypedName",
														"src": "1359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:1",
														"nodeType": "YulTypedName",
														"src": "1371:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:1",
														"nodeType": "YulTypedName",
														"src": "1379:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:1",
														"nodeType": "YulTypedName",
														"src": "1387:6:1",
														"type": ""
													}
												],
												"src": "1294:374:1"
											},
											{
												"body": {
													"nativeSrc": "1770:87:1",
													"nodeType": "YulBlock",
													"src": "1770:87:1",
													"statements": [
														{
															"nativeSrc": "1780:26:1",
															"nodeType": "YulAssignment",
															"src": "1780:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:1"
																},
																"nativeSrc": "1788:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:1"
																		},
																		"nativeSrc": "1833:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:1"
																},
																"nativeSrc": "1815:36:1",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:1"
															},
															"nativeSrc": "1815:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:1",
														"nodeType": "YulTypedName",
														"src": "1739:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:1",
														"nodeType": "YulTypedName",
														"src": "1750:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:1",
														"nodeType": "YulTypedName",
														"src": "1761:4:1",
														"type": ""
													}
												],
												"src": "1673:184:1"
											},
											{
												"body": {
													"nativeSrc": "1932:116:1",
													"nodeType": "YulBlock",
													"src": "1932:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:1",
																"nodeType": "YulBlock",
																"src": "1978:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:1"
																			},
																			"nativeSrc": "1980:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:1"
																		},
																		"nativeSrc": "1980:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:1"
																		},
																		"nativeSrc": "1949:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:1"
																},
																"nativeSrc": "1945:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:1"
															},
															"nativeSrc": "1942:52:1",
															"nodeType": "YulIf",
															"src": "1942:52:1"
														},
														{
															"nativeSrc": "2003:39:1",
															"nodeType": "YulAssignment",
															"src": "2003:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:1"
																},
																"nativeSrc": "2013:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:1",
														"nodeType": "YulTypedName",
														"src": "1898:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:1",
														"nodeType": "YulTypedName",
														"src": "1909:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:1",
														"nodeType": "YulTypedName",
														"src": "1921:6:1",
														"type": ""
													}
												],
												"src": "1862:186:1"
											},
											{
												"body": {
													"nativeSrc": "2140:173:1",
													"nodeType": "YulBlock",
													"src": "2140:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:1",
																"nodeType": "YulBlock",
																"src": "2186:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:1"
																			},
																			"nativeSrc": "2188:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:1"
																		},
																		"nativeSrc": "2188:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:1"
																		},
																		"nativeSrc": "2157:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:1"
																},
																"nativeSrc": "2153:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:1"
															},
															"nativeSrc": "2150:52:1",
															"nodeType": "YulIf",
															"src": "2150:52:1"
														},
														{
															"nativeSrc": "2211:39:1",
															"nodeType": "YulAssignment",
															"src": "2211:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:1"
																},
																"nativeSrc": "2221:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:1"
																}
															]
														},
														{
															"nativeSrc": "2259:48:1",
															"nodeType": "YulAssignment",
															"src": "2259:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:1"
																		},
																		"nativeSrc": "2288:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:1"
																},
																"nativeSrc": "2269:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:1",
														"nodeType": "YulTypedName",
														"src": "2098:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:1",
														"nodeType": "YulTypedName",
														"src": "2109:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:1",
														"nodeType": "YulTypedName",
														"src": "2121:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:1",
														"nodeType": "YulTypedName",
														"src": "2129:6:1",
														"type": ""
													}
												],
												"src": "2053:260:1"
											},
											{
												"body": {
													"nativeSrc": "2373:325:1",
													"nodeType": "YulBlock",
													"src": "2373:325:1",
													"statements": [
														{
															"nativeSrc": "2383:22:1",
															"nodeType": "YulAssignment",
															"src": "2383:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:1"
																},
																"nativeSrc": "2393:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:1"
																}
															]
														},
														{
															"nativeSrc": "2414:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:1"
																},
																"nativeSrc": "2440:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:1",
																"nodeType": "YulBlock",
																"src": "2491:31:1",
																"statements": [
																	{
																		"nativeSrc": "2493:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:1"
																			},
																			"nativeSrc": "2503:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:1"
																},
																"nativeSrc": "2464:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:1"
															},
															"nativeSrc": "2461:61:1",
															"nodeType": "YulIf",
															"src": "2461:61:1"
														},
														{
															"body": {
																"nativeSrc": "2581:111:1",
																"nodeType": "YulBlock",
																"src": "2581:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:1"
																					},
																					"nativeSrc": "2605:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:1"
																			},
																			"nativeSrc": "2595:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:1"
																		},
																		"nativeSrc": "2595:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:1"
																			},
																			"nativeSrc": "2639:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:1"
																		},
																		"nativeSrc": "2639:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:1"
																			},
																			"nativeSrc": "2667:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:1"
																		},
																		"nativeSrc": "2667:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:1"
																		},
																		"nativeSrc": "2557:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:1"
																},
																"nativeSrc": "2534:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:1"
															},
															"nativeSrc": "2531:161:1",
															"nodeType": "YulIf",
															"src": "2531:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:1",
														"nodeType": "YulTypedName",
														"src": "2353:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:1",
														"nodeType": "YulTypedName",
														"src": "2362:6:1",
														"type": ""
													}
												],
												"src": "2318:380:1"
											},
											{
												"body": {
													"nativeSrc": "2751:174:1",
													"nodeType": "YulBlock",
													"src": "2751:174:1",
													"statements": [
														{
															"nativeSrc": "2761:16:1",
															"nodeType": "YulAssignment",
															"src": "2761:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2772:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2775:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2768:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:1"
																},
																"nativeSrc": "2768:9:1",
																"nodeType": "YulFunctionCall",
																"src": "2768:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2761:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2808:111:1",
																"nodeType": "YulBlock",
																"src": "2808:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2829:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2836:3:1",
																							"nodeType": "YulLiteral",
																							"src": "2836:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2841:10:1",
																							"nodeType": "YulLiteral",
																							"src": "2841:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2832:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "2832:3:1"
																					},
																					"nativeSrc": "2832:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2822:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:6:1"
																			},
																			"nativeSrc": "2822:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:31:1"
																		},
																		"nativeSrc": "2822:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2822:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2876:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2876:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2866:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2866:6:1"
																			},
																			"nativeSrc": "2866:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2866:15:1"
																		},
																		"nativeSrc": "2866:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:1"
																			},
																			"nativeSrc": "2894:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:15:1"
																		},
																		"nativeSrc": "2894:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2792:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "2792:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2795:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2795:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2789:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:1"
																},
																"nativeSrc": "2789:10:1",
																"nodeType": "YulFunctionCall",
																"src": "2789:10:1"
															},
															"nativeSrc": "2786:133:1",
															"nodeType": "YulIf",
															"src": "2786:133:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2703:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2734:1:1",
														"nodeType": "YulTypedName",
														"src": "2734:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2737:1:1",
														"nodeType": "YulTypedName",
														"src": "2737:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2743:3:1",
														"nodeType": "YulTypedName",
														"src": "2743:3:1",
														"type": ""
													}
												],
												"src": "2703:222:1"
											},
											{
												"body": {
													"nativeSrc": "3104:227:1",
													"nodeType": "YulBlock",
													"src": "3104:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:1"
																},
																"nativeSrc": "3114:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:1"
															},
															"nativeSrc": "3114:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3114:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3155:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3166:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3151:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:1"
																		},
																		"nativeSrc": "3151:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3171:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:1"
																},
																"nativeSrc": "3144:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3144:30:1"
															},
															"nativeSrc": "3144:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3144:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3194:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3190:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:1"
																		},
																		"nativeSrc": "3190:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3210:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3210:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3183:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:1"
																},
																"nativeSrc": "3183:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3183:62:1"
															},
															"nativeSrc": "3183:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3183:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:1"
																		},
																		"nativeSrc": "3261:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3281:7:1",
																		"nodeType": "YulLiteral",
																		"src": "3281:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3254:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:1"
																},
																"nativeSrc": "3254:35:1",
																"nodeType": "YulFunctionCall",
																"src": "3254:35:1"
															},
															"nativeSrc": "3254:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "3254:35:1"
														},
														{
															"nativeSrc": "3298:27:1",
															"nodeType": "YulAssignment",
															"src": "3298:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3310:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3310:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3321:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3306:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:1"
																},
																"nativeSrc": "3306:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3306:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3298:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3298:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2930:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3081:9:1",
														"nodeType": "YulTypedName",
														"src": "3081:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3095:4:1",
														"nodeType": "YulTypedName",
														"src": "3095:4:1",
														"type": ""
													}
												],
												"src": "2930:401:1"
											},
											{
												"body": {
													"nativeSrc": "3510:226:1",
													"nodeType": "YulBlock",
													"src": "3510:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3527:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3527:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3538:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:1"
																},
																"nativeSrc": "3520:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3520:21:1"
															},
															"nativeSrc": "3520:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3520:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3572:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:1"
																		},
																		"nativeSrc": "3557:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3550:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:1"
																},
																"nativeSrc": "3550:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3550:30:1"
															},
															"nativeSrc": "3550:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3550:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3600:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3611:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3611:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3596:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:1"
																		},
																		"nativeSrc": "3596:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3616:34:1",
																		"nodeType": "YulLiteral",
																		"src": "3616:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:1"
																},
																"nativeSrc": "3589:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3589:62:1"
															},
															"nativeSrc": "3589:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3589:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3671:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3682:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3667:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:1"
																		},
																		"nativeSrc": "3667:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3687:6:1",
																		"nodeType": "YulLiteral",
																		"src": "3687:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3660:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:1"
																},
																"nativeSrc": "3660:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3660:34:1"
															},
															"nativeSrc": "3660:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3660:34:1"
														},
														{
															"nativeSrc": "3703:27:1",
															"nodeType": "YulAssignment",
															"src": "3703:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3715:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3715:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:3:1",
																		"nodeType": "YulLiteral",
																		"src": "3726:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3711:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:1"
																},
																"nativeSrc": "3711:19:1",
																"nodeType": "YulFunctionCall",
																"src": "3711:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3703:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3703:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3336:400:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:1",
														"nodeType": "YulTypedName",
														"src": "3487:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3501:4:1",
														"nodeType": "YulTypedName",
														"src": "3501:4:1",
														"type": ""
													}
												],
												"src": "3336:400:1"
											},
											{
												"body": {
													"nativeSrc": "3915:224:1",
													"nodeType": "YulBlock",
													"src": "3915:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3932:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3925:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:1"
																},
																"nativeSrc": "3925:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3925:21:1"
															},
															"nativeSrc": "3925:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3966:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3977:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:1"
																		},
																		"nativeSrc": "3962:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:1"
																},
																"nativeSrc": "3955:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3955:30:1"
															},
															"nativeSrc": "3955:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4005:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4001:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:1"
																		},
																		"nativeSrc": "4001:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4021:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4021:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:1"
																},
																"nativeSrc": "3994:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3994:62:1"
															},
															"nativeSrc": "3994:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "3994:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4076:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4076:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4087:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4072:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:1"
																		},
																		"nativeSrc": "4072:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4092:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4092:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4065:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:1"
																},
																"nativeSrc": "4065:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4065:32:1"
															},
															"nativeSrc": "4065:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "4065:32:1"
														},
														{
															"nativeSrc": "4106:27:1",
															"nodeType": "YulAssignment",
															"src": "4106:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:1"
																},
																"nativeSrc": "4114:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4114:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4106:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3741:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:1",
														"nodeType": "YulTypedName",
														"src": "3892:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3906:4:1",
														"nodeType": "YulTypedName",
														"src": "3906:4:1",
														"type": ""
													}
												],
												"src": "3741:398:1"
											},
											{
												"body": {
													"nativeSrc": "4318:179:1",
													"nodeType": "YulBlock",
													"src": "4318:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4335:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4335:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4328:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:1"
																},
																"nativeSrc": "4328:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4328:21:1"
															},
															"nativeSrc": "4328:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4328:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4369:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4380:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4365:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:1"
																		},
																		"nativeSrc": "4365:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4385:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4358:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:1"
																},
																"nativeSrc": "4358:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4358:30:1"
															},
															"nativeSrc": "4358:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4358:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:1"
																		},
																		"nativeSrc": "4404:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4424:31:1",
																		"nodeType": "YulLiteral",
																		"src": "4424:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4397:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:1"
																},
																"nativeSrc": "4397:59:1",
																"nodeType": "YulFunctionCall",
																"src": "4397:59:1"
															},
															"nativeSrc": "4397:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "4397:59:1"
														},
														{
															"nativeSrc": "4465:26:1",
															"nodeType": "YulAssignment",
															"src": "4465:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:1"
																},
																"nativeSrc": "4473:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4144:353:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4295:9:1",
														"nodeType": "YulTypedName",
														"src": "4295:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4309:4:1",
														"nodeType": "YulTypedName",
														"src": "4309:4:1",
														"type": ""
													}
												],
												"src": "4144:353:1"
											},
											{
												"body": {
													"nativeSrc": "4676:227:1",
													"nodeType": "YulBlock",
													"src": "4676:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4693:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4704:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4686:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:1"
																},
																"nativeSrc": "4686:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4686:21:1"
															},
															"nativeSrc": "4686:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4686:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:1"
																		},
																		"nativeSrc": "4723:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4716:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:1"
																},
																"nativeSrc": "4716:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4716:30:1"
															},
															"nativeSrc": "4716:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4716:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4766:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4777:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4762:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:1"
																		},
																		"nativeSrc": "4762:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4782:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4782:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:1"
																},
																"nativeSrc": "4755:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4755:62:1"
															},
															"nativeSrc": "4755:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4755:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4837:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4848:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4833:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:1"
																		},
																		"nativeSrc": "4833:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4853:7:1",
																		"nodeType": "YulLiteral",
																		"src": "4853:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4826:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:1"
																},
																"nativeSrc": "4826:35:1",
																"nodeType": "YulFunctionCall",
																"src": "4826:35:1"
															},
															"nativeSrc": "4826:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "4826:35:1"
														},
														{
															"nativeSrc": "4870:27:1",
															"nodeType": "YulAssignment",
															"src": "4870:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4882:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4893:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4878:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:1"
																},
																"nativeSrc": "4878:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4878:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4870:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4502:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4653:9:1",
														"nodeType": "YulTypedName",
														"src": "4653:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4667:4:1",
														"nodeType": "YulTypedName",
														"src": "4667:4:1",
														"type": ""
													}
												],
												"src": "4502:401:1"
											},
											{
												"body": {
													"nativeSrc": "5082:225:1",
													"nodeType": "YulBlock",
													"src": "5082:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5099:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5110:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5092:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:1"
																},
																"nativeSrc": "5092:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5092:21:1"
															},
															"nativeSrc": "5092:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5092:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5133:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5129:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:1"
																		},
																		"nativeSrc": "5129:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5122:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:1"
																},
																"nativeSrc": "5122:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5122:30:1"
															},
															"nativeSrc": "5122:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5122:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5172:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5172:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5168:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:1"
																		},
																		"nativeSrc": "5168:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5188:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5188:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5161:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:1"
																},
																"nativeSrc": "5161:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5161:62:1"
															},
															"nativeSrc": "5161:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5161:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:1"
																		},
																		"nativeSrc": "5239:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5259:5:1",
																		"nodeType": "YulLiteral",
																		"src": "5259:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:1"
																},
																"nativeSrc": "5232:33:1",
																"nodeType": "YulFunctionCall",
																"src": "5232:33:1"
															},
															"nativeSrc": "5232:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "5232:33:1"
														},
														{
															"nativeSrc": "5274:27:1",
															"nodeType": "YulAssignment",
															"src": "5274:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5286:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5282:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:1"
																},
																"nativeSrc": "5282:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5282:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5274:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5274:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4908:399:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5059:9:1",
														"nodeType": "YulTypedName",
														"src": "5059:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5073:4:1",
														"nodeType": "YulTypedName",
														"src": "5073:4:1",
														"type": ""
													}
												],
												"src": "4908:399:1"
											},
											{
												"body": {
													"nativeSrc": "5486:228:1",
													"nodeType": "YulBlock",
													"src": "5486:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5503:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5496:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:1"
																},
																"nativeSrc": "5496:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:1"
															},
															"nativeSrc": "5496:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "5496:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:1"
																		},
																		"nativeSrc": "5533:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:1"
																},
																"nativeSrc": "5526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5526:30:1"
															},
															"nativeSrc": "5526:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "5526:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5587:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5587:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:1"
																		},
																		"nativeSrc": "5572:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5592:34:1",
																		"nodeType": "YulLiteral",
																		"src": "5592:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5565:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:1"
																},
																"nativeSrc": "5565:62:1",
																"nodeType": "YulFunctionCall",
																"src": "5565:62:1"
															},
															"nativeSrc": "5565:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "5565:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:1",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:1"
																		},
																		"nativeSrc": "5643:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5663:8:1",
																		"nodeType": "YulLiteral",
																		"src": "5663:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:1"
																},
																"nativeSrc": "5636:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5636:36:1"
															},
															"nativeSrc": "5636:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "5636:36:1"
														},
														{
															"nativeSrc": "5681:27:1",
															"nodeType": "YulAssignment",
															"src": "5681:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:3:1",
																		"nodeType": "YulLiteral",
																		"src": "5704:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5689:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:1"
																},
																"nativeSrc": "5689:19:1",
																"nodeType": "YulFunctionCall",
																"src": "5689:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5681:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5681:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5312:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5463:9:1",
														"nodeType": "YulTypedName",
														"src": "5463:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5477:4:1",
														"nodeType": "YulTypedName",
														"src": "5477:4:1",
														"type": ""
													}
												],
												"src": "5312:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf9190610691565b60405180910390f35b6100db6100d63660046106e1565b61022b565b60405190151581526020016100bf565b6035545b6040519081526020016100bf565b6100db61010b366004610709565b610244565b604051601281526020016100bf565b6100db61012d3660046106e1565b610267565b6100ef610140366004610743565b6001600160a01b03165f9081526033602052604090205490565b6100b2610288565b6100db6101703660046106e1565b610297565b6100db6101833660046106e1565b610316565b6100ef610196366004610763565b610323565b6060603680546101aa90610794565b80601f01602080910402602001604051908101604052809291908181526020018280546101d690610794565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107cc565b61034d565b6060603780546101aa90610794565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260336020526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f8181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906106849086815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106dc575f5ffd5b919050565b5f5f604083850312156106f2575f5ffd5b6106fb836106c6565b946020939093013593505050565b5f5f5f6060848603121561071b575f5ffd5b610724846106c6565b9250610732602085016106c6565b929592945050506040919091013590565b5f60208284031215610753575f5ffd5b61075c826106c6565b9392505050565b5f5f60408385031215610774575f5ffd5b61077d836106c6565b915061078b602084016106c6565b90509250929050565b600181811c908216806107a857607f821691505b6020821081036107c657634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212208df363c2a489aa8189ef72b86255ef9669878b57a12861ca141611bbf3ae94bf64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x743 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E1 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x763 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x794 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7CC JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0x684 SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DC JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x6FB DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x71B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x724 DUP5 PUSH2 0x6C6 JUMP JUMPDEST SWAP3 POP PUSH2 0x732 PUSH1 0x20 DUP6 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x753 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x75C DUP3 PUSH2 0x6C6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77D DUP4 PUSH2 0x6C6 JUMP JUMPDEST SWAP2 POP PUSH2 0x78B PUSH1 0x20 DUP5 ADD PUSH2 0x6C6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7A8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 RETURN PUSH4 0xC2A489AA DUP2 DUP10 0xEF PUSH19 0xB86255EF9669878B57A12861CA141611BBF3AE SWAP5 0xBF PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "22592:11861:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23476:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25762:197;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:1;;1078:22;1060:41;;1048:2;1033:18;25762:197:0;920:187:1;24573:106:0;24660:12;;24573:106;;;1258:25:1;;;1246:2;1231:18;24573:106:0;1112:177:1;26521:256:0;;;;;;:::i;:::-;;:::i;24422:91::-;;;24504:2;1815:36:1;;1803:2;1788:18;24422:91:0;1673:184:1;27172:234:0;;;;;;:::i;:::-;;:::i;24737:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;24837:18:0;24811:7;24837:18;;;:9;:18;;;;;;;24737:125;23687:102;;;:::i;27893:427::-;;;;;;:::i;:::-;;:::i;25058:189::-;;;;;;:::i;:::-;;:::i;25305:149::-;;;;;;:::i;:::-;;:::i;23476:98::-;23530:13;23562:5;23555:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23476:98;:::o;25762:197::-;25845:4;20588:10;25899:32;20588:10;25915:7;25924:6;25899:8;:32::i;:::-;25948:4;25941:11;;;25762:197;;;;;:::o;26521:256::-;26618:4;20588:10;26674:38;26690:4;20588:10;26705:6;26674:15;:38::i;:::-;26722:27;26732:4;26738:2;26742:6;26722:9;:27::i;:::-;-1:-1:-1;26766:4:0;;26521:256;-1:-1:-1;;;;26521:256:0:o;27172:234::-;27260:4;20588:10;27314:64;20588:10;27330:7;27367:10;27339:25;20588:10;27330:7;27339:9;:25::i;:::-;:38;;;;:::i;:::-;27314:8;:64::i;23687:102::-;23743:13;23775:7;23768:14;;;;;:::i;27893:427::-;27986:4;20588:10;27986:4;28067:25;20588:10;28084:7;28067:9;:25::i;:::-;28040:52;;28130:15;28110:16;:35;;28102:85;;;;-1:-1:-1;;;28102:85:0;;3132:2:1;28102:85:0;;;3114:21:1;3171:2;3151:18;;;3144:30;3210:34;3190:18;;;3183:62;-1:-1:-1;;;3261:18:1;;;3254:35;3306:19;;28102:85:0;;;;;;;;;28221:60;28230:5;28237:7;28265:15;28246:16;:34;28221:8;:60::i;25058:189::-;25137:4;20588:10;25191:28;20588:10;25208:2;25212:6;25191:9;:28::i;25305:149::-;-1:-1:-1;;;;;25420:18:0;;;25394:7;25420:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;25305:149::o;31775:340::-;-1:-1:-1;;;;;31876:19:0;;31868:68;;;;-1:-1:-1;;;31868:68:0;;3538:2:1;31868:68:0;;;3520:21:1;3577:2;3557:18;;;3550:30;3616:34;3596:18;;;3589:62;-1:-1:-1;;;3667:18:1;;;3660:34;3711:19;;31868:68:0;3336:400:1;31868:68:0;-1:-1:-1;;;;;31954:21:0;;31946:68;;;;-1:-1:-1;;;31946:68:0;;3943:2:1;31946:68:0;;;3925:21:1;3982:2;3962:18;;;3955:30;4021:34;4001:18;;;3994:62;-1:-1:-1;;;4072:18:1;;;4065:32;4114:19;;31946:68:0;3741:398:1;31946:68:0;-1:-1:-1;;;;;32025:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;32076:32;;1258:25:1;;;32076:32:0;;1231:18:1;32076:32:0;;;;;;;31775:340;;;:::o;32396:411::-;32496:24;32523:25;32533:5;32540:7;32523:9;:25::i;:::-;32496:52;;-1:-1:-1;;32562:16:0;:37;32558:243;;32643:6;32623:16;:26;;32615:68;;;;-1:-1:-1;;;32615:68:0;;4346:2:1;32615:68:0;;;4328:21:1;4385:2;4365:18;;;4358:30;4424:31;4404:18;;;4397:59;4473:18;;32615:68:0;4144:353:1;32615:68:0;32725:51;32734:5;32741:7;32769:6;32750:16;:25;32725:8;:51::i;:::-;32486:321;32396:411;;;:::o;28774:788::-;-1:-1:-1;;;;;28870:18:0;;28862:68;;;;-1:-1:-1;;;28862:68:0;;4704:2:1;28862:68:0;;;4686:21:1;4743:2;4723:18;;;4716:30;4782:34;4762:18;;;4755:62;-1:-1:-1;;;4833:18:1;;;4826:35;4878:19;;28862:68:0;4502:401:1;28862:68:0;-1:-1:-1;;;;;28948:16:0;;28940:64;;;;-1:-1:-1;;;28940:64:0;;5110:2:1;28940:64:0;;;5092:21:1;5149:2;5129:18;;;5122:30;5188:34;5168:18;;;5161:62;-1:-1:-1;;;5239:18:1;;;5232:33;5282:19;;28940:64:0;4908:399:1;28940:64:0;-1:-1:-1;;;;;29086:15:0;;29064:19;29086:15;;;:9;:15;;;;;;29119:21;;;;29111:72;;;;-1:-1:-1;;;29111:72:0;;5514:2:1;29111:72:0;;;5496:21:1;5553:2;5533:18;;;5526:30;5592:34;5572:18;;;5565:62;-1:-1:-1;;;5643:18:1;;;5636:36;5689:19;;29111:72:0;5312:402:1;29111:72:0;-1:-1:-1;;;;;29217:15:0;;;;;;;:9;:15;;;;;;29235:20;;;29217:38;;29432:13;;;;;;;;;;:23;;;;;;29481:26;;;;;;29249:6;1258:25:1;;1246:2;1231:18;;1112:177;29481:26:0;;;;;;;;29518:37;33391:91;14:418:1;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:1;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:1:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:1;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:1:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;2703:222::-;2768:9;;;2789:10;;;2786:133;;;2841:10;2836:3;2832:20;2829:1;2822:31;2876:4;2873:1;2866:15;2904:4;2901:1;2894:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "416200",
								"executionCost": "453",
								"totalCost": "416653"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24623",
								"balanceOf(address)": "2556",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27010",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51141",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22592,
									"end": 34453,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22592,
									"end": 34453,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208df363c2a489aa8189ef72b86255ef9669878b57a12861ca141611bbf3ae94bf64736f6c634300081e0033",
									".code": [
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22592,
											"end": 34453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23476,
											"end": 23574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 23476,
											"end": 23574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25762,
											"end": 25959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25762,
											"end": 25959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24660,
											"end": 24672,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24660,
											"end": 24672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26521,
											"end": 26777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26521,
											"end": 26777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24506,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27172,
											"end": 27406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27172,
											"end": 27406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 24737,
											"end": 24862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24811,
											"end": 24818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24846,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 23687,
											"end": 23789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 27893,
											"end": 28320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 27893,
											"end": 28320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25058,
											"end": 25247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 25058,
											"end": 25247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25305,
											"end": 25454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25305,
											"end": 25454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23530,
											"end": 23543,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23562,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23555,
											"end": 23567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23555,
											"end": 23567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25845,
											"end": 25849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25899,
											"end": 25931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25915,
											"end": 25922,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25924,
											"end": 25930,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25899,
											"end": 25907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 25899,
											"end": 25931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25899,
											"end": 25931,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 25899,
											"end": 25931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25948,
											"end": 25952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25941,
											"end": 25952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 25952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 25952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26618,
											"end": 26622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26690,
											"end": 26694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26705,
											"end": 26711,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 26674,
											"end": 26712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26712,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 26674,
											"end": 26712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26732,
											"end": 26736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26740,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26742,
											"end": 26748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 26722,
											"end": 26749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26749,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 26722,
											"end": 26749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26766,
											"end": 26770,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26766,
											"end": 26770,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26521,
											"end": 26777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27260,
											"end": 27264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27330,
											"end": 27337,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27367,
											"end": 27377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27330,
											"end": 27337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 27339,
											"end": 27364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27364,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 27339,
											"end": 27364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27339,
											"end": 27377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 27314,
											"end": 27378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23743,
											"end": 23756,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23775,
											"end": 23782,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23768,
											"end": 23782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27986,
											"end": 27990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27986,
											"end": 27990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28067,
											"end": 28092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28084,
											"end": 28091,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28067,
											"end": 28076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 28067,
											"end": 28092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28067,
											"end": 28092,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 28067,
											"end": 28092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28130,
											"end": 28145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28110,
											"end": 28126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28110,
											"end": 28145,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28110,
											"end": 28145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3144,
											"end": 3174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3210,
											"end": 3244,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3254,
											"end": 3289,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28221,
											"end": 28281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28230,
											"end": 28235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28237,
											"end": 28244,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28265,
											"end": 28280,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28246,
											"end": 28262,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28246,
											"end": 28280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28221,
											"end": 28229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 28221,
											"end": 28281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25137,
											"end": 25141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25191,
											"end": 25219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25208,
											"end": 25210,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25218,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25191,
											"end": 25200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 25191,
											"end": 25219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25394,
											"end": 25401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25431,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3550,
											"end": 3580,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3616,
											"end": 3650,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3660,
											"end": 3694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3736,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31954,
											"end": 31975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31954,
											"end": 31975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3994,
											"end": 4056,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4065,
											"end": 4097,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3741,
											"end": 4139,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32036,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32061,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32061,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32523,
											"end": 32548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32533,
											"end": 32538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32540,
											"end": 32547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32523,
											"end": 32532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 32523,
											"end": 32548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32523,
											"end": 32548,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 32523,
											"end": 32548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32562,
											"end": 32578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32562,
											"end": 32599,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32558,
											"end": 32801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 32558,
											"end": 32801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32643,
											"end": 32649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32649,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4358,
											"end": 4388,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4424,
											"end": 4455,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4456,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4497,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32725,
											"end": 32776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 32734,
											"end": 32739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32741,
											"end": 32748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32769,
											"end": 32775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32725,
											"end": 32733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 32725,
											"end": 32776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32725,
											"end": 32776,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 32725,
											"end": 32776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32486,
											"end": 32807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 29562,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 28774,
											"end": 29562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28870,
											"end": 28888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28870,
											"end": 28888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4816,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4817,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4502,
											"end": 4903,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28948,
											"end": 28964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28948,
											"end": 28964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5092,
											"end": 5113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5222,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4908,
											"end": 5307,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29064,
											"end": 29083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29119,
											"end": 29140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29119,
											"end": 29140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29119,
											"end": 29140,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29119,
											"end": 29140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5565,
											"end": 5627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5312,
											"end": 5714,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29226,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29235,
											"end": 29255,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29235,
											"end": 29255,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29235,
											"end": 29255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29255,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29249,
											"end": 29255,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29518,
											"end": 29555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 33391,
											"end": 33482,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/tokens/WETH_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/WETH_flattened.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/WETH_flattened.sol\":{\"keccak256\":\"0xd8229db91c1da2575074da952bbd0575f4d99c4eb7a5f7ce6a2cf346e9af8f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282221fc6f02901ee7e33326f1f45663b52a1ad8a8f48f4d71d6335ebf32f221\",\"dweb:/ipfs/QmRYy4ZLKMpjC1u9LiFdG9sKKddBD7r2FhYvCtRq7h7gPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 434,
								"contract": "contracts/tokens/WETH_flattened.sol:ERC20Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 437,
								"contract": "contracts/tokens/WETH_flattened.sol:ERC20Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 643,
								"contract": "contracts/tokens/WETH_flattened.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 658,
								"contract": "contracts/tokens/WETH_flattened.sol:ERC20Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 664,
								"contract": "contracts/tokens/WETH_flattened.sol:ERC20Upgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 666,
								"contract": "contracts/tokens/WETH_flattened.sol:ERC20Upgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 668,
								"contract": "contracts/tokens/WETH_flattened.sol:ERC20Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 670,
								"contract": "contracts/tokens/WETH_flattened.sol:ERC20Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1250,
								"contract": "contracts/tokens/WETH_flattened.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/WETH_flattened.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/WETH_flattened.sol\":{\"keccak256\":\"0xd8229db91c1da2575074da952bbd0575f4d99c4eb7a5f7ce6a2cf346e9af8f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282221fc6f02901ee7e33326f1f45663b52a1ad8a8f48f4d71d6335ebf32f221\",\"dweb:/ipfs/QmRYy4ZLKMpjC1u9LiFdG9sKKddBD7r2FhYvCtRq7h7gPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/WETH_flattened.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/WETH_flattened.sol\":{\"keccak256\":\"0xd8229db91c1da2575074da952bbd0575f4d99c4eb7a5f7ce6a2cf346e9af8f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282221fc6f02901ee7e33326f1f45663b52a1ad8a8f48f4d71d6335ebf32f221\",\"dweb:/ipfs/QmRYy4ZLKMpjC1u9LiFdG9sKKddBD7r2FhYvCtRq7h7gPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Initializable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"custom:oz-retyped-from": "bool",
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"custom:oz-retyped-from\":\"bool\",\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/WETH_flattened.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/WETH_flattened.sol\":{\"keccak256\":\"0xd8229db91c1da2575074da952bbd0575f4d99c4eb7a5f7ce6a2cf346e9af8f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282221fc6f02901ee7e33326f1f45663b52a1ad8a8f48f4d71d6335ebf32f221\",\"dweb:/ipfs/QmRYy4ZLKMpjC1u9LiFdG9sKKddBD7r2FhYvCtRq7h7gPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 434,
								"contract": "contracts/tokens/WETH_flattened.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 437,
								"contract": "contracts/tokens/WETH_flattened.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"OwnableUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"events": {
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/WETH_flattened.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/WETH_flattened.sol\":{\"keccak256\":\"0xd8229db91c1da2575074da952bbd0575f4d99c4eb7a5f7ce6a2cf346e9af8f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282221fc6f02901ee7e33326f1f45663b52a1ad8a8f48f4d71d6335ebf32f221\",\"dweb:/ipfs/QmRYy4ZLKMpjC1u9LiFdG9sKKddBD7r2FhYvCtRq7h7gPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 434,
								"contract": "contracts/tokens/WETH_flattened.sol:OwnableUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 437,
								"contract": "contracts/tokens/WETH_flattened.sol:OwnableUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 643,
								"contract": "contracts/tokens/WETH_flattened.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 1259,
								"contract": "contracts/tokens/WETH_flattened.sol:OwnableUpgradeable",
								"label": "_owner",
								"offset": 0,
								"slot": "51",
								"type": "t_address"
							},
							{
								"astId": 1379,
								"contract": "contracts/tokens/WETH_flattened.sol:OwnableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "52",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"WETH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "dst",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "src",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "Withdrawal",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "wad",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint8)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/tokens/WETH_flattened.sol\":37870:39121  contract WETH is ERC20Upgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/tokens/WETH_flattened.sol\":37870:39121  contract WETH is ERC20Upgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa457c2d7\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_24:\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_17\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      dup1\n      0x313ce567\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/tokens/WETH_flattened.sol\":38281:38290  deposit() */\n      tag_28\n        /* \"contracts/tokens/WETH_flattened.sol\":38281:38288  deposit */\n      tag_29\n        /* \"contracts/tokens/WETH_flattened.sol\":38281:38290  deposit() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/tokens/WETH_flattened.sol\":37870:39121  contract WETH is ERC20Upgradeable, OwnableUpgradeable {... */\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/tokens/WETH_flattened.sol\":23476:23574  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      revert(0x00, 0x00)\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/tokens/WETH_flattened.sol\":25762:25959  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      revert(0x00, 0x00)\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":25762:25959  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_33\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":24573:24679  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":24660:24672  _totalSupply */\n      sload(0x35)\n        /* \"contracts/tokens/WETH_flattened.sol\":24573:24679  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":24573:24679  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_33\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":26521:26777  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      revert(0x00, 0x00)\n    tag_47:\n      pop\n      tag_36\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":38905:39119  function withdraw(uint256 wad) public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      revert(0x00, 0x00)\n    tag_53:\n      pop\n      tag_28\n      tag_55\n      calldatasize\n      0x04\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":24422:24513  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      revert(0x00, 0x00)\n    tag_58:\n      pop\n      mload(0x40)\n        /* \"contracts/tokens/WETH_flattened.sol\":24504:24506  18 */\n      0x12\n        /* \"#utility.yul\":2046:2082   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":24422:24513  function decimals() public view virtual override returns (uint8) {... */\n      tag_33\n        /* \"#utility.yul\":1904:2088   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":27172:27406  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      revert(0x00, 0x00)\n    tag_63:\n      pop\n      tag_36\n      tag_65\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":38439:38685  function withdraw() public onlyOwner {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      revert(0x00, 0x00)\n    tag_68:\n      pop\n      tag_28\n      tag_70\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":38691:38790  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      revert(0x00, 0x00)\n    tag_71:\n      pop\n      tag_28\n      tag_73\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":24737:24862  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      revert(0x00, 0x00)\n    tag_75:\n      pop\n      tag_43\n      tag_77\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24855  _balances[account] */\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":24811:24818  uint256 */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24855  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24846  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24855  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":24737:24862  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":36480:36581  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      revert(0x00, 0x00)\n    tag_81:\n      pop\n      tag_28\n      tag_83\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":38040:38238  function initialize() public initializer {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n      tag_28\n      tag_86\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":35857:35942  function owner() public view virtual returns (address) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      revert(0x00, 0x00)\n    tag_87:\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":35929:35935  _owner */\n      sload(0x65)\n        /* \"contracts/tokens/WETH_flattened.sol\":35857:35942  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":35929:35935  _owner */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2430:2481   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2418:2420   */\n      0x20\n        /* \"#utility.yul\":2403:2421   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":35857:35942  function owner() public view virtual returns (address) {... */\n      tag_33\n        /* \"#utility.yul\":2284:2487   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":23687:23789  function symbol() public view virtual override returns (string memory) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      revert(0x00, 0x00)\n    tag_92:\n      pop\n      tag_31\n      tag_94\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":38796:38899  function burn(address from, uint256 amount) public onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      revert(0x00, 0x00)\n    tag_96:\n      pop\n      tag_28\n      tag_98\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":27893:28320  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_100\n      jumpi\n      revert(0x00, 0x00)\n    tag_100:\n      pop\n      tag_36\n      tag_102\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":25058:25247  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      revert(0x00, 0x00)\n    tag_105:\n      pop\n      tag_36\n      tag_107\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_107:\n      tag_108\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":38303:38433  function deposit() public payable {... */\n    tag_20:\n      tag_28\n      tag_29\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":25305:25454  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      revert(0x00, 0x00)\n    tag_111:\n      pop\n      tag_43\n      tag_113\n      calldatasize\n      0x04\n      tag_114\n      jump\t// in\n    tag_113:\n      tag_115\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":36730:36928  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      revert(0x00, 0x00)\n    tag_117:\n      pop\n      tag_28\n      tag_119\n      calldatasize\n      0x04\n      tag_78\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":38303:38433  function deposit() public payable {... */\n    tag_29:\n        /* \"contracts/tokens/WETH_flattened.sol\":38347:38381  super._mint(msg.sender, msg.value) */\n      tag_122\n        /* \"contracts/tokens/WETH_flattened.sol\":38359:38369  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":38371:38380  msg.value */\n      callvalue\n        /* \"contracts/tokens/WETH_flattened.sol\":38347:38358  super._mint */\n      tag_123\n        /* \"contracts/tokens/WETH_flattened.sol\":38347:38381  super._mint(msg.sender, msg.value) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/tokens/WETH_flattened.sol\":38396:38426  Deposit(msg.sender, msg.value) */\n      mload(0x40)\n        /* \"contracts/tokens/WETH_flattened.sol\":38416:38425  msg.value */\n      callvalue\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":38404:38414  msg.sender */\n      caller\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":38396:38426  Deposit(msg.sender, msg.value) */\n      0xe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c\n      swap1\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":38396:38426  Deposit(msg.sender, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/tokens/WETH_flattened.sol\":38303:38433  function deposit() public payable {... */\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":23476:23574  function name() public view virtual override returns (string memory) {... */\n    tag_32:\n        /* \"contracts/tokens/WETH_flattened.sol\":23530:23543  string memory */\n      0x60\n        /* \"contracts/tokens/WETH_flattened.sol\":23562:23567  _name */\n      0x36\n        /* \"contracts/tokens/WETH_flattened.sol\":23555:23567  return _name */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_127\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":23476:23574  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":25762:25959  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_39:\n        /* \"contracts/tokens/WETH_flattened.sol\":25845:25849  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":25899:25931  _approve(owner, spender, amount) */\n      tag_135\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":25915:25922  spender */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":25924:25930  amount */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":25899:25907  _approve */\n      tag_136\n        /* \"contracts/tokens/WETH_flattened.sol\":25899:25931  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/tokens/WETH_flattened.sol\":25948:25952  true */\n      0x01\n        /* \"contracts/tokens/WETH_flattened.sol\":25941:25952  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":25762:25959  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_132:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":26521:26777  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_51:\n        /* \"contracts/tokens/WETH_flattened.sol\":26618:26622  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":26674:26712  _spendAllowance(from, spender, amount) */\n      tag_140\n        /* \"contracts/tokens/WETH_flattened.sol\":26690:26694  from */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":26705:26711  amount */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":26674:26689  _spendAllowance */\n      tag_141\n        /* \"contracts/tokens/WETH_flattened.sol\":26674:26712  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_140:\n        /* \"contracts/tokens/WETH_flattened.sol\":26722:26749  _transfer(from, to, amount) */\n      tag_142\n        /* \"contracts/tokens/WETH_flattened.sol\":26732:26736  from */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":26738:26740  to */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":26742:26748  amount */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":26722:26731  _transfer */\n      tag_143\n        /* \"contracts/tokens/WETH_flattened.sol\":26722:26749  _transfer(from, to, amount) */\n      jump\t// in\n    tag_142:\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":26766:26770  true */\n      0x01\n      swap5\n        /* \"contracts/tokens/WETH_flattened.sol\":26521:26777  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":38905:39119  function withdraw(uint256 wad) public {... */\n    tag_57:\n        /* \"contracts/tokens/WETH_flattened.sol\":38971:38981  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":24811:24818  uint256 */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24855  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24846  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":24837:24855  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/WETH_flattened.sol\":38986:38989  wad */\n      dup2\n      gt\n        /* \"contracts/tokens/WETH_flattened.sol\":38961:38989  balanceOf(msg.sender) >= wad */\n      iszero\n        /* \"contracts/tokens/WETH_flattened.sol\":38953:38990  require(balanceOf(msg.sender) >= wad) */\n      tag_146\n      jumpi\n      revert(0x00, 0x00)\n    tag_146:\n        /* \"contracts/tokens/WETH_flattened.sol\":39000:39027  super._burn(msg.sender,wad) */\n      tag_147\n        /* \"contracts/tokens/WETH_flattened.sol\":39012:39022  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":39023:39026  wad */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":39000:39011  super._burn */\n      tag_148\n        /* \"contracts/tokens/WETH_flattened.sol\":39000:39027  super._burn(msg.sender,wad) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/tokens/WETH_flattened.sol\":39037:39070  payable(msg.sender).transfer(wad) */\n      mload(0x40)\n        /* \"contracts/tokens/WETH_flattened.sol\":39045:39055  msg.sender */\n      caller\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":39037:39070  payable(msg.sender).transfer(wad) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":39066:39069  wad */\n      dup4\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":39037:39070  payable(msg.sender).transfer(wad) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":39066:39069  wad */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":39045:39055  msg.sender */\n      dup9\n        /* \"contracts/tokens/WETH_flattened.sol\":39037:39070  payable(msg.sender).transfer(wad) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_150\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_150:\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":39085:39112  Withdrawal(msg.sender, wad) */\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":39096:39106  msg.sender */\n      caller\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":39085:39112  Withdrawal(msg.sender, wad) */\n      0x7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65\n      swap1\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":39085:39112  Withdrawal(msg.sender, wad) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/tokens/WETH_flattened.sol\":38905:39119  function withdraw(uint256 wad) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":27172:27406  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_66:\n        /* \"contracts/tokens/WETH_flattened.sol\":27260:27264  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":27314:27378  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_135\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":27330:27337  spender */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":27367:27377  addedValue */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":27339:27364  allowance(owner, spender) */\n      tag_156\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup4\n        /* \"contracts/tokens/WETH_flattened.sol\":27330:27337  spender */\n      dup4\n        /* \"contracts/tokens/WETH_flattened.sol\":27339:27348  allowance */\n      tag_115\n        /* \"contracts/tokens/WETH_flattened.sol\":27339:27364  allowance(owner, spender) */\n      jump\t// in\n    tag_156:\n        /* \"contracts/tokens/WETH_flattened.sol\":27339:27377  allowance(owner, spender) + addedValue */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/tokens/WETH_flattened.sol\":27314:27322  _approve */\n      tag_136\n        /* \"contracts/tokens/WETH_flattened.sol\":27314:27378  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":38439:38685  function withdraw() public onlyOwner {... */\n    tag_70:\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      tag_160\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35761  _checkOwner */\n      tag_161\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/tokens/WETH_flattened.sol\":38503:38524  address(this).balance */\n      selfbalance\n        /* \"contracts/tokens/WETH_flattened.sol\":38542:38552  amount > 0 */\n      dup1\n        /* \"contracts/tokens/WETH_flattened.sol\":38534:38587  require(amount > 0, \"Not enough balance to withdraw\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3606:3608   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":38534:38587  require(amount > 0, \"Not enough balance to withdraw\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3588:3609   */\n      mstore\n        /* \"#utility.yul\":3645:3647   */\n      0x1e\n        /* \"#utility.yul\":3625:3643   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3618:3648   */\n      mstore\n        /* \"#utility.yul\":3684:3716   */\n      0x4e6f7420656e6f7567682062616c616e636520746f2077697468647261770000\n        /* \"#utility.yul\":3664:3682   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3657:3717   */\n      mstore\n        /* \"#utility.yul\":3734:3752   */\n      0x64\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":38534:38587  require(amount > 0, \"Not enough balance to withdraw\") */\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/tokens/WETH_flattened.sol\":38691:38790  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_74:\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      tag_170\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35761  _checkOwner */\n      tag_161\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/tokens/WETH_flattened.sol\":38760:38783  super._mint(to, amount) */\n      tag_172\n        /* \"contracts/tokens/WETH_flattened.sol\":38772:38774  to */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":38776:38782  amount */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":38760:38771  super._mint */\n      tag_123\n        /* \"contracts/tokens/WETH_flattened.sol\":38760:38783  super._mint(to, amount) */\n      jump\t// in\n    tag_172:\n        /* \"contracts/tokens/WETH_flattened.sol\":38691:38790  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":36480:36581  function renounceOwnership() public virtual onlyOwner {... */\n    tag_83:\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      tag_175\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35761  _checkOwner */\n      tag_161\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      jump\t// in\n    tag_175:\n        /* \"contracts/tokens/WETH_flattened.sol\":36544:36574  _transferOwnership(address(0)) */\n      tag_177\n        /* \"contracts/tokens/WETH_flattened.sol\":36571:36572  0 */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":36544:36562  _transferOwnership */\n      tag_178\n        /* \"contracts/tokens/WETH_flattened.sol\":36544:36574  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/tokens/WETH_flattened.sol\":36480:36581  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":38040:38238  function initialize() public initializer {... */\n    tag_86:\n        /* \"contracts/tokens/WETH_flattened.sol\":16279:16298  bool isTopLevelCall */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":16302:16315  _initializing */\n      sload\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":16301:16315  !_initializing */\n      iszero\n      dup1\n        /* \"contracts/tokens/WETH_flattened.sol\":16347:16381  isTopLevelCall && _initialized < 1 */\n      dup1\n      iszero\n      tag_180\n      jumpi\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":16365:16377  _initialized */\n      sload(0x00)\n        /* \"contracts/tokens/WETH_flattened.sol\":16380:16381  1 */\n      0x01\n        /* \"contracts/tokens/WETH_flattened.sol\":16365:16377  _initialized */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":16365:16381  _initialized < 1 */\n      lt\n        /* \"contracts/tokens/WETH_flattened.sol\":16347:16381  isTopLevelCall && _initialized < 1 */\n    tag_180:\n        /* \"contracts/tokens/WETH_flattened.sol\":16346:16454  (isTopLevelCall && _initialized < 1) || (!AddressUpgradeable.isContract(address(this)) && _initialized == 1) */\n      dup1\n      tag_184\n      jumpi\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":16426:16430  this */\n      address\n        /* \"contracts/tokens/WETH_flattened.sol\":5337:5356  account.code.length */\n      extcodesize\n        /* \"contracts/tokens/WETH_flattened.sol\":5337:5360  account.code.length > 0 */\n      iszero\n      dup1\n      iszero\n        /* \"contracts/tokens/WETH_flattened.sol\":16387:16453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n      tag_184\n      jumpi\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":16436:16448  _initialized */\n      and(0xff, sload(0x00))\n      0x01\n        /* \"contracts/tokens/WETH_flattened.sol\":16436:16453  _initialized == 1 */\n      eq\n        /* \"contracts/tokens/WETH_flattened.sol\":16387:16453  !AddressUpgradeable.isContract(address(this)) && _initialized == 1 */\n    tag_184:\n        /* \"contracts/tokens/WETH_flattened.sol\":16325:16526  require(... */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3965:3967   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":16325:16526  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3947:3968   */\n      mstore\n        /* \"#utility.yul\":4004:4006   */\n      0x2e\n        /* \"#utility.yul\":3984:4002   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3977:4007   */\n      mstore\n        /* \"#utility.yul\":4043:4077   */\n      0x496e697469616c697a61626c653a20636f6e747261637420697320616c726561\n        /* \"#utility.yul\":4023:4041   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4016:4078   */\n      mstore\n      shl(0x92, 0x191e481a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":4094:4112   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4087:4131   */\n      mstore\n        /* \"#utility.yul\":4148:4167   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":16325:16526  require(... */\n      tag_164\n        /* \"#utility.yul\":3763:4173   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":16325:16526  require(... */\n    tag_185:\n        /* \"contracts/tokens/WETH_flattened.sol\":16536:16548  _initialized */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":16536:16552  _initialized = 1 */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":16551:16552  1 */\n      0x01\n        /* \"contracts/tokens/WETH_flattened.sol\":16536:16552  _initialized = 1 */\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":16562:16627  if (isTopLevelCall) {... */\n      dup1\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/tokens/WETH_flattened.sol\":16596:16609  _initializing */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":16596:16616  _initializing = true */\n      dup1\n      sload\n      not(0xff00)\n      and\n      0x0100\n      or\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":16562:16627  if (isTopLevelCall) {... */\n    tag_188:\n        /* \"contracts/tokens/WETH_flattened.sol\":38091:38128  __ERC20_init(\"Wrapped Ether\", \"WETH\") */\n      tag_190\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      shl(0x99, 0x2bb930b83832b21022ba3432b9)\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xe3, 0x0ae8aa89)\n      dup2\n      mstore\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":38091:38103  __ERC20_init */\n      tag_191\n        /* \"contracts/tokens/WETH_flattened.sol\":38091:38128  __ERC20_init(\"Wrapped Ether\", \"WETH\") */\n      jump\t// in\n    tag_190:\n        /* \"contracts/tokens/WETH_flattened.sol\":38138:38154  __Ownable_init() */\n      tag_192\n        /* \"contracts/tokens/WETH_flattened.sol\":38138:38152  __Ownable_init */\n      tag_193\n        /* \"contracts/tokens/WETH_flattened.sol\":38138:38154  __Ownable_init() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/tokens/WETH_flattened.sol\":38165:38231  super._mint(msg.sender, 10000000000 * (10 ** uint256(decimals()))) */\n      tag_194\n        /* \"contracts/tokens/WETH_flattened.sol\":38177:38187  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":38204:38229  10 ** uint256(decimals()) */\n      tag_196\n        /* \"contracts/tokens/WETH_flattened.sol\":24504:24506  18 */\n      0x12\n        /* \"contracts/tokens/WETH_flattened.sol\":38204:38206  10 */\n      0x0a\n        /* \"contracts/tokens/WETH_flattened.sol\":38204:38229  10 ** uint256(decimals()) */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"contracts/tokens/WETH_flattened.sol\":38189:38230  10000000000 * (10 ** uint256(decimals())) */\n      tag_198\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":38189:38200  10000000000 */\n      0x02540be400\n        /* \"contracts/tokens/WETH_flattened.sol\":38189:38230  10000000000 * (10 ** uint256(decimals())) */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/tokens/WETH_flattened.sol\":38165:38176  super._mint */\n      tag_123\n        /* \"contracts/tokens/WETH_flattened.sol\":38165:38231  super._mint(msg.sender, 10000000000 * (10 ** uint256(decimals()))) */\n      jump\t// in\n    tag_194:\n        /* \"contracts/tokens/WETH_flattened.sol\":16651:16665  isTopLevelCall */\n      dup1\n        /* \"contracts/tokens/WETH_flattened.sol\":16647:16746  if (isTopLevelCall) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"contracts/tokens/WETH_flattened.sol\":16697:16702  false */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":16681:16702  _initializing = false */\n      dup1\n      sload\n      not(0xff00)\n      and\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":16721:16735  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":2046:2082   */\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":16721:16735  Initialized(1) */\n      0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498\n      swap1\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":16721:16735  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/tokens/WETH_flattened.sol\":16647:16746  if (isTopLevelCall) {... */\n    tag_200:\n        /* \"contracts/tokens/WETH_flattened.sol\":16269:16752  {... */\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":38040:38238  function initialize() public initializer {... */\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":23687:23789  function symbol() public view virtual override returns (string memory) {... */\n    tag_94:\n        /* \"contracts/tokens/WETH_flattened.sol\":23743:23756  string memory */\n      0x60\n        /* \"contracts/tokens/WETH_flattened.sol\":23775:23782  _symbol */\n      0x37\n        /* \"contracts/tokens/WETH_flattened.sol\":23768:23782  return _symbol */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":38796:38899  function burn(address from, uint256 amount) public onlyOwner {... */\n    tag_99:\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      tag_211\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35761  _checkOwner */\n      tag_161\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      jump\t// in\n    tag_211:\n        /* \"contracts/tokens/WETH_flattened.sol\":38867:38892  super._burn(from, amount) */\n      tag_172\n        /* \"contracts/tokens/WETH_flattened.sol\":38879:38883  from */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":38885:38891  amount */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":38867:38878  super._burn */\n      tag_148\n        /* \"contracts/tokens/WETH_flattened.sol\":38867:38892  super._burn(from, amount) */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":27893:28320  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_103:\n        /* \"contracts/tokens/WETH_flattened.sol\":27986:27990  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":27986:27990  bool */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":28067:28092  allowance(owner, spender) */\n      tag_216\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":28084:28091  spender */\n      dup7\n        /* \"contracts/tokens/WETH_flattened.sol\":28067:28076  allowance */\n      tag_115\n        /* \"contracts/tokens/WETH_flattened.sol\":28067:28092  allowance(owner, spender) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/tokens/WETH_flattened.sol\":28040:28092  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":28130:28145  subtractedValue */\n      dup4\n        /* \"contracts/tokens/WETH_flattened.sol\":28110:28126  currentAllowance */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":28110:28145  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/tokens/WETH_flattened.sol\":28102:28187  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6175:6177   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":28102:28187  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6157:6178   */\n      mstore\n        /* \"#utility.yul\":6214:6216   */\n      0x25\n        /* \"#utility.yul\":6194:6212   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6187:6217   */\n      mstore\n        /* \"#utility.yul\":6253:6287   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":6233:6251   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6226:6288   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":6304:6322   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6297:6332   */\n      mstore\n        /* \"#utility.yul\":6349:6368   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":28102:28187  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_164\n        /* \"#utility.yul\":5973:6374   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":28102:28187  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_217:\n        /* \"contracts/tokens/WETH_flattened.sol\":28221:28281  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_142\n        /* \"contracts/tokens/WETH_flattened.sol\":28230:28235  owner */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":28237:28244  spender */\n      dup7\n        /* \"contracts/tokens/WETH_flattened.sol\":28265:28280  subtractedValue */\n      dup7\n        /* \"contracts/tokens/WETH_flattened.sol\":28246:28262  currentAllowance */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":28246:28280  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/tokens/WETH_flattened.sol\":28221:28229  _approve */\n      tag_136\n        /* \"contracts/tokens/WETH_flattened.sol\":28221:28281  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":25058:25247  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_108:\n        /* \"contracts/tokens/WETH_flattened.sol\":25137:25141  bool */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":25191:25219  _transfer(owner, to, amount) */\n      tag_135\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":25208:25210  to */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":25212:25218  amount */\n      dup6\n        /* \"contracts/tokens/WETH_flattened.sol\":25191:25200  _transfer */\n      tag_143\n        /* \"contracts/tokens/WETH_flattened.sol\":25191:25219  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":25305:25454  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25438  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":25394:25401  uint256 */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25438  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25431  _allowances */\n      0x34\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25438  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":25420:25447  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":25305:25454  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":36730:36928  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_120:\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      tag_226\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35761  _checkOwner */\n      tag_161\n        /* \"contracts/tokens/WETH_flattened.sol\":35750:35763  _checkOwner() */\n      jump\t// in\n    tag_226:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":36818:36840  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":36810:36883  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6581:6583   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":36810:36883  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6563:6584   */\n      mstore\n        /* \"#utility.yul\":6620:6622   */\n      0x26\n        /* \"#utility.yul\":6600:6618   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6593:6623   */\n      mstore\n        /* \"#utility.yul\":6659:6693   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":6639:6657   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6632:6694   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6710:6728   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6703:6739   */\n      mstore\n        /* \"#utility.yul\":6756:6775   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":36810:36883  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_164\n        /* \"#utility.yul\":6379:6781   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":36810:36883  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_228:\n        /* \"contracts/tokens/WETH_flattened.sol\":36893:36921  _transferOwnership(newOwner) */\n      tag_200\n        /* \"contracts/tokens/WETH_flattened.sol\":36912:36920  newOwner */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":36893:36911  _transferOwnership */\n      tag_178\n        /* \"contracts/tokens/WETH_flattened.sol\":36893:36921  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":29838:30373  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":29921:29942  account != address(0) */\n      dup3\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":29913:29978  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6988:6990   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":29913:29978  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6970:6991   */\n      mstore\n        /* \"#utility.yul\":7027:7029   */\n      0x1f\n        /* \"#utility.yul\":7007:7025   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7000:7030   */\n      mstore\n        /* \"#utility.yul\":7066:7099   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7046:7064   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7039:7100   */\n      mstore\n        /* \"#utility.yul\":7117:7135   */\n      0x64\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":29913:29978  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_164\n        /* \"#utility.yul\":6786:7141   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":29913:29978  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_233:\n        /* \"contracts/tokens/WETH_flattened.sol\":30065:30071  amount */\n      dup1\n        /* \"contracts/tokens/WETH_flattened.sol\":30049:30061  _totalSupply */\n      0x35\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":30049:30071  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_238\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_238:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":30217:30235  _balances[account] */\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":30217:30226  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":30217:30235  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":30217:30245  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":30270:30307  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":30270:30307  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":30270:30307  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/WETH_flattened.sol\":38691:38790  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":31775:32115  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":31876:31895  owner != address(0) */\n      dup4\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":31868:31936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7348:7350   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":31868:31936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7330:7351   */\n      mstore\n        /* \"#utility.yul\":7387:7389   */\n      0x24\n        /* \"#utility.yul\":7367:7385   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7360:7390   */\n      mstore\n        /* \"#utility.yul\":7426:7460   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":7406:7424   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7399:7461   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":7477:7495   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7470:7504   */\n      mstore\n        /* \"#utility.yul\":7521:7540   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":31868:31936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_164\n        /* \"#utility.yul\":7146:7546   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":31868:31936  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_244:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":31954:31975  spender != address(0) */\n      dup3\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":31946:32014  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_247\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7753:7755   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":31946:32014  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7735:7756   */\n      mstore\n        /* \"#utility.yul\":7792:7794   */\n      0x22\n        /* \"#utility.yul\":7772:7790   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7765:7795   */\n      mstore\n        /* \"#utility.yul\":7831:7865   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":7811:7829   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7804:7866   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":7882:7900   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7875:7907   */\n      mstore\n        /* \"#utility.yul\":7924:7943   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":31946:32014  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_164\n        /* \"#utility.yul\":7551:7949   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":31946:32014  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_247:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32043  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32036  _allowances */\n      0x34\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32043  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32052  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":32025:32061  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":32076:32108  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":32076:32108  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":32076:32108  Approval(owner, spender, amount) */\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/WETH_flattened.sol\":31775:32115  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":32396:32807  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_141:\n        /* \"contracts/tokens/WETH_flattened.sol\":32496:32520  uint256 currentAllowance */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":32523:32548  allowance(owner, spender) */\n      tag_252\n        /* \"contracts/tokens/WETH_flattened.sol\":32533:32538  owner */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32540:32547  spender */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32523:32532  allowance */\n      tag_115\n        /* \"contracts/tokens/WETH_flattened.sol\":32523:32548  allowance(owner, spender) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/tokens/WETH_flattened.sol\":32496:32548  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"contracts/tokens/WETH_flattened.sol\":32562:32578  currentAllowance */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":32562:32599  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/tokens/WETH_flattened.sol\":32558:32801  if (currentAllowance != type(uint256).max) {... */\n      tag_257\n      jumpi\n        /* \"contracts/tokens/WETH_flattened.sol\":32643:32649  amount */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":32623:32639  currentAllowance */\n      dup2\n        /* \"contracts/tokens/WETH_flattened.sol\":32623:32649  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/tokens/WETH_flattened.sol\":32615:32683  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8156:8158   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":32615:32683  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8138:8159   */\n      mstore\n        /* \"#utility.yul\":8195:8197   */\n      0x1d\n        /* \"#utility.yul\":8175:8193   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8168:8198   */\n      mstore\n        /* \"#utility.yul\":8234:8265   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":8214:8232   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8207:8266   */\n      mstore\n        /* \"#utility.yul\":8283:8301   */\n      0x64\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":32615:32683  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_164\n        /* \"#utility.yul\":7954:8307   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":32615:32683  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_254:\n        /* \"contracts/tokens/WETH_flattened.sol\":32725:32776  _approve(owner, spender, currentAllowance - amount) */\n      tag_257\n        /* \"contracts/tokens/WETH_flattened.sol\":32734:32739  owner */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32741:32748  spender */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32769:32775  amount */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32750:32766  currentAllowance */\n      dup5\n        /* \"contracts/tokens/WETH_flattened.sol\":32750:32775  currentAllowance - amount */\n      sub\n        /* \"contracts/tokens/WETH_flattened.sol\":32725:32733  _approve */\n      tag_136\n        /* \"contracts/tokens/WETH_flattened.sol\":32725:32776  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/tokens/WETH_flattened.sol\":32486:32807  {... */\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":32396:32807  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":28774:29562  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_143:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":28870:28888  from != address(0) */\n      dup4\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":28862:28930  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8514:8516   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":28862:28930  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8496:8517   */\n      mstore\n        /* \"#utility.yul\":8553:8555   */\n      0x25\n        /* \"#utility.yul\":8533:8551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8526:8556   */\n      mstore\n        /* \"#utility.yul\":8592:8626   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":8572:8590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8565:8627   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":8643:8661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8636:8671   */\n      mstore\n        /* \"#utility.yul\":8688:8707   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":28862:28930  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_164\n        /* \"#utility.yul\":8312:8713   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":28862:28930  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":28948:28964  to != address(0) */\n      dup3\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":28940:29004  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8920:8922   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":28940:29004  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8902:8923   */\n      mstore\n        /* \"#utility.yul\":8959:8961   */\n      0x23\n        /* \"#utility.yul\":8939:8957   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8932:8962   */\n      mstore\n        /* \"#utility.yul\":8998:9032   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":8978:8996   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8971:9033   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":9049:9067   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9042:9075   */\n      mstore\n        /* \"#utility.yul\":9092:9111   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":28940:29004  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_164\n        /* \"#utility.yul\":8718:9117   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":28940:29004  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_262:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":29086:29101  _balances[from] */\n      dup4\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":29064:29083  uint256 fromBalance */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":29086:29101  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":29086:29095  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":29086:29101  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/WETH_flattened.sol\":29119:29140  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/tokens/WETH_flattened.sol\":29111:29183  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9324:9326   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":29111:29183  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9306:9327   */\n      mstore\n        /* \"#utility.yul\":9363:9365   */\n      0x26\n        /* \"#utility.yul\":9343:9361   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9336:9366   */\n      mstore\n        /* \"#utility.yul\":9402:9436   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":9382:9400   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9375:9437   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":9453:9471   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9446:9482   */\n      mstore\n        /* \"#utility.yul\":9499:9518   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":29111:29183  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_164\n        /* \"#utility.yul\":9122:9524   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":29111:29183  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_266:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":29217:29232  _balances[from] */\n      dup1\n      dup6\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":29217:29226  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":29217:29232  _balances[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":29235:29255  fromBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"contracts/tokens/WETH_flattened.sol\":29217:29255  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":29432:29445  _balances[to] */\n      swap3\n      dup7\n      and\n      dup1\n      dup3\n      mstore\n      swap1\n      dup4\n      swap1\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":29432:29455  _balances[to] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":29481:29507  Transfer(from, to, amount) */\n      swap2\n      mload\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap1\n      tag_269\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":29249:29255  amount */\n      dup7\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":29481:29507  Transfer(from, to, amount) */\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/tokens/WETH_flattened.sol\":29518:29555  _afterTokenTransfer(from, to, amount) */\n      tag_257\n        /* \"contracts/tokens/WETH_flattened.sol\":30693:31352  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":30776:30797  account != address(0) */\n      dup3\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":30768:30835  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9731:9733   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":30768:30835  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9713:9734   */\n      mstore\n        /* \"#utility.yul\":9770:9772   */\n      0x21\n        /* \"#utility.yul\":9750:9768   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9743:9773   */\n      mstore\n        /* \"#utility.yul\":9809:9843   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":9789:9807   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9782:9844   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":9860:9878   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9853:9884   */\n      mstore\n        /* \"#utility.yul\":9901:9920   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":30768:30835  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_164\n        /* \"#utility.yul\":9529:9926   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":30768:30835  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_272:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":30931:30949  _balances[account] */\n      dup3\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":30906:30928  uint256 accountBalance */\n      0x00\n        /* \"contracts/tokens/WETH_flattened.sol\":30931:30949  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":30931:30940  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":30931:30949  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/tokens/WETH_flattened.sol\":30967:30991  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/tokens/WETH_flattened.sol\":30959:31030  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_276\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10133:10135   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":30959:31030  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10115:10136   */\n      mstore\n        /* \"#utility.yul\":10172:10174   */\n      0x22\n        /* \"#utility.yul\":10152:10170   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10145:10175   */\n      mstore\n        /* \"#utility.yul\":10211:10245   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":10191:10209   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10184:10246   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":10262:10280   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10255:10287   */\n      mstore\n        /* \"#utility.yul\":10304:10323   */\n      0x84\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":30959:31030  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_164\n        /* \"#utility.yul\":9931:10329   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":30959:31030  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_276:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":31064:31082  _balances[account] */\n      dup4\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":31064:31073  _balances */\n      0x33\n        /* \"contracts/tokens/WETH_flattened.sol\":31064:31082  _balances[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/tokens/WETH_flattened.sol\":31085:31108  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"contracts/tokens/WETH_flattened.sol\":31064:31108  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":31201:31213  _totalSupply */\n      0x35\n        /* \"contracts/tokens/WETH_flattened.sol\":31201:31223  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":31249:31286  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup6\n      dup2\n      mstore\n        /* \"contracts/tokens/WETH_flattened.sol\":31064:31082  _balances[account] */\n      swap2\n      swap3\n      swap2\n        /* \"contracts/tokens/WETH_flattened.sol\":31249:31286  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":31249:31286  Transfer(account, address(0), amount) */\n      tag_250\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":31297:31345  _afterTokenTransfer(account, address(0), amount) */\n    tag_280:\n        /* \"contracts/tokens/WETH_flattened.sol\":30758:31352  {... */\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":30693:31352  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":36015:36145  function _checkOwner() internal view virtual {... */\n    tag_161:\n        /* \"contracts/tokens/WETH_flattened.sol\":35929:35935  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x65))\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":36078:36101  owner() == _msgSender() */\n      eq\n        /* \"contracts/tokens/WETH_flattened.sol\":36070:36138  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10536:10538   */\n      0x20\n        /* \"contracts/tokens/WETH_flattened.sol\":36070:36138  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10518:10539   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10555:10573   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10548:10578   */\n      mstore\n        /* \"#utility.yul\":10614:10648   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10594:10612   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10587:10649   */\n      mstore\n        /* \"#utility.yul\":10666:10684   */\n      0x64\n      add\n        /* \"contracts/tokens/WETH_flattened.sol\":36070:36138  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_164\n        /* \"#utility.yul\":10334:10690   */\n      jump\n        /* \"contracts/tokens/WETH_flattened.sol\":37082:37269  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_178:\n        /* \"contracts/tokens/WETH_flattened.sol\":37174:37180  _owner */\n      0x65\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/tokens/WETH_flattened.sol\":37190:37207  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/tokens/WETH_flattened.sol\":37222:37262  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/tokens/WETH_flattened.sol\":37174:37180  _owner */\n      swap2\n      and\n      swap2\n        /* \"contracts/tokens/WETH_flattened.sol\":37190:37207  _owner = newOwner */\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":37174:37180  _owner */\n      dup3\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":37222:37262  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":37155:37171  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/tokens/WETH_flattened.sol\":37222:37262  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/tokens/WETH_flattened.sol\":37145:37269  {... */\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":37082:37269  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/tokens/WETH_flattened.sol\":23099:23246  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_191:\n        /* \"contracts/tokens/WETH_flattened.sol\":18374:18387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":18366:18435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_292\n      jump\t// in\n    tag_290:\n        /* \"contracts/tokens/WETH_flattened.sol\":23201:23239  __ERC20_init_unchained(name_, symbol_) */\n      tag_172\n        /* \"contracts/tokens/WETH_flattened.sol\":23224:23229  name_ */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":23231:23238  symbol_ */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":23201:23223  __ERC20_init_unchained */\n      tag_295\n        /* \"contracts/tokens/WETH_flattened.sol\":23201:23239  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":35419:35514  function __Ownable_init() internal onlyInitializing {... */\n    tag_193:\n        /* \"contracts/tokens/WETH_flattened.sol\":18374:18387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":18366:18435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_292\n      jump\t// in\n    tag_297:\n        /* \"contracts/tokens/WETH_flattened.sol\":35481:35507  __Ownable_init_unchained() */\n      tag_177\n        /* \"contracts/tokens/WETH_flattened.sol\":35481:35505  __Ownable_init_unchained */\n      tag_301\n        /* \"contracts/tokens/WETH_flattened.sol\":35481:35507  __Ownable_init_unchained() */\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":23252:23411  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_295:\n        /* \"contracts/tokens/WETH_flattened.sol\":18374:18387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":18366:18435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_292\n      jump\t// in\n    tag_305:\n        /* \"contracts/tokens/WETH_flattened.sol\":23364:23369  _name */\n      0x36\n        /* \"contracts/tokens/WETH_flattened.sol\":23364:23377  _name = name_ */\n      tag_308\n        /* \"contracts/tokens/WETH_flattened.sol\":23372:23377  name_ */\n      dup4\n        /* \"contracts/tokens/WETH_flattened.sol\":23364:23369  _name */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":23364:23377  _name = name_ */\n      tag_309\n      jump\t// in\n    tag_308:\n      pop\n        /* \"contracts/tokens/WETH_flattened.sol\":23387:23394  _symbol */\n      0x37\n        /* \"contracts/tokens/WETH_flattened.sol\":23387:23404  _symbol = symbol_ */\n      tag_280\n        /* \"contracts/tokens/WETH_flattened.sol\":23397:23404  symbol_ */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":23387:23394  _symbol */\n      dup3\n        /* \"contracts/tokens/WETH_flattened.sol\":23387:23404  _symbol = symbol_ */\n      tag_309\n      jump\t// in\n        /* \"contracts/tokens/WETH_flattened.sol\":35520:35631  function __Ownable_init_unchained() internal onlyInitializing {... */\n    tag_301:\n        /* \"contracts/tokens/WETH_flattened.sol\":18374:18387  _initializing */\n      sload(0x00)\n      0x0100\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/tokens/WETH_flattened.sol\":18366:18435  require(_initializing, \"Initializable: contract is not initializing\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap1\n      tag_292\n      jump\t// in\n    tag_312:\n        /* \"contracts/tokens/WETH_flattened.sol\":35592:35624  _transferOwnership(_msgSender()) */\n      tag_177\n        /* \"contracts/tokens/WETH_flattened.sol\":20588:20598  msg.sender */\n      caller\n        /* \"contracts/tokens/WETH_flattened.sol\":35592:35610  _transferOwnership */\n      tag_178\n        /* \"contracts/tokens/WETH_flattened.sol\":35592:35624  _transferOwnership(_msgSender()) */\n      jump\t// in\n        /* \"#utility.yul\":14:432   */\n    tag_34:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_317:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_328\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_328:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_38:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_330:\n        /* \"#utility.yul\":783:812   */\n      tag_331\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_317\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_50:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_335:\n        /* \"#utility.yul\":1479:1508   */\n      tag_336\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_317\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_337\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_317\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1673:1899   */\n    tag_56:\n        /* \"#utility.yul\":1732:1738   */\n      0x00\n        /* \"#utility.yul\":1785:1787   */\n      0x20\n        /* \"#utility.yul\":1773:1782   */\n      dup3\n        /* \"#utility.yul\":1764:1771   */\n      dup5\n        /* \"#utility.yul\":1760:1783   */\n      sub\n        /* \"#utility.yul\":1756:1788   */\n      slt\n        /* \"#utility.yul\":1753:1805   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1801:1802   */\n      0x00\n        /* \"#utility.yul\":1798:1799   */\n      0x00\n        /* \"#utility.yul\":1791:1803   */\n      revert\n        /* \"#utility.yul\":1753:1805   */\n    tag_339:\n      pop\n        /* \"#utility.yul\":1846:1869   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1673:1899   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2093:2279   */\n    tag_78:\n        /* \"#utility.yul\":2152:2158   */\n      0x00\n        /* \"#utility.yul\":2205:2207   */\n      0x20\n        /* \"#utility.yul\":2193:2202   */\n      dup3\n        /* \"#utility.yul\":2184:2191   */\n      dup5\n        /* \"#utility.yul\":2180:2203   */\n      sub\n        /* \"#utility.yul\":2176:2208   */\n      slt\n        /* \"#utility.yul\":2173:2225   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":2221:2222   */\n      0x00\n        /* \"#utility.yul\":2218:2219   */\n      0x00\n        /* \"#utility.yul\":2211:2223   */\n      revert\n        /* \"#utility.yul\":2173:2225   */\n    tag_342:\n        /* \"#utility.yul\":2244:2273   */\n      tag_343\n        /* \"#utility.yul\":2263:2272   */\n      dup3\n        /* \"#utility.yul\":2244:2273   */\n      tag_317\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2234:2273   */\n      swap4\n        /* \"#utility.yul\":2093:2279   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2492:2752   */\n    tag_114:\n        /* \"#utility.yul\":2560:2566   */\n      0x00\n        /* \"#utility.yul\":2568:2574   */\n      0x00\n        /* \"#utility.yul\":2621:2623   */\n      0x40\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2600:2607   */\n      dup6\n        /* \"#utility.yul\":2596:2619   */\n      sub\n        /* \"#utility.yul\":2592:2624   */\n      slt\n        /* \"#utility.yul\":2589:2641   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2637:2638   */\n      0x00\n        /* \"#utility.yul\":2634:2635   */\n      0x00\n        /* \"#utility.yul\":2627:2639   */\n      revert\n        /* \"#utility.yul\":2589:2641   */\n    tag_346:\n        /* \"#utility.yul\":2660:2689   */\n      tag_347\n        /* \"#utility.yul\":2679:2688   */\n      dup4\n        /* \"#utility.yul\":2660:2689   */\n      tag_317\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2650:2689   */\n      swap2\n      pop\n        /* \"#utility.yul\":2708:2746   */\n      tag_348\n        /* \"#utility.yul\":2742:2744   */\n      0x20\n        /* \"#utility.yul\":2731:2740   */\n      dup5\n        /* \"#utility.yul\":2727:2745   */\n      add\n        /* \"#utility.yul\":2708:2746   */\n      tag_317\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2698:2746   */\n      swap1\n      pop\n        /* \"#utility.yul\":2492:2752   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2757:3137   */\n    tag_127:\n        /* \"#utility.yul\":2836:2837   */\n      0x01\n        /* \"#utility.yul\":2832:2844   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2879:2891   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2900:2961   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2954:2958   */\n      0x7f\n        /* \"#utility.yul\":2946:2952   */\n      dup3\n        /* \"#utility.yul\":2942:2959   */\n      and\n        /* \"#utility.yul\":2932:2959   */\n      swap2\n      pop\n        /* \"#utility.yul\":2900:2961   */\n    tag_350:\n        /* \"#utility.yul\":3007:3009   */\n      0x20\n        /* \"#utility.yul\":2999:3005   */\n      dup3\n        /* \"#utility.yul\":2996:3010   */\n      lt\n        /* \"#utility.yul\":2976:2994   */\n      dup2\n        /* \"#utility.yul\":2973:3011   */\n      sub\n        /* \"#utility.yul\":2970:3131   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":3053:3063   */\n      0x4e487b71\n        /* \"#utility.yul\":3048:3051   */\n      0xe0\n        /* \"#utility.yul\":3044:3064   */\n      shl\n        /* \"#utility.yul\":3041:3042   */\n      0x00\n        /* \"#utility.yul\":3034:3065   */\n      mstore\n        /* \"#utility.yul\":3088:3092   */\n      0x22\n        /* \"#utility.yul\":3085:3086   */\n      0x04\n        /* \"#utility.yul\":3078:3093   */\n      mstore\n        /* \"#utility.yul\":3116:3120   */\n      0x24\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3106:3121   */\n      revert\n        /* \"#utility.yul\":2970:3131   */\n    tag_351:\n      pop\n        /* \"#utility.yul\":2757:3137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3142:3269   */\n    tag_318:\n        /* \"#utility.yul\":3203:3213   */\n      0x4e487b71\n        /* \"#utility.yul\":3198:3201   */\n      0xe0\n        /* \"#utility.yul\":3194:3214   */\n      shl\n        /* \"#utility.yul\":3191:3192   */\n      0x00\n        /* \"#utility.yul\":3184:3215   */\n      mstore\n        /* \"#utility.yul\":3234:3238   */\n      0x11\n        /* \"#utility.yul\":3231:3232   */\n      0x04\n        /* \"#utility.yul\":3224:3239   */\n      mstore\n        /* \"#utility.yul\":3258:3262   */\n      0x24\n        /* \"#utility.yul\":3255:3256   */\n      0x00\n        /* \"#utility.yul\":3248:3263   */\n      revert\n        /* \"#utility.yul\":3274:3399   */\n    tag_158:\n        /* \"#utility.yul\":3339:3348   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3360:3370   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3357:3393   */\n      iszero\n      tag_132\n      jumpi\n        /* \"#utility.yul\":3373:3391   */\n      tag_132\n      tag_318\n      jump\t// in\n        /* \"#utility.yul\":4178:4553   */\n    tag_319:\n        /* \"#utility.yul\":4266:4267   */\n      0x01\n        /* \"#utility.yul\":4284:4289   */\n      dup2\n        /* \"#utility.yul\":4298:4547   */\n    tag_359:\n        /* \"#utility.yul\":4319:4320   */\n      0x01\n        /* \"#utility.yul\":4309:4317   */\n      dup5\n        /* \"#utility.yul\":4306:4321   */\n      gt\n        /* \"#utility.yul\":4298:4547   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":4369:4373   */\n      dup1\n        /* \"#utility.yul\":4364:4367   */\n      dup6\n        /* \"#utility.yul\":4360:4374   */\n      div\n        /* \"#utility.yul\":4354:4358   */\n      dup2\n        /* \"#utility.yul\":4351:4375   */\n      gt\n        /* \"#utility.yul\":4348:4398   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":4378:4396   */\n      tag_363\n      tag_318\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4428:4429   */\n      0x01\n        /* \"#utility.yul\":4418:4426   */\n      dup5\n        /* \"#utility.yul\":4414:4430   */\n      and\n        /* \"#utility.yul\":4411:4460   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":4442:4458   */\n      swap1\n      dup2\n      mul\n      swap1\n        /* \"#utility.yul\":4411:4460   */\n    tag_364:\n        /* \"#utility.yul\":4525:4526   */\n      0x01\n        /* \"#utility.yul\":4521:4537   */\n      swap4\n      swap1\n      swap4\n      shr\n      swap3\n        /* \"#utility.yul\":4481:4496   */\n      dup1\n      mul\n        /* \"#utility.yul\":4298:4547   */\n      jump(tag_359)\n    tag_361:\n        /* \"#utility.yul\":4178:4553   */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4558:5460   */\n    tag_320:\n        /* \"#utility.yul\":4607:4612   */\n      0x00\n        /* \"#utility.yul\":4637:4645   */\n      dup3\n        /* \"#utility.yul\":4627:4707   */\n      tag_366\n      jumpi\n      pop\n        /* \"#utility.yul\":4678:4679   */\n      0x01\n        /* \"#utility.yul\":4692:4697   */\n      jump(tag_132)\n        /* \"#utility.yul\":4627:4707   */\n    tag_366:\n        /* \"#utility.yul\":4726:4730   */\n      dup2\n        /* \"#utility.yul\":4716:4792   */\n      tag_367\n      jumpi\n      pop\n        /* \"#utility.yul\":4763:4764   */\n      0x00\n        /* \"#utility.yul\":4777:4782   */\n      jump(tag_132)\n        /* \"#utility.yul\":4716:4792   */\n    tag_367:\n        /* \"#utility.yul\":4808:4812   */\n      dup2\n        /* \"#utility.yul\":4826:4827   */\n      0x01\n        /* \"#utility.yul\":4821:4880   */\n      dup2\n      eq\n      tag_369\n      jumpi\n        /* \"#utility.yul\":4894:4895   */\n      0x02\n        /* \"#utility.yul\":4889:5063   */\n      dup2\n      eq\n      tag_370\n      jumpi\n        /* \"#utility.yul\":4801:5063   */\n      jump(tag_368)\n        /* \"#utility.yul\":4821:4880   */\n    tag_369:\n        /* \"#utility.yul\":4851:4852   */\n      0x01\n        /* \"#utility.yul\":4842:4852   */\n      swap2\n      pop\n        /* \"#utility.yul\":4865:4870   */\n      pop\n      jump(tag_132)\n        /* \"#utility.yul\":4889:5063   */\n    tag_370:\n        /* \"#utility.yul\":4926:4929   */\n      0xff\n        /* \"#utility.yul\":4916:4924   */\n      dup5\n        /* \"#utility.yul\":4913:4930   */\n      gt\n        /* \"#utility.yul\":4910:4953   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":4933:4951   */\n      tag_372\n      tag_318\n      jump\t// in\n    tag_372:\n      pop\n      pop\n        /* \"#utility.yul\":4989:4990   */\n      0x01\n        /* \"#utility.yul\":4975:4991   */\n      dup3\n      shl\n        /* \"#utility.yul\":5048:5053   */\n      jump(tag_132)\n        /* \"#utility.yul\":4801:5063   */\n    tag_368:\n      pop\n        /* \"#utility.yul\":5147:5149   */\n      0x20\n        /* \"#utility.yul\":5137:5145   */\n      dup4\n        /* \"#utility.yul\":5134:5150   */\n      lt\n        /* \"#utility.yul\":5128:5131   */\n      0x0133\n        /* \"#utility.yul\":5122:5126   */\n      dup4\n        /* \"#utility.yul\":5119:5132   */\n      lt\n        /* \"#utility.yul\":5115:5151   */\n      and\n        /* \"#utility.yul\":5109:5111   */\n      0x4e\n        /* \"#utility.yul\":5099:5107   */\n      dup5\n        /* \"#utility.yul\":5096:5112   */\n      lt\n        /* \"#utility.yul\":5091:5093   */\n      0x0b\n        /* \"#utility.yul\":5085:5089   */\n      dup5\n        /* \"#utility.yul\":5082:5094   */\n      lt\n        /* \"#utility.yul\":5078:5113   */\n      and\n        /* \"#utility.yul\":5075:5152   */\n      or\n        /* \"#utility.yul\":5072:5275   */\n      iszero\n      tag_373\n      jumpi\n      pop\n        /* \"#utility.yul\":5184:5203   */\n      dup2\n      dup2\n      exp\n        /* \"#utility.yul\":5260:5265   */\n      jump(tag_132)\n        /* \"#utility.yul\":5072:5275   */\n    tag_373:\n        /* \"#utility.yul\":5307:5349   */\n      tag_374\n      not(0x00)\n        /* \"#utility.yul\":5332:5340   */\n      dup5\n        /* \"#utility.yul\":5326:5330   */\n      dup5\n        /* \"#utility.yul\":5307:5349   */\n      tag_319\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5385:5391   */\n      dup1\n        /* \"#utility.yul\":5381:5382   */\n      0x00\n        /* \"#utility.yul\":5377:5383   */\n      not\n        /* \"#utility.yul\":5373:5392   */\n      div\n        /* \"#utility.yul\":5364:5371   */\n      dup3\n        /* \"#utility.yul\":5361:5393   */\n      gt\n        /* \"#utility.yul\":5358:5416   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":5396:5414   */\n      tag_376\n      tag_318\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5434:5454   */\n      mul\n      swap4\n        /* \"#utility.yul\":4558:5460   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5465:5596   */\n    tag_197:\n        /* \"#utility.yul\":5525:5530   */\n      0x00\n        /* \"#utility.yul\":5554:5590   */\n      tag_343\n        /* \"#utility.yul\":5581:5589   */\n      dup4\n        /* \"#utility.yul\":5575:5579   */\n      dup4\n        /* \"#utility.yul\":5554:5590   */\n      tag_320\n      jump\t// in\n        /* \"#utility.yul\":5601:5769   */\n    tag_199:\n        /* \"#utility.yul\":5674:5683   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5705:5714   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5722:5737   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5716:5738   */\n      dup5\n      eq\n        /* \"#utility.yul\":5702:5739   */\n      or\n        /* \"#utility.yul\":5692:5763   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":5743:5761   */\n      tag_132\n      tag_318\n      jump\t// in\n        /* \"#utility.yul\":10695:11102   */\n    tag_292:\n        /* \"#utility.yul\":10897:10899   */\n      0x20\n        /* \"#utility.yul\":10879:10900   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10936:10938   */\n      0x2b\n        /* \"#utility.yul\":10916:10934   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10909:10939   */\n      mstore\n        /* \"#utility.yul\":10975:11009   */\n      0x496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069\n        /* \"#utility.yul\":10970:10972   */\n      0x40\n        /* \"#utility.yul\":10955:10973   */\n      dup3\n      add\n        /* \"#utility.yul\":10948:11010   */\n      mstore\n      shl(0xa8, 0x6e697469616c697a696e67)\n        /* \"#utility.yul\":11041:11043   */\n      0x60\n        /* \"#utility.yul\":11026:11044   */\n      dup3\n      add\n        /* \"#utility.yul\":11019:11060   */\n      mstore\n        /* \"#utility.yul\":11092:11095   */\n      0x80\n        /* \"#utility.yul\":11077:11096   */\n      add\n      swap1\n        /* \"#utility.yul\":10695:11102   */\n      jump\t// out\n        /* \"#utility.yul\":11107:11234   */\n    tag_321:\n        /* \"#utility.yul\":11168:11178   */\n      0x4e487b71\n        /* \"#utility.yul\":11163:11166   */\n      0xe0\n        /* \"#utility.yul\":11159:11179   */\n      shl\n        /* \"#utility.yul\":11156:11157   */\n      0x00\n        /* \"#utility.yul\":11149:11180   */\n      mstore\n        /* \"#utility.yul\":11199:11203   */\n      0x41\n        /* \"#utility.yul\":11196:11197   */\n      0x04\n        /* \"#utility.yul\":11189:11204   */\n      mstore\n        /* \"#utility.yul\":11223:11227   */\n      0x24\n        /* \"#utility.yul\":11220:11221   */\n      0x00\n        /* \"#utility.yul\":11213:11228   */\n      revert\n        /* \"#utility.yul\":11365:11883   */\n    tag_323:\n        /* \"#utility.yul\":11467:11469   */\n      0x1f\n        /* \"#utility.yul\":11462:11465   */\n      dup3\n        /* \"#utility.yul\":11459:11470   */\n      gt\n        /* \"#utility.yul\":11456:11877   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":11503:11508   */\n      dup1\n        /* \"#utility.yul\":11500:11501   */\n      0x00\n        /* \"#utility.yul\":11493:11509   */\n      mstore\n        /* \"#utility.yul\":11547:11551   */\n      0x20\n        /* \"#utility.yul\":11544:11545   */\n      0x00\n        /* \"#utility.yul\":11534:11552   */\n      keccak256\n        /* \"#utility.yul\":11617:11619   */\n      0x1f\n        /* \"#utility.yul\":11605:11615   */\n      dup5\n        /* \"#utility.yul\":11601:11620   */\n      add\n        /* \"#utility.yul\":11598:11599   */\n      0x05\n        /* \"#utility.yul\":11594:11621   */\n      shr\n        /* \"#utility.yul\":11588:11592   */\n      dup2\n        /* \"#utility.yul\":11584:11622   */\n      add\n        /* \"#utility.yul\":11653:11657   */\n      0x20\n        /* \"#utility.yul\":11641:11651   */\n      dup6\n        /* \"#utility.yul\":11638:11658   */\n      lt\n        /* \"#utility.yul\":11635:11682   */\n      iszero\n      tag_400\n      jumpi\n      pop\n        /* \"#utility.yul\":11676:11680   */\n      dup1\n        /* \"#utility.yul\":11635:11682   */\n    tag_400:\n        /* \"#utility.yul\":11731:11733   */\n      0x1f\n        /* \"#utility.yul\":11726:11729   */\n      dup5\n        /* \"#utility.yul\":11722:11734   */\n      add\n        /* \"#utility.yul\":11719:11720   */\n      0x05\n        /* \"#utility.yul\":11715:11735   */\n      shr\n        /* \"#utility.yul\":11709:11713   */\n      dup3\n        /* \"#utility.yul\":11705:11736   */\n      add\n        /* \"#utility.yul\":11695:11736   */\n      swap2\n      pop\n        /* \"#utility.yul\":11786:11867   */\n    tag_401:\n        /* \"#utility.yul\":11804:11806   */\n      dup2\n        /* \"#utility.yul\":11797:11802   */\n      dup2\n        /* \"#utility.yul\":11794:11807   */\n      lt\n        /* \"#utility.yul\":11786:11867   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":11863:11864   */\n      0x00\n        /* \"#utility.yul\":11849:11865   */\n      dup2\n      sstore\n        /* \"#utility.yul\":11830:11831   */\n      0x01\n        /* \"#utility.yul\":11819:11832   */\n      add\n        /* \"#utility.yul\":11786:11867   */\n      jump(tag_401)\n    tag_403:\n        /* \"#utility.yul\":11790:11793   */\n      pop\n      pop\n        /* \"#utility.yul\":11365:11883   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12059:13358   */\n    tag_309:\n        /* \"#utility.yul\":12185:12188   */\n      dup2\n        /* \"#utility.yul\":12179:12189   */\n      mload\n        /* \"#utility.yul\":12212:12230   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12204:12210   */\n      dup2\n        /* \"#utility.yul\":12201:12231   */\n      gt\n        /* \"#utility.yul\":12198:12254   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":12234:12252   */\n      tag_407\n      tag_321\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":12263:12360   */\n      tag_408\n        /* \"#utility.yul\":12353:12359   */\n      dup2\n        /* \"#utility.yul\":12313:12351   */\n      tag_409\n        /* \"#utility.yul\":12345:12349   */\n      dup5\n        /* \"#utility.yul\":12339:12350   */\n      sload\n        /* \"#utility.yul\":12313:12351   */\n      tag_127\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":12307:12311   */\n      dup5\n        /* \"#utility.yul\":12263:12360   */\n      tag_323\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":12409:12413   */\n      0x20\n        /* \"#utility.yul\":12440:12442   */\n      0x1f\n        /* \"#utility.yul\":12429:12443   */\n      dup3\n      gt\n        /* \"#utility.yul\":12457:12458   */\n      0x01\n        /* \"#utility.yul\":12452:13101   */\n      dup2\n      eq\n      tag_411\n      jumpi\n        /* \"#utility.yul\":13145:13146   */\n      0x00\n        /* \"#utility.yul\":13162:13168   */\n      dup4\n        /* \"#utility.yul\":13159:13248   */\n      iszero\n      tag_412\n      jumpi\n      pop\n        /* \"#utility.yul\":13214:13233   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":13208:13234   */\n      mload\n        /* \"#utility.yul\":13159:13248   */\n    tag_412:\n      not(0x00)\n        /* \"#utility.yul\":12016:12017   */\n      0x03\n        /* \"#utility.yul\":12012:12023   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":12008:12032   */\n      shr\n        /* \"#utility.yul\":12004:12033   */\n      not\n        /* \"#utility.yul\":11994:12034   */\n      and\n        /* \"#utility.yul\":12040:12041   */\n      0x01\n        /* \"#utility.yul\":12036:12047   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":11991:12048   */\n      or\n        /* \"#utility.yul\":13261:13342   */\n      dup5\n      sstore\n        /* \"#utility.yul\":12422:13352   */\n      jump(tag_403)\n        /* \"#utility.yul\":12452:13101   */\n    tag_411:\n        /* \"#utility.yul\":11312:11313   */\n      0x00\n        /* \"#utility.yul\":11305:11319   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":11349:11353   */\n      0x20\n        /* \"#utility.yul\":11336:11354   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":12488:12508   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":12606:12828   */\n    tag_415:\n        /* \"#utility.yul\":12620:12627   */\n      dup3\n        /* \"#utility.yul\":12617:12618   */\n      dup2\n        /* \"#utility.yul\":12614:12628   */\n      lt\n        /* \"#utility.yul\":12606:12828   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":12702:12721   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":12696:12722   */\n      mload\n        /* \"#utility.yul\":12681:12723   */\n      dup3\n      sstore\n        /* \"#utility.yul\":12809:12813   */\n      0x20\n        /* \"#utility.yul\":12794:12814   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":12762:12763   */\n      0x01\n        /* \"#utility.yul\":12750:12764   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":12636:12648   */\n      add\n        /* \"#utility.yul\":12606:12828   */\n      jump(tag_415)\n    tag_417:\n        /* \"#utility.yul\":12610:12613   */\n      pop\n        /* \"#utility.yul\":12856:12862   */\n      dup5\n        /* \"#utility.yul\":12847:12854   */\n      dup3\n        /* \"#utility.yul\":12844:12863   */\n      lt\n        /* \"#utility.yul\":12841:13042   */\n      iszero\n      tag_418\n      jumpi\n        /* \"#utility.yul\":12917:12936   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":12911:12937   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":13000:13001   */\n      0x03\n        /* \"#utility.yul\":12996:13010   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":13012:13015   */\n      0xf8\n        /* \"#utility.yul\":12992:13016   */\n      and\n        /* \"#utility.yul\":12988:13025   */\n      shr\n        /* \"#utility.yul\":12984:13026   */\n      not\n        /* \"#utility.yul\":12969:13027   */\n      and\n        /* \"#utility.yul\":12954:13028   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12841:13042   */\n    tag_418:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13088:13089   */\n      0x01\n        /* \"#utility.yul\":13072:13086   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":13068:13090   */\n      add\n        /* \"#utility.yul\":13055:13091   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":12059:13358   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122039c56c34be32f388f1d31d5bce4f2140d0488fdcceb265d21f9089259cae105464736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x134B DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x36E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x253 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x12D JUMPI PUSH2 0x12B PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x542 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x5B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x5C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x740 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x12B PUSH2 0x38D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0xFFB JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH2 0x397 CALLER CALLVALUE PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x3DD SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x409 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x454 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x454 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x437 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x46B DUP2 DUP6 DUP6 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x484 DUP6 DUP3 DUP6 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x48F DUP6 DUP6 DUP6 PUSH2 0xAE3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x4B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4BE CALLER DUP3 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4E8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x46B DUP2 DUP6 DUP6 PUSH2 0x533 DUP4 DUP4 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH2 0x54A PUSH2 0xDBB JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A5 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x5AF DUP3 DUP3 PUSH2 0x888 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5BB PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x5C4 PUSH0 PUSH2 0xE15 JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x5E4 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x5FD JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FD JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x681 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x6CC PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x2BB930B83832B21022BA3432B9 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xAE8AA89 PUSH1 0xE3 SHL DUP2 MSTORE POP PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x6F8 CALLER PUSH2 0x6E4 PUSH1 0x12 PUSH1 0xA PUSH2 0x118E JUMP JUMPDEST PUSH2 0x6F3 SWAP1 PUSH5 0x2540BE400 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73D JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3DD SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH2 0x757 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x5AF DUP3 DUP3 PUSH2 0xC8C JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x76E DUP3 DUP7 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH2 0x48F DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x947 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x46B DUP2 DUP6 DUP6 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x81A PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA76 DUP5 DUP5 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xADD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH2 0xADD DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x947 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xC7F SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xA5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x5AF DUP3 DUP3 PUSH2 0xEC4 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0xF03 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x36 PUSH2 0xEF6 DUP4 DUP3 PUSH2 0x125A JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0xDB6 DUP3 DUP3 PUSH2 0x125A JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x5C4 CALLER PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF93 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF9C DUP4 PUSH2 0xF67 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFC5 DUP5 PUSH2 0xF67 JUMP JUMPDEST SWAP3 POP PUSH2 0xFD3 PUSH1 0x20 DUP6 ADD PUSH2 0xF67 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1014 DUP3 PUSH2 0xF67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x102C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1035 DUP4 PUSH2 0xF67 JUMP JUMPDEST SWAP2 POP PUSH2 0x1043 PUSH1 0x20 DUP5 ADD PUSH2 0xF67 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1060 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x107E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x10E6 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x10CA JUMPI PUSH2 0x10CA PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x10D8 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x10AF JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10FC JUMPI POP PUSH1 0x1 PUSH2 0x471 JUMP JUMPDEST DUP2 PUSH2 0x1108 JUMPI POP PUSH0 PUSH2 0x471 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x111E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1128 JUMPI PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x471 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1139 PUSH2 0x1084 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x471 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1167 JUMPI POP DUP2 DUP2 EXP PUSH2 0x471 JUMP JUMPDEST PUSH2 0x1173 PUSH0 NOT DUP5 DUP5 PUSH2 0x10AB JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1186 JUMPI PUSH2 0x1186 PUSH2 0x1084 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1014 DUP4 DUP4 PUSH2 0x10EE JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDB6 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1234 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1253 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1240 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1274 JUMPI PUSH2 0x1274 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x1288 DUP2 PUSH2 0x1282 DUP5 SLOAD PUSH2 0x104C JUMP JUMPDEST DUP5 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x12BA JUMPI PUSH0 DUP4 ISZERO PUSH2 0x12A3 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1253 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12E9 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x12C9 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1306 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC5 PUSH13 0x34BE32F388F1D31D5BCE4F2140 0xD0 BASEFEE DUP16 0xDC 0xCE 0xB2 PUSH6 0xD21F9089259C 0xAE LT SLOAD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "37870:1251:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1436": {
									"entryPoint": null,
									"id": 1436,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_686": {
									"entryPoint": 3686,
									"id": 686,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_704": {
									"entryPoint": 3780,
									"id": 704,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_1275": {
									"entryPoint": 3734,
									"id": 1275,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_1286": {
									"entryPoint": 3843,
									"id": 1286,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_1245": {
									"entryPoint": null,
									"id": 1245,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1180": {
									"entryPoint": 2375,
									"id": 1180,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1234": {
									"entryPoint": null,
									"id": 1234,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1135": {
									"entryPoint": 3212,
									"id": 1135,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_1317": {
									"entryPoint": 3515,
									"id": 1317,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_1063": {
									"entryPoint": 2184,
									"id": 1063,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_621": {
									"entryPoint": null,
									"id": 621,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1223": {
									"entryPoint": 2667,
									"id": 1223,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_1374": {
									"entryPoint": 3605,
									"id": 1374,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_1006": {
									"entryPoint": 2787,
									"id": 1006,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_801": {
									"entryPoint": 2024,
									"id": 801,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_826": {
									"entryPoint": 1118,
									"id": 826,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_758": {
									"entryPoint": null,
									"id": 758,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1526": {
									"entryPoint": 1871,
									"id": 1526,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_734": {
									"entryPoint": null,
									"id": 734,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_929": {
									"entryPoint": 1889,
									"id": 929,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@deposit_1456": {
									"entryPoint": 909,
									"id": 1456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@increaseAllowance_888": {
									"entryPoint": 1313,
									"id": 888,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_1429": {
									"entryPoint": 1478,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isContract_117": {
									"entryPoint": null,
									"id": 117,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_1509": {
									"entryPoint": 1437,
									"id": 1509,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_714": {
									"entryPoint": 974,
									"id": 714,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1303": {
									"entryPoint": null,
									"id": 1303,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1331": {
									"entryPoint": 1459,
									"id": 1331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_724": {
									"entryPoint": 1856,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_744": {
									"entryPoint": null,
									"id": 744,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_859": {
									"entryPoint": 1143,
									"id": 859,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_1354": {
									"entryPoint": 2066,
									"id": 1354,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_783": {
									"entryPoint": 2011,
									"id": 783,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_1492": {
									"entryPoint": 1346,
									"id": 1492,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1564": {
									"entryPoint": 1178,
									"id": 1564,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 4267,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 4494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 4334,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 4623,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13360:1",
										"nodeType": "YulBlock",
										"src": "0:13360:1",
										"statements": [
											{
												"nativeSrc": "6:3:1",
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:1",
													"nodeType": "YulBlock",
													"src": "135:297:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:1",
																		"nodeType": "YulLiteral",
																		"src": "163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:1"
																},
																"nativeSrc": "145:21:1",
																"nodeType": "YulFunctionCall",
																"src": "145:21:1"
															},
															"nativeSrc": "145:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:1"
														},
														{
															"nativeSrc": "175:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:1"
																},
																"nativeSrc": "189:13:1",
																"nodeType": "YulFunctionCall",
																"src": "189:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:1",
																	"nodeType": "YulTypedName",
																	"src": "179:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:1",
																				"nodeType": "YulLiteral",
																				"src": "233:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:1"
																		},
																		"nativeSrc": "218:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																},
																"nativeSrc": "211:34:1",
																"nodeType": "YulFunctionCall",
																"src": "211:34:1"
															},
															"nativeSrc": "211:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:1",
																				"nodeType": "YulLiteral",
																				"src": "275:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:1"
																		},
																		"nativeSrc": "260:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:1",
																				"nodeType": "YulLiteral",
																				"src": "292:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:1"
																		},
																		"nativeSrc": "280:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:1"
																},
																"nativeSrc": "254:50:1",
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nativeSrc": "254:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:1"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:1"
																				},
																				"nativeSrc": "324:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:1",
																				"nodeType": "YulLiteral",
																				"src": "348:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:1"
																		},
																		"nativeSrc": "320:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:1",
																		"nodeType": "YulLiteral",
																		"src": "353:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:1"
																},
																"nativeSrc": "313:42:1",
																"nodeType": "YulFunctionCall",
																"src": "313:42:1"
															},
															"nativeSrc": "313:42:1",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:1"
														},
														{
															"nativeSrc": "364:62:1",
															"nodeType": "YulAssignment",
															"src": "364:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:1",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:1",
																								"nodeType": "YulLiteral",
																								"src": "407:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:1"
																						},
																						"nativeSrc": "395:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:1",
																								"nodeType": "YulLiteral",
																								"src": "416:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:1"
																						},
																						"nativeSrc": "412:7:1",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:1"
																				},
																				"nativeSrc": "391:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:45:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:1",
																		"nodeType": "YulLiteral",
																		"src": "423:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:1"
																},
																"nativeSrc": "372:54:1",
																"nodeType": "YulFunctionCall",
																"src": "372:54:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:1",
														"nodeType": "YulTypedName",
														"src": "104:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:1",
														"nodeType": "YulTypedName",
														"src": "115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:1",
														"nodeType": "YulTypedName",
														"src": "126:4:1",
														"type": ""
													}
												],
												"src": "14:418:1"
											},
											{
												"body": {
													"nativeSrc": "486:124:1",
													"nodeType": "YulBlock",
													"src": "486:124:1",
													"statements": [
														{
															"nativeSrc": "496:29:1",
															"nodeType": "YulAssignment",
															"src": "496:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:1"
																},
																"nativeSrc": "505:20:1",
																"nodeType": "YulFunctionCall",
																"src": "505:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:1",
																"nodeType": "YulBlock",
																"src": "588:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:1",
																					"nodeType": "YulLiteral",
																					"src": "597:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:1",
																					"nodeType": "YulLiteral",
																					"src": "600:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:1"
																			},
																			"nativeSrc": "590:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:1"
																		},
																		"nativeSrc": "590:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:1",
																										"nodeType": "YulLiteral",
																										"src": "573:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:1",
																										"nodeType": "YulLiteral",
																										"src": "578:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:1"
																								},
																								"nativeSrc": "569:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:1",
																								"nodeType": "YulLiteral",
																								"src": "582:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:1"
																						},
																						"nativeSrc": "565:19:1",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:1"
																				},
																				"nativeSrc": "554:31:1",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:1"
																		},
																		"nativeSrc": "544:42:1",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:1"
																},
																"nativeSrc": "537:50:1",
																"nodeType": "YulFunctionCall",
																"src": "537:50:1"
															},
															"nativeSrc": "534:70:1",
															"nodeType": "YulIf",
															"src": "534:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:1",
														"nodeType": "YulTypedName",
														"src": "465:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:1",
														"nodeType": "YulTypedName",
														"src": "476:5:1",
														"type": ""
													}
												],
												"src": "437:173:1"
											},
											{
												"body": {
													"nativeSrc": "702:213:1",
													"nodeType": "YulBlock",
													"src": "702:213:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:1",
																"nodeType": "YulBlock",
																"src": "748:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:1",
																					"nodeType": "YulLiteral",
																					"src": "757:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:1",
																					"nodeType": "YulLiteral",
																					"src": "760:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:1"
																			},
																			"nativeSrc": "750:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:1"
																		},
																		"nativeSrc": "750:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:1"
																		},
																		"nativeSrc": "719:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:1",
																		"nodeType": "YulLiteral",
																		"src": "744:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:1"
																},
																"nativeSrc": "715:32:1",
																"nodeType": "YulFunctionCall",
																"src": "715:32:1"
															},
															"nativeSrc": "712:52:1",
															"nodeType": "YulIf",
															"src": "712:52:1"
														},
														{
															"nativeSrc": "773:39:1",
															"nodeType": "YulAssignment",
															"src": "773:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:1"
																},
																"nativeSrc": "783:29:1",
																"nodeType": "YulFunctionCall",
																"src": "783:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:1"
																}
															]
														},
														{
															"nativeSrc": "821:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:1",
																"nodeType": "YulLiteral",
																"src": "834:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:1",
																	"nodeType": "YulTypedName",
																	"src": "825:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:1",
															"nodeType": "YulAssignment",
															"src": "844:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:1",
																				"nodeType": "YulLiteral",
																				"src": "881:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:1"
																		},
																		"nativeSrc": "866:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:1"
																},
																"nativeSrc": "853:32:1",
																"nodeType": "YulFunctionCall",
																"src": "853:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:1"
																}
															]
														},
														{
															"nativeSrc": "894:15:1",
															"nodeType": "YulAssignment",
															"src": "894:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:1",
																"nodeType": "YulIdentifier",
																"src": "904:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:1",
														"nodeType": "YulTypedName",
														"src": "660:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:1",
														"nodeType": "YulTypedName",
														"src": "671:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:1",
														"nodeType": "YulTypedName",
														"src": "683:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:1",
														"nodeType": "YulTypedName",
														"src": "691:6:1",
														"type": ""
													}
												],
												"src": "615:300:1"
											},
											{
												"body": {
													"nativeSrc": "1015:92:1",
													"nodeType": "YulBlock",
													"src": "1015:92:1",
													"statements": [
														{
															"nativeSrc": "1025:26:1",
															"nodeType": "YulAssignment",
															"src": "1025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:1"
																},
																"nativeSrc": "1033:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:1"
																				},
																				"nativeSrc": "1085:14:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:1"
																		},
																		"nativeSrc": "1078:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:1"
																},
																"nativeSrc": "1060:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:1"
															},
															"nativeSrc": "1060:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:1",
														"nodeType": "YulTypedName",
														"src": "984:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:1",
														"nodeType": "YulTypedName",
														"src": "995:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:1",
														"nodeType": "YulTypedName",
														"src": "1006:4:1",
														"type": ""
													}
												],
												"src": "920:187:1"
											},
											{
												"body": {
													"nativeSrc": "1213:76:1",
													"nodeType": "YulBlock",
													"src": "1213:76:1",
													"statements": [
														{
															"nativeSrc": "1223:26:1",
															"nodeType": "YulAssignment",
															"src": "1223:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:1"
																},
																"nativeSrc": "1231:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:1"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																},
																"nativeSrc": "1258:25:1",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:1"
															},
															"nativeSrc": "1258:25:1",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:1",
														"nodeType": "YulTypedName",
														"src": "1182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:1",
														"nodeType": "YulTypedName",
														"src": "1193:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:1",
														"nodeType": "YulTypedName",
														"src": "1204:4:1",
														"type": ""
													}
												],
												"src": "1112:177:1"
											},
											{
												"body": {
													"nativeSrc": "1398:270:1",
													"nodeType": "YulBlock",
													"src": "1398:270:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:1",
																"nodeType": "YulBlock",
																"src": "1444:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:1"
																			},
																			"nativeSrc": "1446:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:1"
																		},
																		"nativeSrc": "1446:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:1"
																		},
																		"nativeSrc": "1415:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:1"
																},
																"nativeSrc": "1411:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:1"
															},
															"nativeSrc": "1408:52:1",
															"nodeType": "YulIf",
															"src": "1408:52:1"
														},
														{
															"nativeSrc": "1469:39:1",
															"nodeType": "YulAssignment",
															"src": "1469:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:1"
																},
																"nativeSrc": "1479:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:1"
																}
															]
														},
														{
															"nativeSrc": "1517:48:1",
															"nodeType": "YulAssignment",
															"src": "1517:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:1"
																		},
																		"nativeSrc": "1546:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:1"
																},
																"nativeSrc": "1527:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:1"
																}
															]
														},
														{
															"nativeSrc": "1574:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:1",
																"nodeType": "YulLiteral",
																"src": "1587:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:1",
															"nodeType": "YulAssignment",
															"src": "1597:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:1"
																		},
																		"nativeSrc": "1619:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:1"
																},
																"nativeSrc": "1606:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:1"
																}
															]
														},
														{
															"nativeSrc": "1647:15:1",
															"nodeType": "YulAssignment",
															"src": "1647:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:1",
																"nodeType": "YulIdentifier",
																"src": "1657:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:1",
														"nodeType": "YulTypedName",
														"src": "1348:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:1",
														"nodeType": "YulTypedName",
														"src": "1359:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:1",
														"nodeType": "YulTypedName",
														"src": "1371:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:1",
														"nodeType": "YulTypedName",
														"src": "1379:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:1",
														"nodeType": "YulTypedName",
														"src": "1387:6:1",
														"type": ""
													}
												],
												"src": "1294:374:1"
											},
											{
												"body": {
													"nativeSrc": "1743:156:1",
													"nodeType": "YulBlock",
													"src": "1743:156:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1789:16:1",
																"nodeType": "YulBlock",
																"src": "1789:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1798:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1798:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1801:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1801:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1791:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1791:6:1"
																			},
																			"nativeSrc": "1791:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1791:12:1"
																		},
																		"nativeSrc": "1791:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1791:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1764:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1764:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1773:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1773:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1760:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1760:3:1"
																		},
																		"nativeSrc": "1760:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1760:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1785:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1756:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																},
																"nativeSrc": "1756:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1756:32:1"
															},
															"nativeSrc": "1753:52:1",
															"nodeType": "YulIf",
															"src": "1753:52:1"
														},
														{
															"nativeSrc": "1814:14:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1814:14:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1827:1:1",
																"nodeType": "YulLiteral",
																"src": "1827:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1818:5:1",
																	"nodeType": "YulTypedName",
																	"src": "1818:5:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1837:32:1",
															"nodeType": "YulAssignment",
															"src": "1837:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1859:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1859:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1846:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1846:12:1"
																},
																"nativeSrc": "1846:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1846:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1837:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1837:5:1"
																}
															]
														},
														{
															"nativeSrc": "1878:15:1",
															"nodeType": "YulAssignment",
															"src": "1878:15:1",
															"value": {
																"name": "value",
																"nativeSrc": "1888:5:1",
																"nodeType": "YulIdentifier",
																"src": "1888:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1878:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1673:226:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1709:9:1",
														"nodeType": "YulTypedName",
														"src": "1709:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1720:7:1",
														"nodeType": "YulTypedName",
														"src": "1720:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1732:6:1",
														"nodeType": "YulTypedName",
														"src": "1732:6:1",
														"type": ""
													}
												],
												"src": "1673:226:1"
											},
											{
												"body": {
													"nativeSrc": "2001:87:1",
													"nodeType": "YulBlock",
													"src": "2001:87:1",
													"statements": [
														{
															"nativeSrc": "2011:26:1",
															"nodeType": "YulAssignment",
															"src": "2011:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2023:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2023:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2034:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2034:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2019:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2019:3:1"
																},
																"nativeSrc": "2019:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2019:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2011:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2053:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2053:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2068:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2076:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2076:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2064:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2064:3:1"
																		},
																		"nativeSrc": "2064:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2064:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2046:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2046:6:1"
																},
																"nativeSrc": "2046:36:1",
																"nodeType": "YulFunctionCall",
																"src": "2046:36:1"
															},
															"nativeSrc": "2046:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "2046:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1904:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1970:9:1",
														"nodeType": "YulTypedName",
														"src": "1970:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1981:6:1",
														"nodeType": "YulTypedName",
														"src": "1981:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1992:4:1",
														"nodeType": "YulTypedName",
														"src": "1992:4:1",
														"type": ""
													}
												],
												"src": "1904:184:1"
											},
											{
												"body": {
													"nativeSrc": "2163:116:1",
													"nodeType": "YulBlock",
													"src": "2163:116:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2209:16:1",
																"nodeType": "YulBlock",
																"src": "2209:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2218:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2218:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2221:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2221:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2211:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2211:6:1"
																			},
																			"nativeSrc": "2211:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2211:12:1"
																		},
																		"nativeSrc": "2211:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2211:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2184:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2184:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2193:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2193:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2180:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:1"
																		},
																		"nativeSrc": "2180:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2205:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2205:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2176:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2176:3:1"
																},
																"nativeSrc": "2176:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2176:32:1"
															},
															"nativeSrc": "2173:52:1",
															"nodeType": "YulIf",
															"src": "2173:52:1"
														},
														{
															"nativeSrc": "2234:39:1",
															"nodeType": "YulAssignment",
															"src": "2234:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2263:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2263:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2244:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2244:18:1"
																},
																"nativeSrc": "2244:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2244:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2234:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2234:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2093:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2129:9:1",
														"nodeType": "YulTypedName",
														"src": "2129:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2140:7:1",
														"nodeType": "YulTypedName",
														"src": "2140:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2152:6:1",
														"nodeType": "YulTypedName",
														"src": "2152:6:1",
														"type": ""
													}
												],
												"src": "2093:186:1"
											},
											{
												"body": {
													"nativeSrc": "2385:102:1",
													"nodeType": "YulBlock",
													"src": "2385:102:1",
													"statements": [
														{
															"nativeSrc": "2395:26:1",
															"nodeType": "YulAssignment",
															"src": "2395:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2407:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2407:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2418:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2418:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2403:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2403:3:1"
																},
																"nativeSrc": "2403:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2403:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2395:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2395:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2437:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2452:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2452:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2468:3:1",
																								"nodeType": "YulLiteral",
																								"src": "2468:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2473:1:1",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2464:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "2464:3:1"
																						},
																						"nativeSrc": "2464:11:1",
																						"nodeType": "YulFunctionCall",
																						"src": "2464:11:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2477:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2477:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2460:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2460:3:1"
																				},
																				"nativeSrc": "2460:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2460:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2448:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2448:3:1"
																		},
																		"nativeSrc": "2448:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2448:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2430:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:1"
																},
																"nativeSrc": "2430:51:1",
																"nodeType": "YulFunctionCall",
																"src": "2430:51:1"
															},
															"nativeSrc": "2430:51:1",
															"nodeType": "YulExpressionStatement",
															"src": "2430:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2284:203:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2354:9:1",
														"nodeType": "YulTypedName",
														"src": "2354:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2365:6:1",
														"nodeType": "YulTypedName",
														"src": "2365:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2376:4:1",
														"nodeType": "YulTypedName",
														"src": "2376:4:1",
														"type": ""
													}
												],
												"src": "2284:203:1"
											},
											{
												"body": {
													"nativeSrc": "2579:173:1",
													"nodeType": "YulBlock",
													"src": "2579:173:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2625:16:1",
																"nodeType": "YulBlock",
																"src": "2625:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2637:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2637:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2627:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:1"
																			},
																			"nativeSrc": "2627:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2627:12:1"
																		},
																		"nativeSrc": "2627:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2627:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2600:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2600:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2596:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2596:3:1"
																		},
																		"nativeSrc": "2596:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2596:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2621:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2592:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2592:3:1"
																},
																"nativeSrc": "2592:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2592:32:1"
															},
															"nativeSrc": "2589:52:1",
															"nodeType": "YulIf",
															"src": "2589:52:1"
														},
														{
															"nativeSrc": "2650:39:1",
															"nodeType": "YulAssignment",
															"src": "2650:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2679:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2679:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2660:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2660:18:1"
																},
																"nativeSrc": "2660:29:1",
																"nodeType": "YulFunctionCall",
																"src": "2660:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2650:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2650:6:1"
																}
															]
														},
														{
															"nativeSrc": "2698:48:1",
															"nodeType": "YulAssignment",
															"src": "2698:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2731:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2731:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2742:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2727:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2727:3:1"
																		},
																		"nativeSrc": "2727:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2727:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2708:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2708:18:1"
																},
																"nativeSrc": "2708:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2708:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2698:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2698:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2492:260:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2537:9:1",
														"nodeType": "YulTypedName",
														"src": "2537:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2548:7:1",
														"nodeType": "YulTypedName",
														"src": "2548:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2560:6:1",
														"nodeType": "YulTypedName",
														"src": "2560:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2568:6:1",
														"nodeType": "YulTypedName",
														"src": "2568:6:1",
														"type": ""
													}
												],
												"src": "2492:260:1"
											},
											{
												"body": {
													"nativeSrc": "2812:325:1",
													"nodeType": "YulBlock",
													"src": "2812:325:1",
													"statements": [
														{
															"nativeSrc": "2822:22:1",
															"nodeType": "YulAssignment",
															"src": "2822:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2836:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2836:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2839:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2839:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2832:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2832:3:1"
																},
																"nativeSrc": "2832:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2832:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2822:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2822:6:1"
																}
															]
														},
														{
															"nativeSrc": "2853:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2853:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2883:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2883:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2889:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2889:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2879:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2879:3:1"
																},
																"nativeSrc": "2879:12:1",
																"nodeType": "YulFunctionCall",
																"src": "2879:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2857:18:1",
																	"nodeType": "YulTypedName",
																	"src": "2857:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2930:31:1",
																"nodeType": "YulBlock",
																"src": "2930:31:1",
																"statements": [
																	{
																		"nativeSrc": "2932:27:1",
																		"nodeType": "YulAssignment",
																		"src": "2932:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2946:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "2946:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2954:4:1",
																					"nodeType": "YulLiteral",
																					"src": "2954:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2942:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2942:3:1"
																			},
																			"nativeSrc": "2942:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2942:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2932:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2910:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2910:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2903:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2903:6:1"
																},
																"nativeSrc": "2903:26:1",
																"nodeType": "YulFunctionCall",
																"src": "2903:26:1"
															},
															"nativeSrc": "2900:61:1",
															"nodeType": "YulIf",
															"src": "2900:61:1"
														},
														{
															"body": {
																"nativeSrc": "3020:111:1",
																"nodeType": "YulBlock",
																"src": "3020:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3041:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3041:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3048:3:1",
																							"nodeType": "YulLiteral",
																							"src": "3048:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3053:10:1",
																							"nodeType": "YulLiteral",
																							"src": "3053:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3044:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3044:3:1"
																					},
																					"nativeSrc": "3044:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3044:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3034:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3034:6:1"
																			},
																			"nativeSrc": "3034:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3034:31:1"
																		},
																		"nativeSrc": "3034:31:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3034:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3085:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3085:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3088:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3088:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3078:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3078:6:1"
																			},
																			"nativeSrc": "3078:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3078:15:1"
																		},
																		"nativeSrc": "3078:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3078:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3113:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3113:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3116:4:1",
																					"nodeType": "YulLiteral",
																					"src": "3116:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3106:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3106:6:1"
																			},
																			"nativeSrc": "3106:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3106:15:1"
																		},
																		"nativeSrc": "3106:15:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3106:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2976:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "2976:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2999:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2999:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3007:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3007:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2996:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2996:2:1"
																		},
																		"nativeSrc": "2996:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2996:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2973:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2973:2:1"
																},
																"nativeSrc": "2973:38:1",
																"nodeType": "YulFunctionCall",
																"src": "2973:38:1"
															},
															"nativeSrc": "2970:161:1",
															"nodeType": "YulIf",
															"src": "2970:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2757:380:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2792:4:1",
														"nodeType": "YulTypedName",
														"src": "2792:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2801:6:1",
														"nodeType": "YulTypedName",
														"src": "2801:6:1",
														"type": ""
													}
												],
												"src": "2757:380:1"
											},
											{
												"body": {
													"nativeSrc": "3174:95:1",
													"nodeType": "YulBlock",
													"src": "3174:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3191:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3191:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3198:3:1",
																				"nodeType": "YulLiteral",
																				"src": "3198:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3203:10:1",
																				"nodeType": "YulLiteral",
																				"src": "3203:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3194:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3194:3:1"
																		},
																		"nativeSrc": "3194:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nativeSrc": "3184:31:1",
																"nodeType": "YulFunctionCall",
																"src": "3184:31:1"
															},
															"nativeSrc": "3184:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "3184:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3231:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3231:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3234:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3234:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3224:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3224:6:1"
																},
																"nativeSrc": "3224:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3224:15:1"
															},
															"nativeSrc": "3224:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3224:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3255:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3255:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3258:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3258:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3248:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3248:6:1"
																},
																"nativeSrc": "3248:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3248:15:1"
															},
															"nativeSrc": "3248:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3248:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3142:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3142:127:1"
											},
											{
												"body": {
													"nativeSrc": "3322:77:1",
													"nodeType": "YulBlock",
													"src": "3322:77:1",
													"statements": [
														{
															"nativeSrc": "3332:16:1",
															"nodeType": "YulAssignment",
															"src": "3332:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3343:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3343:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3346:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3346:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3339:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3339:3:1"
																},
																"nativeSrc": "3339:9:1",
																"nodeType": "YulFunctionCall",
																"src": "3339:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3332:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3332:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3371:22:1",
																"nodeType": "YulBlock",
																"src": "3371:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3373:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3373:16:1"
																			},
																			"nativeSrc": "3373:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3373:18:1"
																		},
																		"nativeSrc": "3373:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3373:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3363:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "3363:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3366:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3366:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3360:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3360:2:1"
																},
																"nativeSrc": "3360:10:1",
																"nodeType": "YulFunctionCall",
																"src": "3360:10:1"
															},
															"nativeSrc": "3357:36:1",
															"nodeType": "YulIf",
															"src": "3357:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3274:125:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3305:1:1",
														"nodeType": "YulTypedName",
														"src": "3305:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3308:1:1",
														"nodeType": "YulTypedName",
														"src": "3308:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3314:3:1",
														"nodeType": "YulTypedName",
														"src": "3314:3:1",
														"type": ""
													}
												],
												"src": "3274:125:1"
											},
											{
												"body": {
													"nativeSrc": "3578:180:1",
													"nodeType": "YulBlock",
													"src": "3578:180:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3595:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3595:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3606:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3606:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:1"
																},
																"nativeSrc": "3588:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3588:21:1"
															},
															"nativeSrc": "3588:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3588:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3629:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3629:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3640:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3640:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3625:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3625:3:1"
																		},
																		"nativeSrc": "3625:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3625:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3645:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3645:2:1",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3618:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3618:6:1"
																},
																"nativeSrc": "3618:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3618:30:1"
															},
															"nativeSrc": "3618:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3618:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3668:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3668:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3679:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3679:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3664:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3664:3:1"
																		},
																		"nativeSrc": "3664:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3664:18:1"
																	},
																	{
																		"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "3684:32:1",
																		"nodeType": "YulLiteral",
																		"src": "3684:32:1",
																		"type": "",
																		"value": "Not enough balance to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3657:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3657:6:1"
																},
																"nativeSrc": "3657:60:1",
																"nodeType": "YulFunctionCall",
																"src": "3657:60:1"
															},
															"nativeSrc": "3657:60:1",
															"nodeType": "YulExpressionStatement",
															"src": "3657:60:1"
														},
														{
															"nativeSrc": "3726:26:1",
															"nodeType": "YulAssignment",
															"src": "3726:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3738:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3738:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3734:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3734:3:1"
																},
																"nativeSrc": "3734:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3734:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3726:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3726:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3404:354:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3555:9:1",
														"nodeType": "YulTypedName",
														"src": "3555:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3569:4:1",
														"nodeType": "YulTypedName",
														"src": "3569:4:1",
														"type": ""
													}
												],
												"src": "3404:354:1"
											},
											{
												"body": {
													"nativeSrc": "3937:236:1",
													"nodeType": "YulBlock",
													"src": "3937:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3954:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3954:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3965:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3965:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3947:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:1"
																},
																"nativeSrc": "3947:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3947:21:1"
															},
															"nativeSrc": "3947:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "3947:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3988:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3988:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3999:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3999:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3984:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3984:3:1"
																		},
																		"nativeSrc": "3984:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4004:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4004:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3977:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3977:6:1"
																},
																"nativeSrc": "3977:30:1",
																"nodeType": "YulFunctionCall",
																"src": "3977:30:1"
															},
															"nativeSrc": "3977:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "3977:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4027:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4027:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4038:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4038:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4023:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4023:3:1"
																		},
																		"nativeSrc": "4023:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4023:18:1"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561",
																		"kind": "string",
																		"nativeSrc": "4043:34:1",
																		"nodeType": "YulLiteral",
																		"src": "4043:34:1",
																		"type": "",
																		"value": "Initializable: contract is alrea"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4016:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4016:6:1"
																},
																"nativeSrc": "4016:62:1",
																"nodeType": "YulFunctionCall",
																"src": "4016:62:1"
															},
															"nativeSrc": "4016:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "4016:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4098:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4098:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4109:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4109:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4094:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4094:3:1"
																		},
																		"nativeSrc": "4094:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4094:18:1"
																	},
																	{
																		"hexValue": "647920696e697469616c697a6564",
																		"kind": "string",
																		"nativeSrc": "4114:16:1",
																		"nodeType": "YulLiteral",
																		"src": "4114:16:1",
																		"type": "",
																		"value": "dy initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4087:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4087:6:1"
																},
																"nativeSrc": "4087:44:1",
																"nodeType": "YulFunctionCall",
																"src": "4087:44:1"
															},
															"nativeSrc": "4087:44:1",
															"nodeType": "YulExpressionStatement",
															"src": "4087:44:1"
														},
														{
															"nativeSrc": "4140:27:1",
															"nodeType": "YulAssignment",
															"src": "4140:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4152:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4152:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4163:3:1",
																		"nodeType": "YulLiteral",
																		"src": "4163:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4148:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4148:3:1"
																},
																"nativeSrc": "4148:19:1",
																"nodeType": "YulFunctionCall",
																"src": "4148:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4140:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4140:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3763:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3914:9:1",
														"nodeType": "YulTypedName",
														"src": "3914:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3928:4:1",
														"nodeType": "YulTypedName",
														"src": "3928:4:1",
														"type": ""
													}
												],
												"src": "3763:410:1"
											},
											{
												"body": {
													"nativeSrc": "4247:306:1",
													"nodeType": "YulBlock",
													"src": "4247:306:1",
													"statements": [
														{
															"nativeSrc": "4257:10:1",
															"nodeType": "YulAssignment",
															"src": "4257:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4266:1:1",
																"nodeType": "YulLiteral",
																"src": "4266:1:1",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4257:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4257:5:1"
																}
															]
														},
														{
															"nativeSrc": "4276:13:1",
															"nodeType": "YulAssignment",
															"src": "4276:13:1",
															"value": {
																"name": "_base",
																"nativeSrc": "4284:5:1",
																"nodeType": "YulIdentifier",
																"src": "4284:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "4276:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4276:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4334:213:1",
																"nodeType": "YulBlock",
																"src": "4334:213:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "4376:22:1",
																			"nodeType": "YulBlock",
																			"src": "4376:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "4378:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "4378:16:1"
																						},
																						"nativeSrc": "4378:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4378:18:1"
																					},
																					"nativeSrc": "4378:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "4378:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4354:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "4354:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "4364:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4364:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "4369:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4369:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "4360:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4360:3:1"
																					},
																					"nativeSrc": "4360:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4360:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "4351:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4351:2:1"
																			},
																			"nativeSrc": "4351:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4351:24:1"
																		},
																		"nativeSrc": "4348:50:1",
																		"nodeType": "YulIf",
																		"src": "4348:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "4431:29:1",
																			"nodeType": "YulBlock",
																			"src": "4431:29:1",
																			"statements": [
																				{
																					"nativeSrc": "4433:25:1",
																					"nodeType": "YulAssignment",
																					"src": "4433:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "4446:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "4446:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "4453:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "4453:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "4442:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "4442:3:1"
																						},
																						"nativeSrc": "4442:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "4442:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "4433:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "4433:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "4418:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4418:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4428:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4428:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4414:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4414:3:1"
																			},
																			"nativeSrc": "4414:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4414:16:1"
																		},
																		"nativeSrc": "4411:49:1",
																		"nodeType": "YulIf",
																		"src": "4411:49:1"
																	},
																	{
																		"nativeSrc": "4473:23:1",
																		"nodeType": "YulAssignment",
																		"src": "4473:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "4485:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "4485:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "4491:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "4491:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "4481:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4481:3:1"
																			},
																			"nativeSrc": "4481:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4481:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "4473:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4473:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4509:28:1",
																		"nodeType": "YulAssignment",
																		"src": "4509:28:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4525:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4525:1:1",
																					"type": "",
																					"value": "1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "4528:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "4528:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "4521:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4521:3:1"
																			},
																			"nativeSrc": "4521:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4521:16:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4509:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "4509:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4309:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4309:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4319:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4319:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4306:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4306:2:1"
																},
																"nativeSrc": "4306:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4306:15:1"
															},
															"nativeSrc": "4298:249:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4322:3:1",
																"nodeType": "YulBlock",
																"src": "4322:3:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "4302:3:1",
																"nodeType": "YulBlock",
																"src": "4302:3:1",
																"statements": []
															},
															"src": "4298:249:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "4178:375:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "4206:5:1",
														"nodeType": "YulTypedName",
														"src": "4206:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4213:8:1",
														"nodeType": "YulTypedName",
														"src": "4213:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "4223:3:1",
														"nodeType": "YulTypedName",
														"src": "4223:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4231:5:1",
														"nodeType": "YulTypedName",
														"src": "4231:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "4238:4:1",
														"nodeType": "YulTypedName",
														"src": "4238:4:1",
														"type": ""
													}
												],
												"src": "4178:375:1"
											},
											{
												"body": {
													"nativeSrc": "4617:843:1",
													"nodeType": "YulBlock",
													"src": "4617:843:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4655:52:1",
																"nodeType": "YulBlock",
																"src": "4655:52:1",
																"statements": [
																	{
																		"nativeSrc": "4669:10:1",
																		"nodeType": "YulAssignment",
																		"src": "4669:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4678:1:1",
																			"nodeType": "YulLiteral",
																			"src": "4678:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4669:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4669:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4692:5:1",
																		"nodeType": "YulLeave",
																		"src": "4692:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "4637:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4637:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4630:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4630:6:1"
																},
																"nativeSrc": "4630:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4630:16:1"
															},
															"nativeSrc": "4627:80:1",
															"nodeType": "YulIf",
															"src": "4627:80:1"
														},
														{
															"body": {
																"nativeSrc": "4740:52:1",
																"nodeType": "YulBlock",
																"src": "4740:52:1",
																"statements": [
																	{
																		"nativeSrc": "4754:10:1",
																		"nodeType": "YulAssignment",
																		"src": "4754:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4763:1:1",
																			"nodeType": "YulLiteral",
																			"src": "4763:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "4754:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4754:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4777:5:1",
																		"nodeType": "YulLeave",
																		"src": "4777:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4726:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4726:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4719:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4719:6:1"
																},
																"nativeSrc": "4719:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4719:12:1"
															},
															"nativeSrc": "4716:76:1",
															"nodeType": "YulIf",
															"src": "4716:76:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4828:52:1",
																		"nodeType": "YulBlock",
																		"src": "4828:52:1",
																		"statements": [
																			{
																				"nativeSrc": "4842:10:1",
																				"nodeType": "YulAssignment",
																				"src": "4842:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4851:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4851:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4842:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4842:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "4865:5:1",
																				"nodeType": "YulLeave",
																				"src": "4865:5:1"
																			}
																		]
																	},
																	"nativeSrc": "4821:59:1",
																	"nodeType": "YulCase",
																	"src": "4821:59:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4826:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4826:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "4896:167:1",
																		"nodeType": "YulBlock",
																		"src": "4896:167:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "4931:22:1",
																					"nodeType": "YulBlock",
																					"src": "4931:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "4933:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "4933:16:1"
																								},
																								"nativeSrc": "4933:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4933:18:1"
																							},
																							"nativeSrc": "4933:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4933:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4916:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4916:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4926:3:1",
																							"nodeType": "YulLiteral",
																							"src": "4926:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "4913:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4913:2:1"
																					},
																					"nativeSrc": "4913:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4913:17:1"
																				},
																				"nativeSrc": "4910:43:1",
																				"nodeType": "YulIf",
																				"src": "4910:43:1"
																			},
																			{
																				"nativeSrc": "4966:25:1",
																				"nodeType": "YulAssignment",
																				"src": "4966:25:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "4979:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4979:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4989:1:1",
																							"nodeType": "YulLiteral",
																							"src": "4989:1:1",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4975:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4975:3:1"
																					},
																					"nativeSrc": "4975:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4975:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "4966:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4966:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5004:11:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5004:11:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5014:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5014:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "_1",
																						"nativeSrc": "5008:2:1",
																						"nodeType": "YulTypedName",
																						"src": "5008:2:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5028:7:1",
																				"nodeType": "YulAssignment",
																				"src": "5028:7:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5034:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5034:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variableNames": [
																					{
																						"name": "_1",
																						"nativeSrc": "5028:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5028:2:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "5048:5:1",
																				"nodeType": "YulLeave",
																				"src": "5048:5:1"
																			}
																		]
																	},
																	"nativeSrc": "4889:174:1",
																	"nodeType": "YulCase",
																	"src": "4889:174:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4894:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4894:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "4808:4:1",
																"nodeType": "YulIdentifier",
																"src": "4808:4:1"
															},
															"nativeSrc": "4801:262:1",
															"nodeType": "YulSwitch",
															"src": "4801:262:1"
														},
														{
															"body": {
																"nativeSrc": "5161:114:1",
																"nodeType": "YulBlock",
																"src": "5161:114:1",
																"statements": [
																	{
																		"nativeSrc": "5175:28:1",
																		"nodeType": "YulAssignment",
																		"src": "5175:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5188:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "5188:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "5194:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "5194:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "5184:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5184:3:1"
																			},
																			"nativeSrc": "5184:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5184:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "5175:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5175:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5216:11:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5216:11:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5226:1:1",
																			"nodeType": "YulLiteral",
																			"src": "5226:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "5220:2:1",
																				"nodeType": "YulTypedName",
																				"src": "5220:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "5240:7:1",
																		"nodeType": "YulAssignment",
																		"src": "5240:7:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "5246:1:1",
																			"nodeType": "YulLiteral",
																			"src": "5246:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "_2",
																				"nativeSrc": "5240:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "5240:2:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5260:5:1",
																		"nodeType": "YulLeave",
																		"src": "5260:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5085:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "5085:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5091:2:1",
																						"nodeType": "YulLiteral",
																						"src": "5091:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5082:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5082:2:1"
																				},
																				"nativeSrc": "5082:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5082:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5099:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "5099:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5109:2:1",
																						"nodeType": "YulLiteral",
																						"src": "5109:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5096:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5096:2:1"
																				},
																				"nativeSrc": "5096:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5096:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5078:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5078:3:1"
																		},
																		"nativeSrc": "5078:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5078:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "5122:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "5122:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5128:3:1",
																						"nodeType": "YulLiteral",
																						"src": "5128:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5119:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5119:2:1"
																				},
																				"nativeSrc": "5119:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5119:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "5137:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "5137:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5147:2:1",
																						"nodeType": "YulLiteral",
																						"src": "5147:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "5134:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5134:2:1"
																				},
																				"nativeSrc": "5134:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5134:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5115:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5115:3:1"
																		},
																		"nativeSrc": "5115:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5115:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5075:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5075:2:1"
																},
																"nativeSrc": "5075:77:1",
																"nodeType": "YulFunctionCall",
																"src": "5075:77:1"
															},
															"nativeSrc": "5072:203:1",
															"nodeType": "YulIf",
															"src": "5072:203:1"
														},
														{
															"nativeSrc": "5284:65:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5284:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5326:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5326:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5332:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "5332:8:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5346:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5346:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5342:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5342:3:1"
																		},
																		"nativeSrc": "5342:6:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5342:6:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "5307:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5307:18:1"
																},
																"nativeSrc": "5307:42:1",
																"nodeType": "YulFunctionCall",
																"src": "5307:42:1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "5288:7:1",
																	"nodeType": "YulTypedName",
																	"src": "5288:7:1",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "5297:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5297:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5394:22:1",
																"nodeType": "YulBlock",
																"src": "5394:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5396:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5396:16:1"
																			},
																			"nativeSrc": "5396:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5396:18:1"
																		},
																		"nativeSrc": "5396:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5396:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5364:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5364:7:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5381:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5381:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5377:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5377:3:1"
																				},
																				"nativeSrc": "5377:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5377:6:1"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "5385:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5385:6:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "5373:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5373:3:1"
																		},
																		"nativeSrc": "5373:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5373:19:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5361:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5361:2:1"
																},
																"nativeSrc": "5361:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5361:32:1"
															},
															"nativeSrc": "5358:58:1",
															"nodeType": "YulIf",
															"src": "5358:58:1"
														},
														{
															"nativeSrc": "5425:29:1",
															"nodeType": "YulAssignment",
															"src": "5425:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "5438:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5438:7:1"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "5447:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5447:6:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5434:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5434:3:1"
																},
																"nativeSrc": "5434:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5434:20:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5425:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5425:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "4558:902:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4588:4:1",
														"nodeType": "YulTypedName",
														"src": "4588:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4594:8:1",
														"nodeType": "YulTypedName",
														"src": "4594:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4607:5:1",
														"nodeType": "YulTypedName",
														"src": "4607:5:1",
														"type": ""
													}
												],
												"src": "4558:902:1"
											},
											{
												"body": {
													"nativeSrc": "5535:61:1",
													"nodeType": "YulBlock",
													"src": "5535:61:1",
													"statements": [
														{
															"nativeSrc": "5545:45:1",
															"nodeType": "YulAssignment",
															"src": "5545:45:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "5575:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5575:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "5581:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "5581:8:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "5554:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "5554:20:1"
																},
																"nativeSrc": "5554:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5554:36:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5545:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5545:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "5465:131:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "5506:4:1",
														"nodeType": "YulTypedName",
														"src": "5506:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5512:8:1",
														"nodeType": "YulTypedName",
														"src": "5512:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5525:5:1",
														"nodeType": "YulTypedName",
														"src": "5525:5:1",
														"type": ""
													}
												],
												"src": "5465:131:1"
											},
											{
												"body": {
													"nativeSrc": "5653:116:1",
													"nodeType": "YulBlock",
													"src": "5653:116:1",
													"statements": [
														{
															"nativeSrc": "5663:20:1",
															"nodeType": "YulAssignment",
															"src": "5663:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5678:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5678:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5681:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "5681:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5674:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5674:3:1"
																},
																"nativeSrc": "5674:9:1",
																"nodeType": "YulFunctionCall",
																"src": "5674:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5663:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5663:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5741:22:1",
																"nodeType": "YulBlock",
																"src": "5741:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5743:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5743:16:1"
																			},
																			"nativeSrc": "5743:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5743:18:1"
																		},
																		"nativeSrc": "5743:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5743:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5712:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5712:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5705:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5705:6:1"
																				},
																				"nativeSrc": "5705:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5705:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5719:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "5719:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5726:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "5726:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5735:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "5735:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5722:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "5722:3:1"
																						},
																						"nativeSrc": "5722:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "5722:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5716:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "5716:2:1"
																				},
																				"nativeSrc": "5716:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5716:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5702:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5702:2:1"
																		},
																		"nativeSrc": "5702:37:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5702:37:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5695:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:1"
																},
																"nativeSrc": "5695:45:1",
																"nodeType": "YulFunctionCall",
																"src": "5695:45:1"
															},
															"nativeSrc": "5692:71:1",
															"nodeType": "YulIf",
															"src": "5692:71:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5601:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5632:1:1",
														"nodeType": "YulTypedName",
														"src": "5632:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5635:1:1",
														"nodeType": "YulTypedName",
														"src": "5635:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5641:7:1",
														"nodeType": "YulTypedName",
														"src": "5641:7:1",
														"type": ""
													}
												],
												"src": "5601:168:1"
											},
											{
												"body": {
													"nativeSrc": "5881:87:1",
													"nodeType": "YulBlock",
													"src": "5881:87:1",
													"statements": [
														{
															"nativeSrc": "5891:26:1",
															"nodeType": "YulAssignment",
															"src": "5891:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5903:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5903:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5914:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5914:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5899:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5899:3:1"
																},
																"nativeSrc": "5899:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5899:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5891:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5891:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5933:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5933:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5948:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5948:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5956:4:1",
																				"nodeType": "YulLiteral",
																				"src": "5956:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5944:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5944:3:1"
																		},
																		"nativeSrc": "5944:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5944:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5926:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5926:6:1"
																},
																"nativeSrc": "5926:36:1",
																"nodeType": "YulFunctionCall",
																"src": "5926:36:1"
															},
															"nativeSrc": "5926:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "5926:36:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5774:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5850:9:1",
														"nodeType": "YulTypedName",
														"src": "5850:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5861:6:1",
														"nodeType": "YulTypedName",
														"src": "5861:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5872:4:1",
														"nodeType": "YulTypedName",
														"src": "5872:4:1",
														"type": ""
													}
												],
												"src": "5774:194:1"
											},
											{
												"body": {
													"nativeSrc": "6147:227:1",
													"nodeType": "YulBlock",
													"src": "6147:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6164:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6164:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6175:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6175:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6157:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6157:6:1"
																},
																"nativeSrc": "6157:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6157:21:1"
															},
															"nativeSrc": "6157:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6157:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6198:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6198:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6209:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6209:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6194:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6194:3:1"
																		},
																		"nativeSrc": "6194:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6194:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6214:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6214:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6187:6:1"
																},
																"nativeSrc": "6187:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6187:30:1"
															},
															"nativeSrc": "6187:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6187:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6237:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6237:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6248:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6248:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6233:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6233:3:1"
																		},
																		"nativeSrc": "6233:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6233:18:1"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "6253:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6253:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6226:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6226:6:1"
																},
																"nativeSrc": "6226:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6226:62:1"
															},
															"nativeSrc": "6226:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6226:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6308:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6308:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6319:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6319:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6304:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6304:3:1"
																		},
																		"nativeSrc": "6304:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6304:18:1"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "6324:7:1",
																		"nodeType": "YulLiteral",
																		"src": "6324:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6297:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6297:6:1"
																},
																"nativeSrc": "6297:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6297:35:1"
															},
															"nativeSrc": "6297:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "6297:35:1"
														},
														{
															"nativeSrc": "6341:27:1",
															"nodeType": "YulAssignment",
															"src": "6341:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6353:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6353:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6364:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6364:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6349:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6349:3:1"
																},
																"nativeSrc": "6349:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6349:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6341:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6341:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5973:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6124:9:1",
														"nodeType": "YulTypedName",
														"src": "6124:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6138:4:1",
														"nodeType": "YulTypedName",
														"src": "6138:4:1",
														"type": ""
													}
												],
												"src": "5973:401:1"
											},
											{
												"body": {
													"nativeSrc": "6553:228:1",
													"nodeType": "YulBlock",
													"src": "6553:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6570:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6570:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6581:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6581:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6563:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6563:6:1"
																},
																"nativeSrc": "6563:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6563:21:1"
															},
															"nativeSrc": "6563:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6563:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6604:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6604:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6615:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6615:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6600:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6600:3:1"
																		},
																		"nativeSrc": "6600:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6600:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6620:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6620:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6593:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6593:6:1"
																},
																"nativeSrc": "6593:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6593:30:1"
															},
															"nativeSrc": "6593:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6593:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6643:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6643:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6654:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6654:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6639:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6639:3:1"
																		},
																		"nativeSrc": "6639:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6639:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "6659:34:1",
																		"nodeType": "YulLiteral",
																		"src": "6659:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6632:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6632:6:1"
																},
																"nativeSrc": "6632:62:1",
																"nodeType": "YulFunctionCall",
																"src": "6632:62:1"
															},
															"nativeSrc": "6632:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "6632:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6714:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6714:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6725:2:1",
																				"nodeType": "YulLiteral",
																				"src": "6725:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6710:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:1"
																		},
																		"nativeSrc": "6710:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6710:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "6730:8:1",
																		"nodeType": "YulLiteral",
																		"src": "6730:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6703:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6703:6:1"
																},
																"nativeSrc": "6703:36:1",
																"nodeType": "YulFunctionCall",
																"src": "6703:36:1"
															},
															"nativeSrc": "6703:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "6703:36:1"
														},
														{
															"nativeSrc": "6748:27:1",
															"nodeType": "YulAssignment",
															"src": "6748:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6760:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6760:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6771:3:1",
																		"nodeType": "YulLiteral",
																		"src": "6771:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6756:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:1"
																},
																"nativeSrc": "6756:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6756:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6748:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6748:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6379:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6530:9:1",
														"nodeType": "YulTypedName",
														"src": "6530:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6544:4:1",
														"nodeType": "YulTypedName",
														"src": "6544:4:1",
														"type": ""
													}
												],
												"src": "6379:402:1"
											},
											{
												"body": {
													"nativeSrc": "6960:181:1",
													"nodeType": "YulBlock",
													"src": "6960:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6977:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6977:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6988:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6988:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6970:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6970:6:1"
																},
																"nativeSrc": "6970:21:1",
																"nodeType": "YulFunctionCall",
																"src": "6970:21:1"
															},
															"nativeSrc": "6970:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "6970:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7011:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7011:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7022:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7022:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7007:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7007:3:1"
																		},
																		"nativeSrc": "7007:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7007:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7027:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7027:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7000:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7000:6:1"
																},
																"nativeSrc": "7000:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7000:30:1"
															},
															"nativeSrc": "7000:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7000:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7050:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7050:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7061:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7061:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7046:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:1"
																		},
																		"nativeSrc": "7046:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:18:1"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "7066:33:1",
																		"nodeType": "YulLiteral",
																		"src": "7066:33:1",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7039:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:1"
																},
																"nativeSrc": "7039:61:1",
																"nodeType": "YulFunctionCall",
																"src": "7039:61:1"
															},
															"nativeSrc": "7039:61:1",
															"nodeType": "YulExpressionStatement",
															"src": "7039:61:1"
														},
														{
															"nativeSrc": "7109:26:1",
															"nodeType": "YulAssignment",
															"src": "7109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7121:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7121:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7132:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7132:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7117:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7117:3:1"
																},
																"nativeSrc": "7117:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7109:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7109:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6786:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6937:9:1",
														"nodeType": "YulTypedName",
														"src": "6937:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6951:4:1",
														"nodeType": "YulTypedName",
														"src": "6951:4:1",
														"type": ""
													}
												],
												"src": "6786:355:1"
											},
											{
												"body": {
													"nativeSrc": "7320:226:1",
													"nodeType": "YulBlock",
													"src": "7320:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7337:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7337:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7348:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7348:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7330:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7330:6:1"
																},
																"nativeSrc": "7330:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7330:21:1"
															},
															"nativeSrc": "7330:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7330:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7371:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7371:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7382:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7382:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7367:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7367:3:1"
																		},
																		"nativeSrc": "7367:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7367:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7387:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7387:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7360:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7360:6:1"
																},
																"nativeSrc": "7360:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7360:30:1"
															},
															"nativeSrc": "7360:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7360:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7410:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7410:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7421:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7421:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7406:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7406:3:1"
																		},
																		"nativeSrc": "7406:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7406:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "7426:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7426:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7399:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7399:6:1"
																},
																"nativeSrc": "7399:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7399:62:1"
															},
															"nativeSrc": "7399:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7399:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7481:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7481:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7492:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7492:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7477:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7477:3:1"
																		},
																		"nativeSrc": "7477:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7477:18:1"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "7497:6:1",
																		"nodeType": "YulLiteral",
																		"src": "7497:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7470:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7470:6:1"
																},
																"nativeSrc": "7470:34:1",
																"nodeType": "YulFunctionCall",
																"src": "7470:34:1"
															},
															"nativeSrc": "7470:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "7470:34:1"
														},
														{
															"nativeSrc": "7513:27:1",
															"nodeType": "YulAssignment",
															"src": "7513:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7536:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7536:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7521:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7521:3:1"
																},
																"nativeSrc": "7521:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7521:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7513:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7513:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7146:400:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7297:9:1",
														"nodeType": "YulTypedName",
														"src": "7297:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7311:4:1",
														"nodeType": "YulTypedName",
														"src": "7311:4:1",
														"type": ""
													}
												],
												"src": "7146:400:1"
											},
											{
												"body": {
													"nativeSrc": "7725:224:1",
													"nodeType": "YulBlock",
													"src": "7725:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7742:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7742:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7753:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7753:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7735:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7735:6:1"
																},
																"nativeSrc": "7735:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7735:21:1"
															},
															"nativeSrc": "7735:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "7735:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7776:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7776:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7787:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7787:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7772:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7772:3:1"
																		},
																		"nativeSrc": "7772:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7772:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7792:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7792:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7765:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7765:6:1"
																},
																"nativeSrc": "7765:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7765:30:1"
															},
															"nativeSrc": "7765:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "7765:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7815:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7815:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7826:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7826:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7811:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7811:3:1"
																		},
																		"nativeSrc": "7811:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7811:18:1"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "7831:34:1",
																		"nodeType": "YulLiteral",
																		"src": "7831:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7804:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7804:6:1"
																},
																"nativeSrc": "7804:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7804:62:1"
															},
															"nativeSrc": "7804:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "7804:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7886:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7886:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7897:2:1",
																				"nodeType": "YulLiteral",
																				"src": "7897:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7882:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7882:3:1"
																		},
																		"nativeSrc": "7882:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7882:18:1"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "7902:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7902:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7875:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7875:6:1"
																},
																"nativeSrc": "7875:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7875:32:1"
															},
															"nativeSrc": "7875:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "7875:32:1"
														},
														{
															"nativeSrc": "7916:27:1",
															"nodeType": "YulAssignment",
															"src": "7916:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7928:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7928:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7939:3:1",
																		"nodeType": "YulLiteral",
																		"src": "7939:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7924:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7924:3:1"
																},
																"nativeSrc": "7924:19:1",
																"nodeType": "YulFunctionCall",
																"src": "7924:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7916:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7916:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7551:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7702:9:1",
														"nodeType": "YulTypedName",
														"src": "7702:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7716:4:1",
														"nodeType": "YulTypedName",
														"src": "7716:4:1",
														"type": ""
													}
												],
												"src": "7551:398:1"
											},
											{
												"body": {
													"nativeSrc": "8128:179:1",
													"nodeType": "YulBlock",
													"src": "8128:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8145:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8145:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8156:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8156:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8138:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:1"
																},
																"nativeSrc": "8138:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8138:21:1"
															},
															"nativeSrc": "8138:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8138:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8179:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8179:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8190:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8190:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8175:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8175:3:1"
																		},
																		"nativeSrc": "8175:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8175:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8195:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8195:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8168:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8168:6:1"
																},
																"nativeSrc": "8168:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8168:30:1"
															},
															"nativeSrc": "8168:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8168:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8218:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8218:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8229:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8229:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8214:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8214:3:1"
																		},
																		"nativeSrc": "8214:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8214:18:1"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "8234:31:1",
																		"nodeType": "YulLiteral",
																		"src": "8234:31:1",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8207:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8207:6:1"
																},
																"nativeSrc": "8207:59:1",
																"nodeType": "YulFunctionCall",
																"src": "8207:59:1"
															},
															"nativeSrc": "8207:59:1",
															"nodeType": "YulExpressionStatement",
															"src": "8207:59:1"
														},
														{
															"nativeSrc": "8275:26:1",
															"nodeType": "YulAssignment",
															"src": "8275:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8287:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8287:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8298:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8298:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8283:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8283:3:1"
																},
																"nativeSrc": "8283:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8283:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8275:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8275:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7954:353:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8105:9:1",
														"nodeType": "YulTypedName",
														"src": "8105:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8119:4:1",
														"nodeType": "YulTypedName",
														"src": "8119:4:1",
														"type": ""
													}
												],
												"src": "7954:353:1"
											},
											{
												"body": {
													"nativeSrc": "8486:227:1",
													"nodeType": "YulBlock",
													"src": "8486:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8503:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8503:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8514:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8514:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8496:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8496:6:1"
																},
																"nativeSrc": "8496:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8496:21:1"
															},
															"nativeSrc": "8496:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8496:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8537:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8537:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8548:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8548:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8533:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8533:3:1"
																		},
																		"nativeSrc": "8533:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8533:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8553:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8553:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8526:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8526:6:1"
																},
																"nativeSrc": "8526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8526:30:1"
															},
															"nativeSrc": "8526:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8526:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8576:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8576:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8587:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8587:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8572:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8572:3:1"
																		},
																		"nativeSrc": "8572:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8572:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "8592:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8592:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8565:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8565:6:1"
																},
																"nativeSrc": "8565:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8565:62:1"
															},
															"nativeSrc": "8565:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8565:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8647:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8647:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8658:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8658:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8643:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8643:3:1"
																		},
																		"nativeSrc": "8643:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8643:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "8663:7:1",
																		"nodeType": "YulLiteral",
																		"src": "8663:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8636:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8636:6:1"
																},
																"nativeSrc": "8636:35:1",
																"nodeType": "YulFunctionCall",
																"src": "8636:35:1"
															},
															"nativeSrc": "8636:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "8636:35:1"
														},
														{
															"nativeSrc": "8680:27:1",
															"nodeType": "YulAssignment",
															"src": "8680:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8692:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8692:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8703:3:1",
																		"nodeType": "YulLiteral",
																		"src": "8703:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8688:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8688:3:1"
																},
																"nativeSrc": "8688:19:1",
																"nodeType": "YulFunctionCall",
																"src": "8688:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8680:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8680:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8312:401:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8463:9:1",
														"nodeType": "YulTypedName",
														"src": "8463:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8477:4:1",
														"nodeType": "YulTypedName",
														"src": "8477:4:1",
														"type": ""
													}
												],
												"src": "8312:401:1"
											},
											{
												"body": {
													"nativeSrc": "8892:225:1",
													"nodeType": "YulBlock",
													"src": "8892:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8909:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8909:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8920:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8920:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8902:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8902:6:1"
																},
																"nativeSrc": "8902:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8902:21:1"
															},
															"nativeSrc": "8902:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8902:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8943:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8943:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8954:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8954:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:1"
																		},
																		"nativeSrc": "8939:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8939:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8959:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8959:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8932:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:1"
																},
																"nativeSrc": "8932:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8932:30:1"
															},
															"nativeSrc": "8932:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8932:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8982:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8982:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8993:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8993:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8978:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8978:3:1"
																		},
																		"nativeSrc": "8978:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8978:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "8998:34:1",
																		"nodeType": "YulLiteral",
																		"src": "8998:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8971:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8971:6:1"
																},
																"nativeSrc": "8971:62:1",
																"nodeType": "YulFunctionCall",
																"src": "8971:62:1"
															},
															"nativeSrc": "8971:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "8971:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9053:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9053:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9064:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9064:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9049:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9049:3:1"
																		},
																		"nativeSrc": "9049:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9049:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "9069:5:1",
																		"nodeType": "YulLiteral",
																		"src": "9069:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9042:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9042:6:1"
																},
																"nativeSrc": "9042:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9042:33:1"
															},
															"nativeSrc": "9042:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "9042:33:1"
														},
														{
															"nativeSrc": "9084:27:1",
															"nodeType": "YulAssignment",
															"src": "9084:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9096:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9096:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9107:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9107:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9092:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9092:3:1"
																},
																"nativeSrc": "9092:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9092:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9084:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9084:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8718:399:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8869:9:1",
														"nodeType": "YulTypedName",
														"src": "8869:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8883:4:1",
														"nodeType": "YulTypedName",
														"src": "8883:4:1",
														"type": ""
													}
												],
												"src": "8718:399:1"
											},
											{
												"body": {
													"nativeSrc": "9296:228:1",
													"nodeType": "YulBlock",
													"src": "9296:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9313:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9313:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9324:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9306:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9306:6:1"
																},
																"nativeSrc": "9306:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9306:21:1"
															},
															"nativeSrc": "9306:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9306:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9347:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9347:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9358:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9358:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9343:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9343:3:1"
																		},
																		"nativeSrc": "9343:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9343:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9363:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9363:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9336:6:1"
																},
																"nativeSrc": "9336:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9336:30:1"
															},
															"nativeSrc": "9336:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9336:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9386:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9386:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9397:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9397:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9382:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9382:3:1"
																		},
																		"nativeSrc": "9382:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9382:18:1"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "9402:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9402:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9375:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9375:6:1"
																},
																"nativeSrc": "9375:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9375:62:1"
															},
															"nativeSrc": "9375:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9375:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9457:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9457:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9468:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9468:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9453:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9453:3:1"
																		},
																		"nativeSrc": "9453:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9453:18:1"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "9473:8:1",
																		"nodeType": "YulLiteral",
																		"src": "9473:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9446:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9446:6:1"
																},
																"nativeSrc": "9446:36:1",
																"nodeType": "YulFunctionCall",
																"src": "9446:36:1"
															},
															"nativeSrc": "9446:36:1",
															"nodeType": "YulExpressionStatement",
															"src": "9446:36:1"
														},
														{
															"nativeSrc": "9491:27:1",
															"nodeType": "YulAssignment",
															"src": "9491:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9503:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9503:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9514:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9514:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9499:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9499:3:1"
																},
																"nativeSrc": "9499:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9499:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9491:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9491:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9122:402:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9273:9:1",
														"nodeType": "YulTypedName",
														"src": "9273:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9287:4:1",
														"nodeType": "YulTypedName",
														"src": "9287:4:1",
														"type": ""
													}
												],
												"src": "9122:402:1"
											},
											{
												"body": {
													"nativeSrc": "9703:223:1",
													"nodeType": "YulBlock",
													"src": "9703:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9720:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9720:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9731:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9731:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9713:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9713:6:1"
																},
																"nativeSrc": "9713:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9713:21:1"
															},
															"nativeSrc": "9713:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9713:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9765:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9765:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9750:3:1"
																		},
																		"nativeSrc": "9750:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9750:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9770:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9770:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9743:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9743:6:1"
																},
																"nativeSrc": "9743:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9743:30:1"
															},
															"nativeSrc": "9743:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "9743:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9793:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9793:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9804:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9804:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9789:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9789:3:1"
																		},
																		"nativeSrc": "9789:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9789:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nativeSrc": "9809:34:1",
																		"nodeType": "YulLiteral",
																		"src": "9809:34:1",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9782:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9782:6:1"
																},
																"nativeSrc": "9782:62:1",
																"nodeType": "YulFunctionCall",
																"src": "9782:62:1"
															},
															"nativeSrc": "9782:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "9782:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9864:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9864:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9875:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9875:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9860:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9860:3:1"
																		},
																		"nativeSrc": "9860:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9860:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "9880:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9880:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9853:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9853:6:1"
																},
																"nativeSrc": "9853:31:1",
																"nodeType": "YulFunctionCall",
																"src": "9853:31:1"
															},
															"nativeSrc": "9853:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "9853:31:1"
														},
														{
															"nativeSrc": "9893:27:1",
															"nodeType": "YulAssignment",
															"src": "9893:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9905:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9905:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9916:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9916:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9901:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9901:3:1"
																},
																"nativeSrc": "9901:19:1",
																"nodeType": "YulFunctionCall",
																"src": "9901:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9893:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9893:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9529:397:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9680:9:1",
														"nodeType": "YulTypedName",
														"src": "9680:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9694:4:1",
														"nodeType": "YulTypedName",
														"src": "9694:4:1",
														"type": ""
													}
												],
												"src": "9529:397:1"
											},
											{
												"body": {
													"nativeSrc": "10105:224:1",
													"nodeType": "YulBlock",
													"src": "10105:224:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10122:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10122:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10133:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10133:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10115:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10115:6:1"
																},
																"nativeSrc": "10115:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10115:21:1"
															},
															"nativeSrc": "10115:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10115:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10156:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10156:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10167:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10167:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10152:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10152:3:1"
																		},
																		"nativeSrc": "10152:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10152:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10172:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10172:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10145:6:1"
																},
																"nativeSrc": "10145:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10145:30:1"
															},
															"nativeSrc": "10145:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10145:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10195:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10195:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10206:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10206:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10191:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10191:3:1"
																		},
																		"nativeSrc": "10191:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10191:18:1"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nativeSrc": "10211:34:1",
																		"nodeType": "YulLiteral",
																		"src": "10211:34:1",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10184:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10184:6:1"
																},
																"nativeSrc": "10184:62:1",
																"nodeType": "YulFunctionCall",
																"src": "10184:62:1"
															},
															"nativeSrc": "10184:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "10184:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10266:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10266:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10277:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10277:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10262:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10262:3:1"
																		},
																		"nativeSrc": "10262:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10262:18:1"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nativeSrc": "10282:4:1",
																		"nodeType": "YulLiteral",
																		"src": "10282:4:1",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10255:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10255:6:1"
																},
																"nativeSrc": "10255:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10255:32:1"
															},
															"nativeSrc": "10255:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "10255:32:1"
														},
														{
															"nativeSrc": "10296:27:1",
															"nodeType": "YulAssignment",
															"src": "10296:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10308:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10308:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10319:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10319:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10304:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10304:3:1"
																},
																"nativeSrc": "10304:19:1",
																"nodeType": "YulFunctionCall",
																"src": "10304:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10296:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10296:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9931:398:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10082:9:1",
														"nodeType": "YulTypedName",
														"src": "10082:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10096:4:1",
														"nodeType": "YulTypedName",
														"src": "10096:4:1",
														"type": ""
													}
												],
												"src": "9931:398:1"
											},
											{
												"body": {
													"nativeSrc": "10508:182:1",
													"nodeType": "YulBlock",
													"src": "10508:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10525:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10525:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10536:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10536:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10518:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10518:6:1"
																},
																"nativeSrc": "10518:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10518:21:1"
															},
															"nativeSrc": "10518:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10518:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10559:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10559:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10570:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10570:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10555:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10555:3:1"
																		},
																		"nativeSrc": "10555:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10555:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10575:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10575:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10548:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10548:6:1"
																},
																"nativeSrc": "10548:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10548:30:1"
															},
															"nativeSrc": "10548:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10548:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10598:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10598:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10609:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10609:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10594:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10594:3:1"
																		},
																		"nativeSrc": "10594:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10594:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "10614:34:1",
																		"nodeType": "YulLiteral",
																		"src": "10614:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10587:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10587:6:1"
																},
																"nativeSrc": "10587:62:1",
																"nodeType": "YulFunctionCall",
																"src": "10587:62:1"
															},
															"nativeSrc": "10587:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "10587:62:1"
														},
														{
															"nativeSrc": "10658:26:1",
															"nodeType": "YulAssignment",
															"src": "10658:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10670:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10670:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10681:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10681:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10666:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10666:3:1"
																},
																"nativeSrc": "10666:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10666:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10658:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10658:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10334:356:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10485:9:1",
														"nodeType": "YulTypedName",
														"src": "10485:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10499:4:1",
														"nodeType": "YulTypedName",
														"src": "10499:4:1",
														"type": ""
													}
												],
												"src": "10334:356:1"
											},
											{
												"body": {
													"nativeSrc": "10869:233:1",
													"nodeType": "YulBlock",
													"src": "10869:233:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10886:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10886:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10897:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10897:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10879:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10879:6:1"
																},
																"nativeSrc": "10879:21:1",
																"nodeType": "YulFunctionCall",
																"src": "10879:21:1"
															},
															"nativeSrc": "10879:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "10879:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10920:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10920:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10931:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10931:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10916:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10916:3:1"
																		},
																		"nativeSrc": "10916:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10916:18:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10936:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10936:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10909:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10909:6:1"
																},
																"nativeSrc": "10909:30:1",
																"nodeType": "YulFunctionCall",
																"src": "10909:30:1"
															},
															"nativeSrc": "10909:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "10909:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10959:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10959:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10970:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10970:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10955:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10955:3:1"
																		},
																		"nativeSrc": "10955:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10955:18:1"
																	},
																	{
																		"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f742069",
																		"kind": "string",
																		"nativeSrc": "10975:34:1",
																		"nodeType": "YulLiteral",
																		"src": "10975:34:1",
																		"type": "",
																		"value": "Initializable: contract is not i"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10948:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10948:6:1"
																},
																"nativeSrc": "10948:62:1",
																"nodeType": "YulFunctionCall",
																"src": "10948:62:1"
															},
															"nativeSrc": "10948:62:1",
															"nodeType": "YulExpressionStatement",
															"src": "10948:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11030:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11030:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11041:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11041:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11026:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11026:3:1"
																		},
																		"nativeSrc": "11026:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11026:18:1"
																	},
																	{
																		"hexValue": "6e697469616c697a696e67",
																		"kind": "string",
																		"nativeSrc": "11046:13:1",
																		"nodeType": "YulLiteral",
																		"src": "11046:13:1",
																		"type": "",
																		"value": "nitializing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11019:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11019:6:1"
																},
																"nativeSrc": "11019:41:1",
																"nodeType": "YulFunctionCall",
																"src": "11019:41:1"
															},
															"nativeSrc": "11019:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "11019:41:1"
														},
														{
															"nativeSrc": "11069:27:1",
															"nodeType": "YulAssignment",
															"src": "11069:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11081:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11081:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11092:3:1",
																		"nodeType": "YulLiteral",
																		"src": "11092:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11077:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11077:3:1"
																},
																"nativeSrc": "11077:19:1",
																"nodeType": "YulFunctionCall",
																"src": "11077:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11069:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10695:407:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10846:9:1",
														"nodeType": "YulTypedName",
														"src": "10846:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10860:4:1",
														"nodeType": "YulTypedName",
														"src": "10860:4:1",
														"type": ""
													}
												],
												"src": "10695:407:1"
											},
											{
												"body": {
													"nativeSrc": "11139:95:1",
													"nodeType": "YulBlock",
													"src": "11139:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11156:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11156:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11163:3:1",
																				"nodeType": "YulLiteral",
																				"src": "11163:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11168:10:1",
																				"nodeType": "YulLiteral",
																				"src": "11168:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11159:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11159:3:1"
																		},
																		"nativeSrc": "11159:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11159:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11149:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11149:6:1"
																},
																"nativeSrc": "11149:31:1",
																"nodeType": "YulFunctionCall",
																"src": "11149:31:1"
															},
															"nativeSrc": "11149:31:1",
															"nodeType": "YulExpressionStatement",
															"src": "11149:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11196:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11196:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11199:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11199:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11189:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11189:6:1"
																},
																"nativeSrc": "11189:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11189:15:1"
															},
															"nativeSrc": "11189:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11189:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11220:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11220:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11223:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11223:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11213:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11213:6:1"
																},
																"nativeSrc": "11213:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11213:15:1"
															},
															"nativeSrc": "11213:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11213:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "11107:127:1",
												"nodeType": "YulFunctionDefinition",
												"src": "11107:127:1"
											},
											{
												"body": {
													"nativeSrc": "11295:65:1",
													"nodeType": "YulBlock",
													"src": "11295:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11312:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11312:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "11315:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11315:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11305:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11305:6:1"
																},
																"nativeSrc": "11305:14:1",
																"nodeType": "YulFunctionCall",
																"src": "11305:14:1"
															},
															"nativeSrc": "11305:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "11305:14:1"
														},
														{
															"nativeSrc": "11328:26:1",
															"nodeType": "YulAssignment",
															"src": "11328:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11346:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11346:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11349:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11349:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "11336:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "11336:9:1"
																},
																"nativeSrc": "11336:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11336:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11328:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11328:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "11239:121:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11278:3:1",
														"nodeType": "YulTypedName",
														"src": "11278:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11286:4:1",
														"nodeType": "YulTypedName",
														"src": "11286:4:1",
														"type": ""
													}
												],
												"src": "11239:121:1"
											},
											{
												"body": {
													"nativeSrc": "11446:437:1",
													"nodeType": "YulBlock",
													"src": "11446:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11479:398:1",
																"nodeType": "YulBlock",
																"src": "11479:398:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11500:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11500:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "11503:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "11503:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11493:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11493:6:1"
																			},
																			"nativeSrc": "11493:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11493:16:1"
																		},
																		"nativeSrc": "11493:16:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11493:16:1"
																	},
																	{
																		"nativeSrc": "11522:30:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11522:30:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11544:1:1",
																					"nodeType": "YulLiteral",
																					"src": "11544:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11547:4:1",
																					"nodeType": "YulLiteral",
																					"src": "11547:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "11534:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11534:9:1"
																			},
																			"nativeSrc": "11534:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11534:18:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "11526:4:1",
																				"nodeType": "YulTypedName",
																				"src": "11526:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11565:57:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11565:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "11588:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "11588:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11598:1:1",
																							"nodeType": "YulLiteral",
																							"src": "11598:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "11605:10:1",
																									"nodeType": "YulIdentifier",
																									"src": "11605:10:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11617:2:1",
																									"nodeType": "YulLiteral",
																									"src": "11617:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11601:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "11601:3:1"
																							},
																							"nativeSrc": "11601:19:1",
																							"nodeType": "YulFunctionCall",
																							"src": "11601:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "11594:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "11594:3:1"
																					},
																					"nativeSrc": "11594:27:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11594:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11584:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11584:3:1"
																			},
																			"nativeSrc": "11584:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11584:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "11569:11:1",
																				"nodeType": "YulTypedName",
																				"src": "11569:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11659:23:1",
																			"nodeType": "YulBlock",
																			"src": "11659:23:1",
																			"statements": [
																				{
																					"nativeSrc": "11661:19:1",
																					"nodeType": "YulAssignment",
																					"src": "11661:19:1",
																					"value": {
																						"name": "data",
																						"nativeSrc": "11676:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "11676:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11661:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "11661:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11641:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "11641:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11653:4:1",
																					"nodeType": "YulLiteral",
																					"src": "11653:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11638:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "11638:2:1"
																			},
																			"nativeSrc": "11638:20:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11638:20:1"
																		},
																		"nativeSrc": "11635:47:1",
																		"nodeType": "YulIf",
																		"src": "11635:47:1"
																	},
																	{
																		"nativeSrc": "11695:41:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11695:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "11709:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "11709:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11719:1:1",
																							"nodeType": "YulLiteral",
																							"src": "11719:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "11726:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "11726:3:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11731:2:1",
																									"nodeType": "YulLiteral",
																									"src": "11731:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11722:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "11722:3:1"
																							},
																							"nativeSrc": "11722:12:1",
																							"nodeType": "YulFunctionCall",
																							"src": "11722:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "11715:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "11715:3:1"
																					},
																					"nativeSrc": "11715:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11715:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11705:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11705:3:1"
																			},
																			"nativeSrc": "11705:31:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11705:31:1"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "11699:2:1",
																				"nodeType": "YulTypedName",
																				"src": "11699:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11749:24:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11749:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "11762:11:1",
																			"nodeType": "YulIdentifier",
																			"src": "11762:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "11753:5:1",
																				"nodeType": "YulTypedName",
																				"src": "11753:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11847:20:1",
																			"nodeType": "YulBlock",
																			"src": "11847:20:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "11856:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "11856:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11863:1:1",
																								"nodeType": "YulLiteral",
																								"src": "11863:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "11849:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "11849:6:1"
																						},
																						"nativeSrc": "11849:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11849:16:1"
																					},
																					"nativeSrc": "11849:16:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "11849:16:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11797:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "11797:5:1"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "11804:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "11804:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11794:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "11794:2:1"
																			},
																			"nativeSrc": "11794:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11794:13:1"
																		},
																		"nativeSrc": "11786:81:1",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "11808:26:1",
																			"nodeType": "YulBlock",
																			"src": "11808:26:1",
																			"statements": [
																				{
																					"nativeSrc": "11810:22:1",
																					"nodeType": "YulAssignment",
																					"src": "11810:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "11823:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "11823:5:1"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11830:1:1",
																								"nodeType": "YulLiteral",
																								"src": "11830:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "11819:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11819:3:1"
																						},
																						"nativeSrc": "11819:13:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11819:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "11810:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "11810:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "11790:3:1",
																			"nodeType": "YulBlock",
																			"src": "11790:3:1",
																			"statements": []
																		},
																		"src": "11786:81:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11462:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11462:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11467:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11467:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11459:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11459:2:1"
																},
																"nativeSrc": "11459:11:1",
																"nodeType": "YulFunctionCall",
																"src": "11459:11:1"
															},
															"nativeSrc": "11456:421:1",
															"nodeType": "YulIf",
															"src": "11456:421:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "11365:518:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11418:5:1",
														"nodeType": "YulTypedName",
														"src": "11418:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11425:3:1",
														"nodeType": "YulTypedName",
														"src": "11425:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11430:10:1",
														"nodeType": "YulTypedName",
														"src": "11430:10:1",
														"type": ""
													}
												],
												"src": "11365:518:1"
											},
											{
												"body": {
													"nativeSrc": "11973:81:1",
													"nodeType": "YulBlock",
													"src": "11973:81:1",
													"statements": [
														{
															"nativeSrc": "11983:65:1",
															"nodeType": "YulAssignment",
															"src": "11983:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "11998:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "11998:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12016:1:1",
																										"nodeType": "YulLiteral",
																										"src": "12016:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "12019:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "12019:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "12012:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "12012:3:1"
																								},
																								"nativeSrc": "12012:11:1",
																								"nodeType": "YulFunctionCall",
																								"src": "12012:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12029:1:1",
																										"nodeType": "YulLiteral",
																										"src": "12029:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "12025:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "12025:3:1"
																								},
																								"nativeSrc": "12025:6:1",
																								"nodeType": "YulFunctionCall",
																								"src": "12025:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "12008:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "12008:3:1"
																						},
																						"nativeSrc": "12008:24:1",
																						"nodeType": "YulFunctionCall",
																						"src": "12008:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12004:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12004:3:1"
																				},
																				"nativeSrc": "12004:29:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12004:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11994:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11994:3:1"
																		},
																		"nativeSrc": "11994:40:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11994:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12040:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12040:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12043:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12043:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12036:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12036:3:1"
																		},
																		"nativeSrc": "12036:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12036:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11991:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11991:2:1"
																},
																"nativeSrc": "11991:57:1",
																"nodeType": "YulFunctionCall",
																"src": "11991:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "11983:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11983:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "11888:166:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11950:4:1",
														"nodeType": "YulTypedName",
														"src": "11950:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11956:3:1",
														"nodeType": "YulTypedName",
														"src": "11956:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "11964:4:1",
														"nodeType": "YulTypedName",
														"src": "11964:4:1",
														"type": ""
													}
												],
												"src": "11888:166:1"
											},
											{
												"body": {
													"nativeSrc": "12155:1203:1",
													"nodeType": "YulBlock",
													"src": "12155:1203:1",
													"statements": [
														{
															"nativeSrc": "12165:24:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12165:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12185:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12185:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12179:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12179:5:1"
																},
																"nativeSrc": "12179:10:1",
																"nodeType": "YulFunctionCall",
																"src": "12179:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12169:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12169:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12232:22:1",
																"nodeType": "YulBlock",
																"src": "12232:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12234:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12234:16:1"
																			},
																			"nativeSrc": "12234:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12234:18:1"
																		},
																		"nativeSrc": "12234:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12234:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12204:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12204:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12212:18:1",
																		"nodeType": "YulLiteral",
																		"src": "12212:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12201:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12201:2:1"
																},
																"nativeSrc": "12201:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12201:30:1"
															},
															"nativeSrc": "12198:56:1",
															"nodeType": "YulIf",
															"src": "12198:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12307:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12307:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12345:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "12345:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12339:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "12339:5:1"
																				},
																				"nativeSrc": "12339:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12339:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "12313:25:1",
																			"nodeType": "YulIdentifier",
																			"src": "12313:25:1"
																		},
																		"nativeSrc": "12313:38:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12313:38:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12353:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12353:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "12263:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12263:43:1"
																},
																"nativeSrc": "12263:97:1",
																"nodeType": "YulFunctionCall",
																"src": "12263:97:1"
															},
															"nativeSrc": "12263:97:1",
															"nodeType": "YulExpressionStatement",
															"src": "12263:97:1"
														},
														{
															"nativeSrc": "12369:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12369:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "12386:1:1",
																"nodeType": "YulLiteral",
																"src": "12386:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12373:9:1",
																	"nodeType": "YulTypedName",
																	"src": "12373:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12396:17:1",
															"nodeType": "YulAssignment",
															"src": "12396:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "12409:4:1",
																"nodeType": "YulLiteral",
																"src": "12409:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12396:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "12396:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "12459:642:1",
																		"nodeType": "YulBlock",
																		"src": "12459:642:1",
																		"statements": [
																			{
																				"nativeSrc": "12473:35:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12473:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "12492:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "12492:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "12504:2:1",
																									"nodeType": "YulLiteral",
																									"src": "12504:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "12500:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "12500:3:1"
																							},
																							"nativeSrc": "12500:7:1",
																							"nodeType": "YulFunctionCall",
																							"src": "12500:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "12488:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "12488:3:1"
																					},
																					"nativeSrc": "12488:20:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12488:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "12477:7:1",
																						"nodeType": "YulTypedName",
																						"src": "12477:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12521:49:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12521:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12565:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "12565:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "12535:29:1",
																						"nodeType": "YulIdentifier",
																						"src": "12535:29:1"
																					},
																					"nativeSrc": "12535:35:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12535:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "12525:6:1",
																						"nodeType": "YulTypedName",
																						"src": "12525:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "12583:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12583:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12592:1:1",
																					"nodeType": "YulLiteral",
																					"src": "12592:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "12587:1:1",
																						"nodeType": "YulTypedName",
																						"src": "12587:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12663:165:1",
																					"nodeType": "YulBlock",
																					"src": "12663:165:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12688:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "12688:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "12706:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "12706:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "12711:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "12711:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "12702:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "12702:3:1"
																												},
																												"nativeSrc": "12702:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "12702:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "12696:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "12696:5:1"
																										},
																										"nativeSrc": "12696:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "12696:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12681:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "12681:6:1"
																								},
																								"nativeSrc": "12681:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "12681:42:1"
																							},
																							"nativeSrc": "12681:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "12681:42:1"
																						},
																						{
																							"nativeSrc": "12740:24:1",
																							"nodeType": "YulAssignment",
																							"src": "12740:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12754:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "12754:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12762:1:1",
																										"nodeType": "YulLiteral",
																										"src": "12762:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12750:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "12750:3:1"
																								},
																								"nativeSrc": "12750:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "12750:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "12740:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "12740:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "12781:33:1",
																							"nodeType": "YulAssignment",
																							"src": "12781:33:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "12798:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "12798:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12809:4:1",
																										"nodeType": "YulLiteral",
																										"src": "12809:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12794:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "12794:3:1"
																								},
																								"nativeSrc": "12794:20:1",
																								"nodeType": "YulFunctionCall",
																								"src": "12794:20:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "12781:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "12781:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "12617:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "12617:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12620:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "12620:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12614:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "12614:2:1"
																					},
																					"nativeSrc": "12614:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12614:14:1"
																				},
																				"nativeSrc": "12606:222:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "12629:21:1",
																					"nodeType": "YulBlock",
																					"src": "12629:21:1",
																					"statements": [
																						{
																							"nativeSrc": "12631:17:1",
																							"nodeType": "YulAssignment",
																							"src": "12631:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "12640:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "12640:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "12643:4:1",
																										"nodeType": "YulLiteral",
																										"src": "12643:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "12636:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "12636:3:1"
																								},
																								"nativeSrc": "12636:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "12636:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "12631:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "12631:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "12610:3:1",
																					"nodeType": "YulBlock",
																					"src": "12610:3:1",
																					"statements": []
																				},
																				"src": "12606:222:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "12876:166:1",
																					"nodeType": "YulBlock",
																					"src": "12876:166:1",
																					"statements": [
																						{
																							"nativeSrc": "12894:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "12894:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "12921:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "12921:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "12926:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "12926:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "12917:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "12917:3:1"
																										},
																										"nativeSrc": "12917:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "12917:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "12911:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "12911:5:1"
																								},
																								"nativeSrc": "12911:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "12911:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "12898:9:1",
																									"nodeType": "YulTypedName",
																									"src": "12898:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12961:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "12961:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "12973:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "12973:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "13000:1:1",
																																				"nodeType": "YulLiteral",
																																				"src": "13000:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "13003:6:1",
																																				"nodeType": "YulIdentifier",
																																				"src": "13003:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "12996:3:1",
																																			"nodeType": "YulIdentifier",
																																			"src": "12996:3:1"
																																		},
																																		"nativeSrc": "12996:14:1",
																																		"nodeType": "YulFunctionCall",
																																		"src": "12996:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13012:3:1",
																																		"nodeType": "YulLiteral",
																																		"src": "13012:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "12992:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "12992:3:1"
																																},
																																"nativeSrc": "12992:24:1",
																																"nodeType": "YulFunctionCall",
																																"src": "12992:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13022:1:1",
																																		"nodeType": "YulLiteral",
																																		"src": "13022:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "13018:3:1",
																																	"nodeType": "YulIdentifier",
																																	"src": "13018:3:1"
																																},
																																"nativeSrc": "13018:6:1",
																																"nodeType": "YulFunctionCall",
																																"src": "13018:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "12988:3:1",
																															"nodeType": "YulIdentifier",
																															"src": "12988:3:1"
																														},
																														"nativeSrc": "12988:37:1",
																														"nodeType": "YulFunctionCall",
																														"src": "12988:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "12984:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "12984:3:1"
																												},
																												"nativeSrc": "12984:42:1",
																												"nodeType": "YulFunctionCall",
																												"src": "12984:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "12969:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "12969:3:1"
																										},
																										"nativeSrc": "12969:58:1",
																										"nodeType": "YulFunctionCall",
																										"src": "12969:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12954:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "12954:6:1"
																								},
																								"nativeSrc": "12954:74:1",
																								"nodeType": "YulFunctionCall",
																								"src": "12954:74:1"
																							},
																							"nativeSrc": "12954:74:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "12954:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12847:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "12847:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "12856:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "12856:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12844:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "12844:2:1"
																					},
																					"nativeSrc": "12844:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12844:19:1"
																				},
																				"nativeSrc": "12841:201:1",
																				"nodeType": "YulIf",
																				"src": "12841:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13062:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "13062:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13076:1:1",
																											"nodeType": "YulLiteral",
																											"src": "13076:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "13079:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "13079:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "13072:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "13072:3:1"
																									},
																									"nativeSrc": "13072:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "13072:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13088:1:1",
																									"nodeType": "YulLiteral",
																									"src": "13088:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13068:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "13068:3:1"
																							},
																							"nativeSrc": "13068:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "13068:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13055:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13055:6:1"
																					},
																					"nativeSrc": "13055:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "13055:36:1"
																				},
																				"nativeSrc": "13055:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "13055:36:1"
																			}
																		]
																	},
																	"nativeSrc": "12452:649:1",
																	"nodeType": "YulCase",
																	"src": "12452:649:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12457:1:1",
																		"nodeType": "YulLiteral",
																		"src": "12457:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13118:234:1",
																		"nodeType": "YulBlock",
																		"src": "13118:234:1",
																		"statements": [
																			{
																				"nativeSrc": "13132:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13132:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13145:1:1",
																					"nodeType": "YulLiteral",
																					"src": "13145:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13136:5:1",
																						"nodeType": "YulTypedName",
																						"src": "13136:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13181:67:1",
																					"nodeType": "YulBlock",
																					"src": "13181:67:1",
																					"statements": [
																						{
																							"nativeSrc": "13199:35:1",
																							"nodeType": "YulAssignment",
																							"src": "13199:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13218:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "13218:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13223:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "13223:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13214:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "13214:3:1"
																										},
																										"nativeSrc": "13214:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "13214:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13208:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "13208:5:1"
																								},
																								"nativeSrc": "13208:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "13208:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13199:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "13199:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13162:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "13162:6:1"
																				},
																				"nativeSrc": "13159:89:1",
																				"nodeType": "YulIf",
																				"src": "13159:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13268:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "13268:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13327:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "13327:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13334:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "13334:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13274:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "13274:52:1"
																							},
																							"nativeSrc": "13274:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "13274:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13261:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13261:6:1"
																					},
																					"nativeSrc": "13261:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "13261:81:1"
																				},
																				"nativeSrc": "13261:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "13261:81:1"
																			}
																		]
																	},
																	"nativeSrc": "13110:242:1",
																	"nodeType": "YulCase",
																	"src": "13110:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12432:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12432:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12440:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12440:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12429:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12429:2:1"
																},
																"nativeSrc": "12429:14:1",
																"nodeType": "YulFunctionCall",
																"src": "12429:14:1"
															},
															"nativeSrc": "12422:930:1",
															"nodeType": "YulSwitch",
															"src": "12422:930:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12059:1299:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12140:4:1",
														"nodeType": "YulTypedName",
														"src": "12140:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12146:3:1",
														"nodeType": "YulTypedName",
														"src": "12146:3:1",
														"type": ""
													}
												],
												"src": "12059:1299:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Not enough balance to withdraw\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Initializable: contract is not i\")\n        mstore(add(headStart, 96), \"nitializing\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11E JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x9D JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x36E JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x29B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2EA JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x253 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x1C7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST CALLDATASIZE PUSH2 0x12D JUMPI PUSH2 0x12B PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x166 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x195 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B3 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x1C2 CALLDATASIZE PUSH1 0x4 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xFE4 JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x21B CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x521 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x542 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x26D CALLDATASIZE PUSH1 0x4 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x5B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x5C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2BA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x65 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x152 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x740 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x304 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x333 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17A PUSH2 0x342 CALLDATASIZE PUSH1 0x4 PUSH2 0xF82 JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x12B PUSH2 0x38D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x19A PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x101B JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x379 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x12B PUSH2 0x388 CALLDATASIZE PUSH1 0x4 PUSH2 0xFFB JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH2 0x397 CALLER CALLVALUE PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLVALUE DUP2 MSTORE CALLER SWAP1 PUSH32 0xE1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x3DD SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x409 SWAP1 PUSH2 0x104C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x454 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x42B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x454 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x437 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x46B DUP2 DUP6 DUP6 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x484 DUP6 DUP3 DUP6 PUSH2 0xA6B JUMP JUMPDEST PUSH2 0x48F DUP6 DUP6 DUP6 PUSH2 0xAE3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x4B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x4BE CALLER DUP3 PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4E8 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x46B DUP2 DUP6 DUP6 PUSH2 0x533 DUP4 DUP4 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x53D SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH2 0x54A PUSH2 0xDBB JUMP JUMPDEST SELFBALANCE DUP1 PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5A5 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x5AF DUP3 DUP3 PUSH2 0x888 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5BB PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x5C4 PUSH0 PUSH2 0xE15 JUMP JUMPDEST JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 DUP1 ISZERO PUSH2 0x5E4 JUMPI POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0xFF SWAP1 SWAP2 AND LT JUMPDEST DUP1 PUSH2 0x5FD JUMPI POP ADDRESS EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FD JUMPI POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x1 EQ JUMPDEST PUSH2 0x660 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x681 JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE JUMPDEST PUSH2 0x6CC PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x2BB930B83832B21022BA3432B9 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xAE8AA89 PUSH1 0xE3 SHL DUP2 MSTORE POP PUSH2 0xE66 JUMP JUMPDEST PUSH2 0x6D4 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x6F8 CALLER PUSH2 0x6E4 PUSH1 0x12 PUSH1 0xA PUSH2 0x118E JUMP JUMPDEST PUSH2 0x6F3 SWAP1 PUSH5 0x2540BE400 PUSH2 0x1199 JUMP JUMPDEST PUSH2 0x888 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x73D JUMPI PUSH0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0x7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x3DD SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH2 0x757 PUSH2 0xDBB JUMP JUMPDEST PUSH2 0x5AF DUP3 DUP3 PUSH2 0xC8C JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x76E DUP3 DUP7 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x7CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH2 0x48F DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x947 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x46B DUP2 DUP6 DUP6 PUSH2 0xAE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x81A PUSH2 0xDBB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH2 0x73D DUP2 PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST DUP1 PUSH1 0x35 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8EF SWAP2 SWAP1 PUSH2 0x1098 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x9A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA76 DUP5 DUP5 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0xADD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH2 0xADD DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x947 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC20 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE SWAP3 DUP7 AND DUP1 DUP3 MSTORE SWAP1 DUP4 SWAP1 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE SWAP2 MLOAD PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH2 0xC7F SWAP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xADD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xCEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xD5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x35 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0xA5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x65 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x5C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x594 JUMP JUMPDEST PUSH1 0x65 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xE8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x5AF DUP3 DUP3 PUSH2 0xEC4 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0xF03 JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x36 PUSH2 0xEF6 DUP4 DUP3 PUSH2 0x125A JUMP JUMPDEST POP PUSH1 0x37 PUSH2 0xDB6 DUP3 DUP3 PUSH2 0x125A JUMP JUMPDEST PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0xF29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x594 SWAP1 PUSH2 0x11B0 JUMP JUMPDEST PUSH2 0x5C4 CALLER PUSH2 0xE15 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF7D JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF93 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xF9C DUP4 PUSH2 0xF67 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xFBC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFC5 DUP5 PUSH2 0xF67 JUMP JUMPDEST SWAP3 POP PUSH2 0xFD3 PUSH1 0x20 DUP6 ADD PUSH2 0xF67 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x100B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1014 DUP3 PUSH2 0xF67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x102C JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1035 DUP4 PUSH2 0xF67 JUMP JUMPDEST SWAP2 POP PUSH2 0x1043 PUSH1 0x20 DUP5 ADD PUSH2 0xF67 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1060 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x107E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x10E6 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x10CA JUMPI PUSH2 0x10CA PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x10D8 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x10AF JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x10FC JUMPI POP PUSH1 0x1 PUSH2 0x471 JUMP JUMPDEST DUP2 PUSH2 0x1108 JUMPI POP PUSH0 PUSH2 0x471 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x111E JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x1128 JUMPI PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x471 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1139 JUMPI PUSH2 0x1139 PUSH2 0x1084 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x471 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1167 JUMPI POP DUP2 DUP2 EXP PUSH2 0x471 JUMP JUMPDEST PUSH2 0x1173 PUSH0 NOT DUP5 DUP5 PUSH2 0x10AB JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH2 0x1186 JUMPI PUSH2 0x1186 PUSH2 0x1084 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1014 DUP4 DUP4 PUSH2 0x10EE JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x471 JUMPI PUSH2 0x471 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2B SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x40 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xDB6 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1234 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1253 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1240 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1274 JUMPI PUSH2 0x1274 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x1288 DUP2 PUSH2 0x1282 DUP5 SLOAD PUSH2 0x104C JUMP JUMPDEST DUP5 PUSH2 0x120F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x12BA JUMPI PUSH0 DUP4 ISZERO PUSH2 0x12A3 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1253 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x12E9 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x12C9 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1306 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC5 PUSH13 0x34BE32F388F1D31D5BCE4F2140 0xD0 BASEFEE DUP16 0xDC 0xCE 0xB2 PUSH6 0xD21F9089259C 0xAE LT SLOAD PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "37870:1251:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;38281:9;:7;:9::i;:::-;37870:1251;;;;;23476:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25762:197;;;;;;;;;;-1:-1:-1;25762:197:0;;;;;:::i;:::-;;:::i;:::-;;;1085:14:1;;1078:22;1060:41;;1048:2;1033:18;25762:197:0;920:187:1;24573:106:0;;;;;;;;;;-1:-1:-1;24660:12:0;;24573:106;;;1258:25:1;;;1246:2;1231:18;24573:106:0;1112:177:1;26521:256:0;;;;;;;;;;-1:-1:-1;26521:256:0;;;;;:::i;:::-;;:::i;38905:214::-;;;;;;;;;;-1:-1:-1;38905:214:0;;;;;:::i;:::-;;:::i;24422:91::-;;;;;;;;;;-1:-1:-1;24422:91:0;;24504:2;2046:36:1;;2034:2;2019:18;24422:91:0;1904:184:1;27172:234:0;;;;;;;;;;-1:-1:-1;27172:234:0;;;;;:::i;:::-;;:::i;38439:246::-;;;;;;;;;;;;;:::i;38691:99::-;;;;;;;;;;-1:-1:-1;38691:99:0;;;;;:::i;:::-;;:::i;24737:125::-;;;;;;;;;;-1:-1:-1;24737:125:0;;;;;:::i;:::-;-1:-1:-1;;;;;24837:18:0;24811:7;24837:18;;;:9;:18;;;;;;;24737:125;36480:101;;;;;;;;;;;;;:::i;38040:198::-;;;;;;;;;;;;;:::i;35857:85::-;;;;;;;;;;-1:-1:-1;35929:6:0;;35857:85;;-1:-1:-1;;;;;35929:6:0;;;2430:51:1;;2418:2;2403:18;35857:85:0;2284:203:1;23687:102:0;;;;;;;;;;;;;:::i;38796:103::-;;;;;;;;;;-1:-1:-1;38796:103:0;;;;;:::i;:::-;;:::i;27893:427::-;;;;;;;;;;-1:-1:-1;27893:427:0;;;;;:::i;:::-;;:::i;25058:189::-;;;;;;;;;;-1:-1:-1;25058:189:0;;;;;:::i;:::-;;:::i;38303:130::-;;;:::i;25305:149::-;;;;;;;;;;-1:-1:-1;25305:149:0;;;;;:::i;:::-;;:::i;36730:198::-;;;;;;;;;;-1:-1:-1;36730:198:0;;;;;:::i;:::-;;:::i;38303:130::-;38347:34;38359:10;38371:9;38347:11;:34::i;:::-;38396:30;;38416:9;1258:25:1;;38404:10:0;;38396:30;;1246:2:1;1231:18;38396:30:0;;;;;;;38303:130::o;23476:98::-;23530:13;23562:5;23555:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23476:98;:::o;25762:197::-;25845:4;20588:10;25899:32;20588:10;25915:7;25924:6;25899:8;:32::i;:::-;25948:4;25941:11;;;25762:197;;;;;:::o;26521:256::-;26618:4;20588:10;26674:38;26690:4;20588:10;26705:6;26674:15;:38::i;:::-;26722:27;26732:4;26738:2;26742:6;26722:9;:27::i;:::-;-1:-1:-1;26766:4:0;;26521:256;-1:-1:-1;;;;26521:256:0:o;38905:214::-;38971:10;24811:7;24837:18;;;:9;:18;;;;;;38986:3;-1:-1:-1;38961:28:0;38953:37;;;;;;39000:27;39012:10;39023:3;39000:11;:27::i;:::-;39037:33;;39045:10;;39037:33;;;;;39066:3;;39037:33;;;;39066:3;39045:10;39037:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39085:27:0;;1258:25:1;;;39096:10:0;;39085:27;;1246:2:1;1231:18;39085:27:0;;;;;;;38905:214;:::o;27172:234::-;27260:4;20588:10;27314:64;20588:10;27330:7;27367:10;27339:25;20588:10;27330:7;27339:9;:25::i;:::-;:38;;;;:::i;:::-;27314:8;:64::i;38439:246::-;35750:13;:11;:13::i;:::-;38503:21:::1;38542:10:::0;38534:53:::1;;;::::0;-1:-1:-1;;;38534:53:0;;3606:2:1;38534:53:0::1;::::0;::::1;3588:21:1::0;3645:2;3625:18;;;3618:30;3684:32;3664:18;;;3657:60;3734:18;;38534:53:0::1;;;;;;;;38691:99:::0;35750:13;:11;:13::i;:::-;38760:23:::1;38772:2;38776:6;38760:11;:23::i;:::-;38691:99:::0;;:::o;36480:101::-;35750:13;:11;:13::i;:::-;36544:30:::1;36571:1;36544:18;:30::i;:::-;36480:101::o:0;38040:198::-;16279:19;16302:13;;;;;;16301:14;;16347:34;;;;-1:-1:-1;16365:12:0;;16380:1;16365:12;;;;:16;16347:34;16346:108;;;-1:-1:-1;16426:4:0;5337:19;:23;;;16387:66;;-1:-1:-1;16436:12:0;;;;;:17;16387:66;16325:201;;;;-1:-1:-1;;;16325:201:0;;3965:2:1;16325:201:0;;;3947:21:1;4004:2;3984:18;;;3977:30;4043:34;4023:18;;;4016:62;-1:-1:-1;;;4094:18:1;;;4087:44;4148:19;;16325:201:0;3763:410:1;16325:201:0;16536:12;:16;;-1:-1:-1;;16536:16:0;16551:1;16536:16;;;16562:65;;;;16596:13;:20;;-1:-1:-1;;16596:20:0;;;;;16562:65;38091:37:::1;;;;;;;;;;;;;;-1:-1:-1::0;;;38091:37:0::1;;::::0;::::1;;;;;;;;;;;;;-1:-1:-1::0;;;38091:37:0::1;;::::0;:12:::1;:37::i;:::-;38138:16;:14;:16::i;:::-;38165:66;38177:10;38204:25;24504:2:::0;38204::::1;:25;:::i;:::-;38189:41;::::0;:11:::1;:41;:::i;:::-;38165:11;:66::i;:::-;16651:14:::0;16647:99;;;16697:5;16681:21;;-1:-1:-1;;16681:21:0;;;16721:14;;-1:-1:-1;2046:36:1;;16721:14:0;;2034:2:1;2019:18;16721:14:0;;;;;;;16647:99;16269:483;38040:198::o;23687:102::-;23743:13;23775:7;23768:14;;;;;:::i;38796:103::-;35750:13;:11;:13::i;:::-;38867:25:::1;38879:4;38885:6;38867:11;:25::i;27893:427::-:0;27986:4;20588:10;27986:4;28067:25;20588:10;28084:7;28067:9;:25::i;:::-;28040:52;;28130:15;28110:16;:35;;28102:85;;;;-1:-1:-1;;;28102:85:0;;6175:2:1;28102:85:0;;;6157:21:1;6214:2;6194:18;;;6187:30;6253:34;6233:18;;;6226:62;-1:-1:-1;;;6304:18:1;;;6297:35;6349:19;;28102:85:0;5973:401:1;28102:85:0;28221:60;28230:5;28237:7;28265:15;28246:16;:34;28221:8;:60::i;25058:189::-;25137:4;20588:10;25191:28;20588:10;25208:2;25212:6;25191:9;:28::i;25305:149::-;-1:-1:-1;;;;;25420:18:0;;;25394:7;25420:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;25305:149::o;36730:198::-;35750:13;:11;:13::i;:::-;-1:-1:-1;;;;;36818:22:0;::::1;36810:73;;;::::0;-1:-1:-1;;;36810:73:0;;6581:2:1;36810:73:0::1;::::0;::::1;6563:21:1::0;6620:2;6600:18;;;6593:30;6659:34;6639:18;;;6632:62;-1:-1:-1;;;6710:18:1;;;6703:36;6756:19;;36810:73:0::1;6379:402:1::0;36810:73:0::1;36893:28;36912:8;36893:18;:28::i;29838:535::-:0;-1:-1:-1;;;;;29921:21:0;;29913:65;;;;-1:-1:-1;;;29913:65:0;;6988:2:1;29913:65:0;;;6970:21:1;7027:2;7007:18;;;7000:30;7066:33;7046:18;;;7039:61;7117:18;;29913:65:0;6786:355:1;29913:65:0;30065:6;30049:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;30217:18:0;;;;;;:9;:18;;;;;;;;:28;;;;;;30270:37;1258:25:1;;;30270:37:0;;1231:18:1;30270:37:0;;;;;;;38691:99;;:::o;31775:340::-;-1:-1:-1;;;;;31876:19:0;;31868:68;;;;-1:-1:-1;;;31868:68:0;;7348:2:1;31868:68:0;;;7330:21:1;7387:2;7367:18;;;7360:30;7426:34;7406:18;;;7399:62;-1:-1:-1;;;7477:18:1;;;7470:34;7521:19;;31868:68:0;7146:400:1;31868:68:0;-1:-1:-1;;;;;31954:21:0;;31946:68;;;;-1:-1:-1;;;31946:68:0;;7753:2:1;31946:68:0;;;7735:21:1;7792:2;7772:18;;;7765:30;7831:34;7811:18;;;7804:62;-1:-1:-1;;;7882:18:1;;;7875:32;7924:19;;31946:68:0;7551:398:1;31946:68:0;-1:-1:-1;;;;;32025:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;32076:32;;1258:25:1;;;32076:32:0;;1231:18:1;32076:32:0;;;;;;;;31775:340;;;:::o;32396:411::-;32496:24;32523:25;32533:5;32540:7;32523:9;:25::i;:::-;32496:52;;-1:-1:-1;;32562:16:0;:37;32558:243;;32643:6;32623:16;:26;;32615:68;;;;-1:-1:-1;;;32615:68:0;;8156:2:1;32615:68:0;;;8138:21:1;8195:2;8175:18;;;8168:30;8234:31;8214:18;;;8207:59;8283:18;;32615:68:0;7954:353:1;32615:68:0;32725:51;32734:5;32741:7;32769:6;32750:16;:25;32725:8;:51::i;:::-;32486:321;32396:411;;;:::o;28774:788::-;-1:-1:-1;;;;;28870:18:0;;28862:68;;;;-1:-1:-1;;;28862:68:0;;8514:2:1;28862:68:0;;;8496:21:1;8553:2;8533:18;;;8526:30;8592:34;8572:18;;;8565:62;-1:-1:-1;;;8643:18:1;;;8636:35;8688:19;;28862:68:0;8312:401:1;28862:68:0;-1:-1:-1;;;;;28948:16:0;;28940:64;;;;-1:-1:-1;;;28940:64:0;;8920:2:1;28940:64:0;;;8902:21:1;8959:2;8939:18;;;8932:30;8998:34;8978:18;;;8971:62;-1:-1:-1;;;9049:18:1;;;9042:33;9092:19;;28940:64:0;8718:399:1;28940:64:0;-1:-1:-1;;;;;29086:15:0;;29064:19;29086:15;;;:9;:15;;;;;;29119:21;;;;29111:72;;;;-1:-1:-1;;;29111:72:0;;9324:2:1;29111:72:0;;;9306:21:1;9363:2;9343:18;;;9336:30;9402:34;9382:18;;;9375:62;-1:-1:-1;;;9453:18:1;;;9446:36;9499:19;;29111:72:0;9122:402:1;29111:72:0;-1:-1:-1;;;;;29217:15:0;;;;;;;:9;:15;;;;;;29235:20;;;29217:38;;29432:13;;;;;;;;;;:23;;;;;;29481:26;;;;;;29249:6;1258:25:1;;1246:2;1231:18;;1112:177;29481:26:0;;;;;;;;29518:37;30693:659;;-1:-1:-1;;;;;30776:21:0;;30768:67;;;;-1:-1:-1;;;30768:67:0;;9731:2:1;30768:67:0;;;9713:21:1;9770:2;9750:18;;;9743:30;9809:34;9789:18;;;9782:62;-1:-1:-1;;;9860:18:1;;;9853:31;9901:19;;30768:67:0;9529:397:1;30768:67:0;-1:-1:-1;;;;;30931:18:0;;30906:22;30931:18;;;:9;:18;;;;;;30967:24;;;;30959:71;;;;-1:-1:-1;;;30959:71:0;;10133:2:1;30959:71:0;;;10115:21:1;10172:2;10152:18;;;10145:30;10211:34;10191:18;;;10184:62;-1:-1:-1;;;10262:18:1;;;10255:32;10304:19;;30959:71:0;9931:398:1;30959:71:0;-1:-1:-1;;;;;31064:18:0;;;;;;:9;:18;;;;;;;;31085:23;;;31064:44;;31201:12;:22;;;;;;;31249:37;1258:25:1;;;31064:18:0;;;31249:37;;1231:18:1;31249:37:0;1112:177:1;31297:48:0;30758:594;30693:659;;:::o;36015:130::-;35929:6;;-1:-1:-1;;;;;35929:6:0;20588:10;36078:23;36070:68;;;;-1:-1:-1;;;36070:68:0;;10536:2:1;36070:68:0;;;10518:21:1;;;10555:18;;;10548:30;10614:34;10594:18;;;10587:62;10666:18;;36070:68:0;10334:356:1;37082:187:0;37174:6;;;-1:-1:-1;;;;;37190:17:0;;;-1:-1:-1;;;;;;37190:17:0;;;;;;;37222:40;;37174:6;;;37190:17;37174:6;;37222:40;;37155:16;;37222:40;37145:124;37082:187;:::o;23099:147::-;18374:13;;;;;;;18366:69;;;;-1:-1:-1;;;18366:69:0;;;;;;;:::i;:::-;23201:38:::1;23224:5;23231:7;23201:22;:38::i;35419:95::-:0;18374:13;;;;;;;18366:69;;;;-1:-1:-1;;;18366:69:0;;;;;;;:::i;:::-;35481:26:::1;:24;:26::i;23252:159::-:0;18374:13;;;;;;;18366:69;;;;-1:-1:-1;;;18366:69:0;;;;;;;:::i;:::-;23364:5:::1;:13;23372:5:::0;23364;:13:::1;:::i;:::-;-1:-1:-1::0;23387:7:0::1;:17;23397:7:::0;23387;:17:::1;:::i;35520:111::-:0;18374:13;;;;;;;18366:69;;;;-1:-1:-1;;;18366:69:0;;;;;;;:::i;:::-;35592:32:::1;20588:10:::0;35592:18:::1;:32::i;14:418:1:-:0;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:1;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:1:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:1;1619:18;;;;1606:32;;1294:374::o;1673:226::-;1732:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:52;;;1801:1;1798;1791:12;1753:52;-1:-1:-1;1846:23:1;;1673:226;-1:-1:-1;1673:226:1:o;2093:186::-;2152:6;2205:2;2193:9;2184:7;2180:23;2176:32;2173:52;;;2221:1;2218;2211:12;2173:52;2244:29;2263:9;2244:29;:::i;:::-;2234:39;2093:186;-1:-1:-1;;;2093:186:1:o;2492:260::-;2560:6;2568;2621:2;2609:9;2600:7;2596:23;2592:32;2589:52;;;2637:1;2634;2627:12;2589:52;2660:29;2679:9;2660:29;:::i;:::-;2650:39;;2708:38;2742:2;2731:9;2727:18;2708:38;:::i;:::-;2698:48;;2492:260;;;;;:::o;2757:380::-;2836:1;2832:12;;;;2879;;;2900:61;;2954:4;2946:6;2942:17;2932:27;;2900:61;3007:2;2999:6;2996:14;2976:18;2973:38;2970:161;;3053:10;3048:3;3044:20;3041:1;3034:31;3088:4;3085:1;3078:15;3116:4;3113:1;3106:15;2970:161;;2757:380;;;:::o;3142:127::-;3203:10;3198:3;3194:20;3191:1;3184:31;3234:4;3231:1;3224:15;3258:4;3255:1;3248:15;3274:125;3339:9;;;3360:10;;;3357:36;;;3373:18;;:::i;4178:375::-;4266:1;4284:5;4298:249;4319:1;4309:8;4306:15;4298:249;;;4369:4;4364:3;4360:14;4354:4;4351:24;4348:50;;;4378:18;;:::i;:::-;4428:1;4418:8;4414:16;4411:49;;;4442:16;;;;4411:49;4525:1;4521:16;;;;;4481:15;;4298:249;;;4178:375;;;;;;:::o;4558:902::-;4607:5;4637:8;4627:80;;-1:-1:-1;4678:1:1;4692:5;;4627:80;4726:4;4716:76;;-1:-1:-1;4763:1:1;4777:5;;4716:76;4808:4;4826:1;4821:59;;;;4894:1;4889:174;;;;4801:262;;4821:59;4851:1;4842:10;;4865:5;;;4889:174;4926:3;4916:8;4913:17;4910:43;;;4933:18;;:::i;:::-;-1:-1:-1;;4989:1:1;4975:16;;5048:5;;4801:262;;5147:2;5137:8;5134:16;5128:3;5122:4;5119:13;5115:36;5109:2;5099:8;5096:16;5091:2;5085:4;5082:12;5078:35;5075:77;5072:203;;;-1:-1:-1;5184:19:1;;;5260:5;;5072:203;5307:42;-1:-1:-1;;5332:8:1;5326:4;5307:42;:::i;:::-;5385:6;5381:1;5377:6;5373:19;5364:7;5361:32;5358:58;;;5396:18;;:::i;:::-;5434:20;;4558:902;-1:-1:-1;;;4558:902:1:o;5465:131::-;5525:5;5554:36;5581:8;5575:4;5554:36;:::i;5601:168::-;5674:9;;;5705;;5722:15;;;5716:22;;5702:37;5692:71;;5743:18;;:::i;10695:407::-;10897:2;10879:21;;;10936:2;10916:18;;;10909:30;10975:34;10970:2;10955:18;;10948:62;-1:-1:-1;;;11041:2:1;11026:18;;11019:41;11092:3;11077:19;;10695:407::o;11107:127::-;11168:10;11163:3;11159:20;11156:1;11149:31;11199:4;11196:1;11189:15;11223:4;11220:1;11213:15;11365:518;11467:2;11462:3;11459:11;11456:421;;;11503:5;11500:1;11493:16;11547:4;11544:1;11534:18;11617:2;11605:10;11601:19;11598:1;11594:27;11588:4;11584:38;11653:4;11641:10;11638:20;11635:47;;;-1:-1:-1;11676:4:1;11635:47;11731:2;11726:3;11722:12;11719:1;11715:20;11709:4;11705:31;11695:41;;11786:81;11804:2;11797:5;11794:13;11786:81;;;11863:1;11849:16;;11830:1;11819:13;11786:81;;;11790:3;;11365:518;;;:::o;12059:1299::-;12185:3;12179:10;12212:18;12204:6;12201:30;12198:56;;;12234:18;;:::i;:::-;12263:97;12353:6;12313:38;12345:4;12339:11;12313:38;:::i;:::-;12307:4;12263:97;:::i;:::-;12409:4;12440:2;12429:14;;12457:1;12452:649;;;;13145:1;13162:6;13159:89;;;-1:-1:-1;13214:19:1;;;13208:26;13159:89;-1:-1:-1;;12016:1:1;12012:11;;;12008:24;12004:29;11994:40;12040:1;12036:11;;;11991:57;13261:81;;12422:930;;12452:649;11312:1;11305:14;;;11349:4;11336:18;;-1:-1:-1;;12488:20:1;;;12606:222;12620:7;12617:1;12614:14;12606:222;;;12702:19;;;12696:26;12681:42;;12809:4;12794:20;;;;12762:1;12750:14;;;;12636:12;12606:222;;;12610:3;12856:6;12847:7;12844:19;12841:201;;;12917:19;;;12911:26;-1:-1:-1;;13000:1:1;12996:14;;;13012:3;12992:24;12988:37;12984:42;12969:58;12954:74;;12841:201;-1:-1:-1;;;;13088:1:1;13072:14;;;13068:22;13055:36;;-1:-1:-1;12059:1299:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "987800",
								"executionCost": "1025",
								"totalCost": "988825"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24647",
								"balanceOf(address)": "2645",
								"burn(address,uint256)": "53135",
								"decimals()": "199",
								"decreaseAllowance(address,uint256)": "26967",
								"deposit()": "52092",
								"increaseAllowance(address,uint256)": "infinite",
								"initialize()": "infinite",
								"mint(address,uint256)": "53056",
								"name()": "infinite",
								"owner()": "2367",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "51097",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28443",
								"withdraw()": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 37870,
									"end": 39121,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 37870,
									"end": 39121,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039c56c34be32f388f1d31d5bce4f2140d0488fdcceb265d21f9089259cae105464736f6c634300081e0033",
									".code": [
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "D0E30DB0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "8129FC1C"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "3CCFD60B"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38281,
											"end": 38290,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38281,
											"end": 38288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 38281,
											"end": 38290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38281,
											"end": 38290,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38281,
											"end": 38290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37870,
											"end": 39121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23476,
											"end": 23574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 23476,
											"end": 23574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25762,
											"end": 25959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25762,
											"end": 25959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24660,
											"end": 24672,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24660,
											"end": 24672,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24573,
											"end": 24679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 26521,
											"end": 26777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26521,
											"end": 26777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 38905,
											"end": 39119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 38905,
											"end": 39119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24504,
											"end": 24506,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24422,
											"end": 24513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1904,
											"end": 2088,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 27172,
											"end": 27406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 27172,
											"end": 27406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 38439,
											"end": 38685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38691,
											"end": 38790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38691,
											"end": 38790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 24737,
											"end": 24862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24811,
											"end": 24818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24846,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24737,
											"end": 24862,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36480,
											"end": 36581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 38040,
											"end": 38238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 35929,
											"end": 35935,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 35929,
											"end": 35935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35929,
											"end": 35935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35929,
											"end": 35935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35929,
											"end": 35935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2418,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2403,
											"end": 2421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35857,
											"end": 35942,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2284,
											"end": 2487,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23687,
											"end": 23789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 38796,
											"end": 38899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 38796,
											"end": 38899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 27893,
											"end": 28320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 27893,
											"end": 28320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 25058,
											"end": 25247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 25058,
											"end": 25247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38303,
											"end": 38433,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38303,
											"end": 38433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38303,
											"end": 38433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 38303,
											"end": 38433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 38303,
											"end": 38433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 25305,
											"end": 25454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 25305,
											"end": 25454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 36730,
											"end": 36928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 36730,
											"end": 36928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38303,
											"end": 38433,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 38303,
											"end": 38433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 38359,
											"end": 38369,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38371,
											"end": 38380,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 38347,
											"end": 38381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38347,
											"end": 38381,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 38347,
											"end": 38381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38416,
											"end": 38425,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 38404,
											"end": 38414,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38404,
											"end": 38414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "PUSH",
											"source": 0,
											"value": "E1FFFCC4923D04B559F4D29A8BFC6CDA04EB5B0D3C460751C2402C5C5CC9109C"
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38396,
											"end": 38426,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 38303,
											"end": 38433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23530,
											"end": 23543,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23562,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 23555,
											"end": 23567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 23555,
											"end": 23567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23555,
											"end": 23567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23476,
											"end": 23574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25845,
											"end": 25849,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25899,
											"end": 25931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25915,
											"end": 25922,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25924,
											"end": 25930,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25899,
											"end": 25907,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 25899,
											"end": 25931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25899,
											"end": 25931,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 25899,
											"end": 25931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25948,
											"end": 25952,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25941,
											"end": 25952,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 25952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25941,
											"end": 25952,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25762,
											"end": 25959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26618,
											"end": 26622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26690,
											"end": 26694,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26705,
											"end": 26711,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 26674,
											"end": 26712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26674,
											"end": 26712,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 26674,
											"end": 26712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 26732,
											"end": 26736,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26738,
											"end": 26740,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26742,
											"end": 26748,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 26722,
											"end": 26749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26722,
											"end": 26749,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 26722,
											"end": 26749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26766,
											"end": 26770,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26766,
											"end": 26770,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 26521,
											"end": 26777,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26521,
											"end": 26777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38971,
											"end": 38981,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24811,
											"end": 24818,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24846,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 24837,
											"end": 24855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 38986,
											"end": 38989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 38961,
											"end": 38989,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 38953,
											"end": 38990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 38953,
											"end": 38990,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38953,
											"end": 38990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38953,
											"end": 38990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 38953,
											"end": 38990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38953,
											"end": 38990,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 38953,
											"end": 38990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39012,
											"end": 39022,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39023,
											"end": 39026,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 39000,
											"end": 39027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39000,
											"end": 39027,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 39000,
											"end": 39027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39055,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39055,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39066,
											"end": 39069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39066,
											"end": 39069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39066,
											"end": 39069,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39045,
											"end": 39055,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39037,
											"end": 39070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 39096,
											"end": 39106,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 39096,
											"end": 39106,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "PUSH",
											"source": 0,
											"value": "7FCF532C15F0A6DB0BD6D0E038BEA71D30D808C7D98CB3BF7268A95BF5081B65"
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39085,
											"end": 39112,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38905,
											"end": 39119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 27172,
											"end": 27406,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27260,
											"end": 27264,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27330,
											"end": 27337,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27367,
											"end": 27377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27330,
											"end": 27337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 27339,
											"end": 27364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27364,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 27339,
											"end": 27364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 27339,
											"end": 27377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27339,
											"end": 27377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 27314,
											"end": 27378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 38439,
											"end": 38685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 35750,
											"end": 35761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35750,
											"end": 35763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38503,
											"end": 38524,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 38542,
											"end": 38552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38534,
											"end": 38587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38534,
											"end": 38587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3608,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38534,
											"end": 38587,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3588,
											"end": 3609,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3645,
											"end": 3647,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3625,
											"end": 3643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3618,
											"end": 3648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3684,
											"end": 3716,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F7420656E6F7567682062616C616E636520746F2077697468647261770000"
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3664,
											"end": 3682,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3734,
											"end": 3752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38534,
											"end": 38587,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 35750,
											"end": 35761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35750,
											"end": 35763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38760,
											"end": 38783,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 38772,
											"end": 38774,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38776,
											"end": 38782,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38760,
											"end": 38771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 38760,
											"end": 38783,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38760,
											"end": 38783,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 38760,
											"end": 38783,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 36480,
											"end": 36581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 35750,
											"end": 35761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35750,
											"end": 35763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36574,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 36571,
											"end": 36572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36544,
											"end": 36562,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 36544,
											"end": 36574,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36544,
											"end": 36574,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 36544,
											"end": 36574,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36480,
											"end": 36581,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 38040,
											"end": 38238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16279,
											"end": 16298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16302,
											"end": 16315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16302,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16302,
											"end": 16315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16302,
											"end": 16315,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 16302,
											"end": 16315,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16302,
											"end": 16315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16301,
											"end": 16315,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16301,
											"end": 16315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16347,
											"end": 16381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16347,
											"end": 16381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16347,
											"end": 16381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16347,
											"end": 16381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16365,
											"end": 16377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16365,
											"end": 16377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16380,
											"end": 16381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16365,
											"end": 16377,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16365,
											"end": 16377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16365,
											"end": 16377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16365,
											"end": 16377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16365,
											"end": 16381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16347,
											"end": 16381,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 16347,
											"end": 16381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16346,
											"end": 16454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16346,
											"end": 16454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16426,
											"end": 16430,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5356,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5337,
											"end": 5360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16387,
											"end": 16453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16387,
											"end": 16453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16436,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16436,
											"end": 16448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16436,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 16436,
											"end": 16448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16436,
											"end": 16448,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16436,
											"end": 16453,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16387,
											"end": 16453,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 16387,
											"end": 16453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3965,
											"end": 3967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3968,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3984,
											"end": 4002,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 4007,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4043,
											"end": 4077,
											"name": "PUSH",
											"source": 1,
											"value": "496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "191E481A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4094,
											"end": 4112,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4094,
											"end": 4112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4094,
											"end": 4112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4087,
											"end": 4131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4167,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 4148,
											"end": 4167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3763,
											"end": 4173,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 16325,
											"end": 16526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16536,
											"end": 16552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16536,
											"end": 16552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16551,
											"end": 16552,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16536,
											"end": 16552,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16536,
											"end": 16552,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16627,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16627,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16562,
											"end": 16627,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16596,
											"end": 16609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16596,
											"end": 16616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16596,
											"end": 16616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16596,
											"end": 16616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16596,
											"end": 16616,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 16596,
											"end": 16616,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 16596,
											"end": 16616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16596,
											"end": 16616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16627,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 16562,
											"end": 16627,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2BB930B83832B21022BA3432B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "99"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AE8AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 38091,
											"end": 38128,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 38091,
											"end": 38128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38138,
											"end": 38154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 38138,
											"end": 38152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 38138,
											"end": 38154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38138,
											"end": 38154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 38138,
											"end": 38154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 38177,
											"end": 38187,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 38204,
											"end": 38229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 24504,
											"end": 24506,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 38204,
											"end": 38206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 38204,
											"end": 38229,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 38204,
											"end": 38229,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38204,
											"end": 38229,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 38204,
											"end": 38229,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38189,
											"end": 38230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 38189,
											"end": 38230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38189,
											"end": 38200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2540BE400"
										},
										{
											"begin": 38189,
											"end": 38230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 38189,
											"end": 38230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38189,
											"end": 38230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 38189,
											"end": 38230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 38165,
											"end": 38231,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38165,
											"end": 38231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 38165,
											"end": 38231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16651,
											"end": 16665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16647,
											"end": 16746,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16647,
											"end": 16746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 16647,
											"end": 16746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16697,
											"end": 16702,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16681,
											"end": 16702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16681,
											"end": 16702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16681,
											"end": 16702,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "PUSH",
											"source": 0,
											"value": "7F26B83FF96E1F2B6A682F133852F6798A09C465DA95921460CEFB3847402498"
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16721,
											"end": 16735,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 16647,
											"end": 16746,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 16647,
											"end": 16746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16269,
											"end": 16752,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38040,
											"end": 38238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 23687,
											"end": 23789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23743,
											"end": 23756,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23775,
											"end": 23782,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23768,
											"end": 23782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 23768,
											"end": 23782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 38796,
											"end": 38899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35750,
											"end": 35761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35750,
											"end": 35763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38867,
											"end": 38892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 38879,
											"end": 38883,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38885,
											"end": 38891,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 38867,
											"end": 38878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 38867,
											"end": 38892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 27893,
											"end": 28320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27986,
											"end": 27990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27986,
											"end": 27990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28067,
											"end": 28092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28084,
											"end": 28091,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28067,
											"end": 28076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28067,
											"end": 28092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28067,
											"end": 28092,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 28067,
											"end": 28092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28040,
											"end": 28092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28130,
											"end": 28145,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28110,
											"end": 28126,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28110,
											"end": 28145,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28110,
											"end": 28145,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6175,
											"end": 6177,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6157,
											"end": 6178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6216,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 6194,
											"end": 6212,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6194,
											"end": 6212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6194,
											"end": 6212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6217,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6226,
											"end": 6288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6297,
											"end": 6332,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6349,
											"end": 6368,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6349,
											"end": 6368,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5973,
											"end": 6374,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 28102,
											"end": 28187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28221,
											"end": 28281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 28230,
											"end": 28235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28237,
											"end": 28244,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28265,
											"end": 28280,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 28246,
											"end": 28262,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 28246,
											"end": 28280,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28221,
											"end": 28229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 28221,
											"end": 28281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 25058,
											"end": 25247,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25137,
											"end": 25141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25191,
											"end": 25219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25208,
											"end": 25210,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25212,
											"end": 25218,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25191,
											"end": 25200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 25191,
											"end": 25219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 25305,
											"end": 25454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25394,
											"end": 25401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25431,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25420,
											"end": 25447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25305,
											"end": 25454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 36730,
											"end": 36928,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 35750,
											"end": 35761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35750,
											"end": 35763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 35750,
											"end": 35763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36818,
											"end": 36840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36818,
											"end": 36840,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36810,
											"end": 36883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 36810,
											"end": 36883,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36810,
											"end": 36883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36810,
											"end": 36883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36810,
											"end": 36883,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36810,
											"end": 36883,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6581,
											"end": 6583,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36810,
											"end": 36883,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36810,
											"end": 36883,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36810,
											"end": 36883,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6563,
											"end": 6584,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6622,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6600,
											"end": 6618,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6593,
											"end": 6623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6659,
											"end": 6693,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6657,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6632,
											"end": 6694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6739,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6756,
											"end": 6775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36810,
											"end": 36883,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6379,
											"end": 6781,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 36810,
											"end": 36883,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 36810,
											"end": 36883,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36893,
											"end": 36921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 36912,
											"end": 36920,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36893,
											"end": 36911,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 36893,
											"end": 36921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29838,
											"end": 30373,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 29838,
											"end": 30373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29921,
											"end": 29942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29921,
											"end": 29942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6988,
											"end": 6990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7027,
											"end": 7029,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7007,
											"end": 7025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7000,
											"end": 7030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7066,
											"end": 7099,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7117,
											"end": 7135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 6786,
											"end": 7141,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 29913,
											"end": 29978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30065,
											"end": 30071,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30061,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 30049,
											"end": 30061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 30049,
											"end": 30071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30049,
											"end": 30071,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30226,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30235,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30245,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30217,
											"end": 30245,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30270,
											"end": 30307,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38691,
											"end": 38790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31876,
											"end": 31895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7348,
											"end": 7350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7330,
											"end": 7351,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7387,
											"end": 7389,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7360,
											"end": 7390,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7426,
											"end": 7460,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7406,
											"end": 7424,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7399,
											"end": 7461,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7470,
											"end": 7504,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7521,
											"end": 7540,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7521,
											"end": 7540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7146,
											"end": 7546,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 31868,
											"end": 31936,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31954,
											"end": 31975,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31954,
											"end": 31975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 7755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7735,
											"end": 7756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7792,
											"end": 7794,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7772,
											"end": 7790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7795,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7811,
											"end": 7829,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7804,
											"end": 7866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7882,
											"end": 7900,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7882,
											"end": 7900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7882,
											"end": 7900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7875,
											"end": 7907,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7943,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7924,
											"end": 7943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7551,
											"end": 7949,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 31946,
											"end": 32014,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32036,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32043,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32052,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32061,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32025,
											"end": 32061,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32076,
											"end": 32108,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31775,
											"end": 32115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32523,
											"end": 32548,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 32533,
											"end": 32538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32540,
											"end": 32547,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32523,
											"end": 32532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 32523,
											"end": 32548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32523,
											"end": 32548,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 32523,
											"end": 32548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32496,
											"end": 32548,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 32562,
											"end": 32578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32562,
											"end": 32599,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 32558,
											"end": 32801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 32558,
											"end": 32801,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32643,
											"end": 32649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32649,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 32623,
											"end": 32649,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8156,
											"end": 8158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8138,
											"end": 8159,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8193,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8265,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 8214,
											"end": 8232,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8214,
											"end": 8232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8207,
											"end": 8266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 7954,
											"end": 8307,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 32615,
											"end": 32683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32725,
											"end": 32776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 32734,
											"end": 32739,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32741,
											"end": 32748,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32769,
											"end": 32775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32766,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32750,
											"end": 32775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32725,
											"end": 32733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 32725,
											"end": 32776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32725,
											"end": 32776,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 32725,
											"end": 32776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32486,
											"end": 32807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32396,
											"end": 32807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28774,
											"end": 29562,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 28774,
											"end": 29562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28870,
											"end": 28888,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28870,
											"end": 28888,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8514,
											"end": 8516,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8496,
											"end": 8517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8555,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8526,
											"end": 8556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8592,
											"end": 8626,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8572,
											"end": 8590,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8565,
											"end": 8627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8643,
											"end": 8661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8636,
											"end": 8671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8707,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8688,
											"end": 8707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8312,
											"end": 8713,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 28862,
											"end": 28930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28948,
											"end": 28964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28948,
											"end": 28964,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8920,
											"end": 8922,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8902,
											"end": 8923,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8959,
											"end": 8961,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8932,
											"end": 8962,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8998,
											"end": 9032,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 8978,
											"end": 8996,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8978,
											"end": 8996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8978,
											"end": 8996,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8971,
											"end": 9033,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9049,
											"end": 9067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9075,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9092,
											"end": 9111,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9092,
											"end": 9111,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 8718,
											"end": 9117,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 28940,
											"end": 29004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29064,
											"end": 29083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29095,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29086,
											"end": 29101,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29119,
											"end": 29140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29119,
											"end": 29140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29119,
											"end": 29140,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29119,
											"end": 29140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9324,
											"end": 9326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9306,
											"end": 9327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9365,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 9343,
											"end": 9361,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9343,
											"end": 9361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9343,
											"end": 9361,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9336,
											"end": 9366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9402,
											"end": 9436,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9382,
											"end": 9400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9437,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9453,
											"end": 9471,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9453,
											"end": 9471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9453,
											"end": 9471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9446,
											"end": 9482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9518,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9499,
											"end": 9518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9122,
											"end": 9524,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 29111,
											"end": 29183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29226,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29232,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29235,
											"end": 29255,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29235,
											"end": 29255,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29235,
											"end": 29255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29217,
											"end": 29255,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29445,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29432,
											"end": 29455,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29249,
											"end": 29255,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29481,
											"end": 29507,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29518,
											"end": 29555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 30693,
											"end": 31352,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30693,
											"end": 31352,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 30693,
											"end": 31352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30776,
											"end": 30797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30776,
											"end": 30797,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9731,
											"end": 9733,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9713,
											"end": 9734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9770,
											"end": 9772,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 9750,
											"end": 9768,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9750,
											"end": 9768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9750,
											"end": 9768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9743,
											"end": 9773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9843,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 9789,
											"end": 9807,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9789,
											"end": 9807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9789,
											"end": 9807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9782,
											"end": 9844,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9860,
											"end": 9878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9853,
											"end": 9884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9901,
											"end": 9920,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9901,
											"end": 9920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9529,
											"end": 9926,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 30768,
											"end": 30835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30906,
											"end": 30928,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30940,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30931,
											"end": 30949,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30967,
											"end": 30991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30967,
											"end": 30991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30967,
											"end": 30991,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 30967,
											"end": 30991,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10133,
											"end": 10135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10115,
											"end": 10136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10172,
											"end": 10174,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10152,
											"end": 10170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10145,
											"end": 10175,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10211,
											"end": 10245,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10184,
											"end": 10246,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10262,
											"end": 10280,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10262,
											"end": 10280,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10255,
											"end": 10287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10304,
											"end": 10323,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10304,
											"end": 10323,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 9931,
											"end": 10329,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 30959,
											"end": 31030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31073,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31085,
											"end": 31108,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31085,
											"end": 31108,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 31085,
											"end": 31108,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31108,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31201,
											"end": 31213,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 31201,
											"end": 31223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31201,
											"end": 31223,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31201,
											"end": 31223,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31201,
											"end": 31223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31201,
											"end": 31223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31201,
											"end": 31223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31201,
											"end": 31223,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31249,
											"end": 31286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31064,
											"end": 31082,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31249,
											"end": 31286,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 31249,
											"end": 31286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31249,
											"end": 31286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31297,
											"end": 31345,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 31297,
											"end": 31345,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30758,
											"end": 31352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30693,
											"end": 31352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30693,
											"end": 31352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30693,
											"end": 31352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36015,
											"end": 36145,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 36015,
											"end": 36145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35929,
											"end": 35935,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 35929,
											"end": 35935,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35929,
											"end": 35935,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36078,
											"end": 36101,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10536,
											"end": 10538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10518,
											"end": 10539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10518,
											"end": 10539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10518,
											"end": 10539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10573,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10555,
											"end": 10573,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10555,
											"end": 10573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10548,
											"end": 10578,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10614,
											"end": 10648,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10594,
											"end": 10612,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10594,
											"end": 10612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10594,
											"end": 10612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10649,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10666,
											"end": 10684,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10666,
											"end": 10684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 36070,
											"end": 36138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 10334,
											"end": 10690,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37082,
											"end": 37269,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 37082,
											"end": 37269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37174,
											"end": 37180,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 37174,
											"end": 37180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37174,
											"end": 37180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37222,
											"end": 37262,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37222,
											"end": 37262,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37174,
											"end": 37180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37174,
											"end": 37180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37174,
											"end": 37180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37190,
											"end": 37207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37174,
											"end": 37180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37174,
											"end": 37180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37222,
											"end": 37262,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 37222,
											"end": 37262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37155,
											"end": 37171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37155,
											"end": 37171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37222,
											"end": 37262,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37145,
											"end": 37269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37082,
											"end": 37269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37082,
											"end": 37269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23099,
											"end": 23246,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 23099,
											"end": 23246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 18366,
											"end": 18435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23201,
											"end": 23239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 23224,
											"end": 23229,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23231,
											"end": 23238,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23201,
											"end": 23223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 23201,
											"end": 23239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35419,
											"end": 35514,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 35419,
											"end": 35514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 18366,
											"end": 18435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35481,
											"end": 35507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 35481,
											"end": 35505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 35481,
											"end": 35507,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23252,
											"end": 23411,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 23252,
											"end": 23411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 18366,
											"end": 18435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23369,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23364,
											"end": 23377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 23372,
											"end": 23377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23377,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 23364,
											"end": 23377,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23364,
											"end": 23377,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 23364,
											"end": 23377,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23387,
											"end": 23394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23387,
											"end": 23404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 23397,
											"end": 23404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23387,
											"end": 23394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23387,
											"end": 23404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 23387,
											"end": 23404,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35520,
											"end": 35631,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 35520,
											"end": 35631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18374,
											"end": 18387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 18366,
											"end": 18435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 18366,
											"end": 18435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35592,
											"end": 35624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 20588,
											"end": 20598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35592,
											"end": 35610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 35592,
											"end": 35624,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1899,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1673,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1732,
											"end": 1738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1785,
											"end": 1787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1783,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1788,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 1802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1791,
											"end": 1803,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1753,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1846,
											"end": 1869,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1673,
											"end": 1899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2205,
											"end": 2207,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2191,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2203,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2208,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2218,
											"end": 2219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2211,
											"end": 2223,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 2173,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 2263,
											"end": 2272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 2244,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 2244,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2273,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2279,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2093,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2607,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2596,
											"end": 2619,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2624,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 2589,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2679,
											"end": 2688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 2660,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2742,
											"end": 2744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2731,
											"end": 2740,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 2708,
											"end": 2746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 2708,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 2946,
											"end": 2952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2942,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2932,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 2900,
											"end": 2961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3009,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3010,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2976,
											"end": 2994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2973,
											"end": 3011,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3088,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3085,
											"end": 3086,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3078,
											"end": 3093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3120,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 3121,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2757,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3269,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 3142,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3203,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 3198,
											"end": 3201,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 3194,
											"end": 3214,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3184,
											"end": 3215,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3234,
											"end": 3238,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3231,
											"end": 3232,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3224,
											"end": 3239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3255,
											"end": 3256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3263,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3399,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 3274,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3339,
											"end": 3348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3370,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3360,
											"end": 3370,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3357,
											"end": 3393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3373,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 3373,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 3373,
											"end": 3391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4553,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 4178,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4267,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4284,
											"end": 4289,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4547,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 4298,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4319,
											"end": 4320,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4309,
											"end": 4317,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4321,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4547,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4298,
											"end": 4547,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4369,
											"end": 4373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4364,
											"end": 4367,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4374,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4354,
											"end": 4358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4375,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4398,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4348,
											"end": 4398,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 4378,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4378,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4429,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4418,
											"end": 4426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4414,
											"end": 4430,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4460,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 4411,
											"end": 4460,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4458,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4411,
											"end": 4460,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 4411,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4525,
											"end": 4526,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 4521,
											"end": 4537,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4496,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 4298,
											"end": 4547,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4547,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 4298,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4553,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4553,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4553,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4178,
											"end": 4553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 5460,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4558,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4607,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4637,
											"end": 4645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4627,
											"end": 4707,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4678,
											"end": 4679,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4692,
											"end": 4697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4692,
											"end": 4697,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4707,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4627,
											"end": 4707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 4716,
											"end": 4792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4777,
											"end": 4782,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4792,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 4716,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4821,
											"end": 4880,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4880,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 4821,
											"end": 4880,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4895,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4889,
											"end": 5063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 5063,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 4889,
											"end": 5063,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5063,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4801,
											"end": 5063,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4880,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 4821,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4852,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4842,
											"end": 4852,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4842,
											"end": 4852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4865,
											"end": 4870,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4889,
											"end": 5063,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 4889,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4916,
											"end": 4924,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 4930,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4953,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4910,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 4910,
											"end": 4953,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 4933,
											"end": 4951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 4933,
											"end": 4951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4989,
											"end": 4990,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4975,
											"end": 4991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 4991,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5048,
											"end": 5053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5048,
											"end": 5053,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5063,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 4801,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4801,
											"end": 5063,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5145,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5134,
											"end": 5150,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5128,
											"end": 5131,
											"name": "PUSH",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5122,
											"end": 5126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5132,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5115,
											"end": 5151,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "4E"
										},
										{
											"begin": 5099,
											"end": 5107,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5112,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5093,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 5085,
											"end": 5089,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5094,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5075,
											"end": 5152,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5275,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 5072,
											"end": 5275,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5184,
											"end": 5203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5184,
											"end": 5203,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5260,
											"end": 5265,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5275,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 5072,
											"end": 5275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5307,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5332,
											"end": 5340,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5330,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5307,
											"end": 5349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5307,
											"end": 5349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5307,
											"end": 5349,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 5307,
											"end": 5349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5377,
											"end": 5383,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5373,
											"end": 5392,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5364,
											"end": 5371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5393,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5416,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 5358,
											"end": 5416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 5396,
											"end": 5414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5396,
											"end": 5414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5396,
											"end": 5414,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 5396,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5454,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5454,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 5460,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4558,
											"end": 5460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 5465,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5581,
											"end": 5589,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5575,
											"end": 5579,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5554,
											"end": 5590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5769,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5601,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5683,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5683,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5683,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5714,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5737,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5738,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5738,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5702,
											"end": 5739,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5692,
											"end": 5763,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5743,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5743,
											"end": 5761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 11102,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 10695,
											"end": 11102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10897,
											"end": 10899,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10879,
											"end": 10900,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10879,
											"end": 10900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10879,
											"end": 10900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10936,
											"end": 10938,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 10916,
											"end": 10934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10916,
											"end": 10934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10909,
											"end": 10939,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10975,
											"end": 11009,
											"name": "PUSH",
											"source": 1,
											"value": "496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
										},
										{
											"begin": 10970,
											"end": 10972,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10955,
											"end": 10973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10955,
											"end": 10973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10948,
											"end": 11010,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E697469616C697A696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11041,
											"end": 11043,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11026,
											"end": 11044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11026,
											"end": 11044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11092,
											"end": 11095,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11077,
											"end": 11096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11077,
											"end": 11096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10695,
											"end": 11102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11234,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 11107,
											"end": 11234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11168,
											"end": 11178,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11163,
											"end": 11166,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11159,
											"end": 11179,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11156,
											"end": 11157,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11149,
											"end": 11180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11199,
											"end": 11203,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 11196,
											"end": 11197,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11189,
											"end": 11204,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11223,
											"end": 11227,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11220,
											"end": 11221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11213,
											"end": 11228,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11883,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 11365,
											"end": 11883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11467,
											"end": 11469,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11462,
											"end": 11465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11459,
											"end": 11470,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11456,
											"end": 11877,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11456,
											"end": 11877,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 11456,
											"end": 11877,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11503,
											"end": 11508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11500,
											"end": 11501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11493,
											"end": 11509,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11547,
											"end": 11551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11544,
											"end": 11545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11534,
											"end": 11552,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 11617,
											"end": 11619,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11605,
											"end": 11615,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11601,
											"end": 11620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11598,
											"end": 11599,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11594,
											"end": 11621,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 11588,
											"end": 11592,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11584,
											"end": 11622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11653,
											"end": 11657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11641,
											"end": 11651,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11638,
											"end": 11658,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11635,
											"end": 11682,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11635,
											"end": 11682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 11635,
											"end": 11682,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11676,
											"end": 11680,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11635,
											"end": 11682,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 11635,
											"end": 11682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11731,
											"end": 11733,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11726,
											"end": 11729,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11722,
											"end": 11734,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11719,
											"end": 11720,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 11715,
											"end": 11735,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 11709,
											"end": 11713,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11705,
											"end": 11736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11695,
											"end": 11736,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11695,
											"end": 11736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11867,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 11786,
											"end": 11867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11804,
											"end": 11806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11794,
											"end": 11807,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11867,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 11786,
											"end": 11867,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11849,
											"end": 11865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11849,
											"end": 11865,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 11830,
											"end": 11831,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11819,
											"end": 11832,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 11786,
											"end": 11867,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11786,
											"end": 11867,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 11786,
											"end": 11867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11790,
											"end": 11793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12059,
											"end": 13358,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 12059,
											"end": 13358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12185,
											"end": 12188,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12179,
											"end": 12189,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12212,
											"end": 12230,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12204,
											"end": 12210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12201,
											"end": 12231,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12198,
											"end": 12254,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12198,
											"end": 12254,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 12198,
											"end": 12254,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 12234,
											"end": 12252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 12234,
											"end": 12252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 12353,
											"end": 12359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 12345,
											"end": 12349,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12339,
											"end": 12350,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 12313,
											"end": 12351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12351,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 12313,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12307,
											"end": 12311,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 12263,
											"end": 12360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12360,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 12263,
											"end": 12360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12413,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12440,
											"end": 12442,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12429,
											"end": 12443,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12429,
											"end": 12443,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12457,
											"end": 12458,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12452,
											"end": 13101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12452,
											"end": 13101,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12452,
											"end": 13101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 12452,
											"end": 13101,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13145,
											"end": 13146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13162,
											"end": 13168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13159,
											"end": 13248,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13159,
											"end": 13248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 13159,
											"end": 13248,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13214,
											"end": 13233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13214,
											"end": 13233,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13214,
											"end": 13233,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13208,
											"end": 13234,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13159,
											"end": 13248,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 13159,
											"end": 13248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12016,
											"end": 12017,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12012,
											"end": 12023,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12012,
											"end": 12023,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12008,
											"end": 12032,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 12004,
											"end": 12033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 11994,
											"end": 12034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12040,
											"end": 12041,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12036,
											"end": 12047,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12036,
											"end": 12047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12036,
											"end": 12047,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11991,
											"end": 12048,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13261,
											"end": 13342,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13261,
											"end": 13342,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12422,
											"end": 13352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 12422,
											"end": 13352,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12452,
											"end": 13101,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 12452,
											"end": 13101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11312,
											"end": 11313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11305,
											"end": 11319,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11305,
											"end": 11319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11349,
											"end": 11353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12488,
											"end": 12508,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12488,
											"end": 12508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12488,
											"end": 12508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12828,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 12606,
											"end": 12828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12620,
											"end": 12627,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12617,
											"end": 12618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12628,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12828,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 12606,
											"end": 12828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12702,
											"end": 12721,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12702,
											"end": 12721,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12702,
											"end": 12721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12696,
											"end": 12722,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12681,
											"end": 12723,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12681,
											"end": 12723,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12809,
											"end": 12813,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12794,
											"end": 12814,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12814,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12814,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12814,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 12762,
											"end": 12763,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12750,
											"end": 12764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12764,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12636,
											"end": 12648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 12606,
											"end": 12828,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12606,
											"end": 12828,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 12606,
											"end": 12828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12610,
											"end": 12613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12856,
											"end": 12862,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12847,
											"end": 12854,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12844,
											"end": 12863,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 13042,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 13042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 12841,
											"end": 13042,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12917,
											"end": 12936,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12917,
											"end": 12936,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12917,
											"end": 12936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12911,
											"end": 12937,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13000,
											"end": 13001,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 12996,
											"end": 13010,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12996,
											"end": 13010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12996,
											"end": 13010,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13012,
											"end": 13015,
											"name": "PUSH",
											"source": 1,
											"value": "F8"
										},
										{
											"begin": 12992,
											"end": 13016,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12988,
											"end": 13025,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 12984,
											"end": 13026,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12969,
											"end": 13027,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12954,
											"end": 13028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12954,
											"end": 13028,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 13042,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 12841,
											"end": 13042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13088,
											"end": 13089,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13072,
											"end": 13086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13072,
											"end": 13086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13072,
											"end": 13086,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13068,
											"end": 13090,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13055,
											"end": 13091,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12059,
											"end": 13358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/tokens/WETH_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"deposit()": "d0e30db0",
							"increaseAllowance(address,uint256)": "39509351",
							"initialize()": "8129fc1c",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This is custom WETH token smart-contract, to solve the faucet issue.  Now all Testnet Eth will be sent to this smart-contract and we have a  custom method to extract back the tokens to our admin address and re-use  the tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tokens/WETH_flattened.sol\":\"WETH\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tokens/WETH_flattened.sol\":{\"keccak256\":\"0xd8229db91c1da2575074da952bbd0575f4d99c4eb7a5f7ce6a2cf346e9af8f0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://282221fc6f02901ee7e33326f1f45663b52a1ad8a8f48f4d71d6335ebf32f221\",\"dweb:/ipfs/QmRYy4ZLKMpjC1u9LiFdG9sKKddBD7r2FhYvCtRq7h7gPj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 434,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_uint8"
							},
							{
								"astId": 437,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 643,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 658,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 664,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 666,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 668,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 670,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 1250,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							},
							{
								"astId": 1259,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "_owner",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							},
							{
								"astId": 1379,
								"contract": "contracts/tokens/WETH_flattened.sol:WETH",
								"label": "__gap",
								"offset": 0,
								"slot": "102",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This is custom WETH token smart-contract, to solve the faucet issue.  Now all Testnet Eth will be sent to this smart-contract and we have a  custom method to extract back the tokens to our admin address and re-use  the tokens",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/tokens/WETH_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/tokens/WETH_flattened.sol",
					"exportedSymbols": {
						"AddressUpgradeable": [
							429
						],
						"ContextUpgradeable": [
							644
						],
						"ERC20Upgradeable": [
							1251
						],
						"IERC20MetadataUpgradeable": [
							100
						],
						"IERC20Upgradeable": [
							77
						],
						"Initializable": [
							596
						],
						"OwnableUpgradeable": [
							1380
						],
						"WETH": [
							1565
						]
					},
					"id": 1566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "187:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "212:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "293:17:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "317:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "486:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "511:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "495:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "533:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "517:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "545:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "537:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:57:0"
									},
									"src": "480:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "558:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "717:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "742:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "726:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "765:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "749:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "774:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:63:0"
									},
									"src": "711:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "795:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "875:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "912:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "911:9:0"
									},
									"scope": 77,
									"src": "866:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "927:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1013:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1022:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1063:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1063:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:9:0"
									},
									"scope": 77,
									"src": "1004:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1078:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1294:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1311:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1303:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1303:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1323:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1315:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1302:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1349:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1349:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1348:6:0"
									},
									"scope": 77,
									"src": "1285:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1361:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1639:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1657:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1649:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1672:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1664:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1648:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1704:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:9:0"
									},
									"scope": 77,
									"src": "1630:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1719:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2375:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2391:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2383:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2408:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2400:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2433:6:0"
									},
									"scope": 77,
									"src": "2366:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2446:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2747:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2768:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2760:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2782:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2774:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2794:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2786:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2759:42:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2820:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2820:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2819:6:0"
									},
									"scope": 77,
									"src": "2738:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1566,
							"src": "283:2545:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3008:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"3190:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3190:17:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3190:17:0"
								}
							],
							"canonicalName": "IERC20MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3034:116:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20MetadataUpgradeable",
							"nameLocation": "3161:25:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3214:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3282:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3286:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3312:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3312:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:15:0"
									},
									"scope": 100,
									"src": "3273:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3333:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3403:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3409:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3435:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3435:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3434:15:0"
									},
									"scope": 100,
									"src": "3394:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3456:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3535:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3569:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3568:7:0"
									},
									"scope": 100,
									"src": "3526:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1566,
							"src": "3151:427:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "3725:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AddressUpgradeable",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3750:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 429,
							"linearizedBaseContracts": [
								429
							],
							"name": "AddressUpgradeable",
							"nameLocation": "3826:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "5113:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 110,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "5337:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5345:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5337:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5350:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5337:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5359:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5337:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 109,
												"id": 115,
												"nodeType": "Return",
												"src": "5330:30:0"
											}
										]
									},
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "3851:1191:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "5056:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5075:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "5067:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5066:17:0"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "5107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5106:6:0"
									},
									"scope": 429,
									"src": "5047:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "6353:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 128,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6379:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$429",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$429",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6371:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 126,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6371:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6371:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6385:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "6371:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 131,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "6396:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6371:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6404:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6363:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6363:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "6363:73:0"
											},
											{
												"assignments": [
													137,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6453:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "6448:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 136,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6448:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 144,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6496:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 138,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 120,
																"src": "6466:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6476:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "6466:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 140,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "6488:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "6466:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6466:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6447:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 146,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "6517:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6526:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6509:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6509:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "6509:78:0"
											}
										]
									},
									"documentation": {
										"id": 118,
										"nodeType": "StructuredDocumentation",
										"src": "5373:904:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "6291:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6317:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "6301:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6301:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6336:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "6328:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6300:43:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6353:0:0"
									},
									"scope": 429,
									"src": "6282:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "7425:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "7464:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 163,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "7472:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7478:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7481:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 161,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															209,
															253
														],
														"referencedDeclaration": 253,
														"src": "7442:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7442:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 160,
												"id": 167,
												"nodeType": "Return",
												"src": "7435:79:0"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "6600:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "7345:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7366:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "7358:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7387:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "7374:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7357:35:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "7411:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 158,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7411:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7410:14:0"
									},
									"scope": 429,
									"src": "7336:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "7890:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 182,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "7929:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 183,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "7937:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7943:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 185,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "7946:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 181,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															209,
															253
														],
														"referencedDeclaration": 253,
														"src": "7907:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7907:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 180,
												"id": 187,
												"nodeType": "Return",
												"src": "7900:59:0"
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "7527:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "7752:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7782:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "7774:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7811:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "7798:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 173,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7798:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7839:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "7825:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7825:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7764:93:0"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "7876:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7876:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7875:14:0"
									},
									"scope": 429,
									"src": "7743:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "8441:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 202,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "8480:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 203,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "8488:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 204,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "8494:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8501:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 201,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															209,
															253
														],
														"referencedDeclaration": 253,
														"src": "8458:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8458:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 200,
												"id": 207,
												"nodeType": "Return",
												"src": "8451:94:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "7972:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "8337:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8367:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8359:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8388:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8375:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 193,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8375:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8402:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8394:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8358:50:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "8427:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 198,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8427:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8426:14:0"
									},
									"scope": 429,
									"src": "8328:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "8979:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 226,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "9005:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$429",
																				"typeString": "library AddressUpgradeable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_AddressUpgradeable_$429",
																				"typeString": "library AddressUpgradeable"
																			}
																		],
																		"id": 225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8997:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 224,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8997:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8997:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9011:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8997:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 229,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "9022:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8997:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9029:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8989:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "8989:81:0"
											},
											{
												"assignments": [
													235,
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9086:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "9081:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 234,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9081:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "9108:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 252,
														"src": "9095:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 236,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9095:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"arguments": [
														{
															"id": 242,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "9148:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 238,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 212,
																"src": "9122:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9129:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "9122:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 240,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "9141:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "9122:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9122:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9080:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "9197:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "9205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 248,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "9214:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 249,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "9226:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 245,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "9170:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9170:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 222,
												"id": 251,
												"nodeType": "Return",
												"src": "9163:76:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "8558:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "8809:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "8848:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "8840:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8877:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "8864:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 213,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8864:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8899:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "8891:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8928:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "8914:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 217,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8914:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8830:116:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "8965:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8965:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8964:14:0"
									},
									"scope": 429,
									"src": "8800:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "9523:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "9559:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "9567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 266,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9573:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 263,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															270,
															299
														],
														"referencedDeclaration": 299,
														"src": "9540:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9540:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 262,
												"id": 268,
												"nodeType": "Return",
												"src": "9533:80:0"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "9252:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "9432:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9459:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "9451:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9480:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "9467:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9467:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9450:35:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "9509:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9509:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9508:14:0"
									},
									"scope": 429,
									"src": "9423:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "9962:168:0",
										"statements": [
											{
												"assignments": [
													283,
													285
												],
												"declarations": [
													{
														"constant": false,
														"id": 283,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9978:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "9973:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 282,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 285,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10000:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 298,
														"src": "9987:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 284,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "9987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"arguments": [
														{
															"id": 288,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "10032:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 286,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "10014:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10021:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "10014:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10014:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9972:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 292,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "10081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 293,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "10089:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 294,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "10098:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 295,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "10110:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 291,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "10054:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10054:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 281,
												"id": 297,
												"nodeType": "Return",
												"src": "10047:76:0"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "9626:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "9813:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9849:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "9841:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9878:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "9865:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9865:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "9906:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "9892:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 276,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9831:93:0"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "9948:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 279,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9948:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9947:14:0"
									},
									"scope": 429,
									"src": "9804:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 315,
										"nodeType": "Block",
										"src": "10406:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 310,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10444:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 311,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "10452:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10458:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 309,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															316,
															345
														],
														"referencedDeclaration": 345,
														"src": "10423:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10423:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 308,
												"id": 314,
												"nodeType": "Return",
												"src": "10416:84:0"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "10136:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "10318:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10347:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "10339:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10368:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "10355:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 303,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10355:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10338:35:0"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "10392:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 306,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10392:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10391:14:0"
									},
									"scope": 429,
									"src": "10309:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "10848:170:0",
										"statements": [
											{
												"assignments": [
													329,
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 329,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "10864:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "10859:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 328,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "10859:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "10886:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 344,
														"src": "10873:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 330,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "10873:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"arguments": [
														{
															"id": 334,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 321,
															"src": "10920:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 332,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "10900:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10907:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "10900:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10900:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10858:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 338,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "10969:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 339,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "10977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 340,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "10986:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 341,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 323,
															"src": "10998:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 337,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "10942:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10942:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 327,
												"id": 343,
												"nodeType": "Return",
												"src": "10935:76:0"
											}
										]
									},
									"documentation": {
										"id": 317,
										"nodeType": "StructuredDocumentation",
										"src": "10513:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "10702:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10740:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "10732:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10732:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10769:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "10756:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 320,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10756:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10797:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "10783:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10783:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10722:93:0"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "10834:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10834:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10833:14:0"
									},
									"scope": 429,
									"src": "10693:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "11500:434:0",
										"statements": [
											{
												"condition": {
													"id": 359,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 350,
													"src": "11514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 381,
													"nodeType": "Block",
													"src": "11870:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 377,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "11892:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 378,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "11904:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 376,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "11884:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11884:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 380,
															"nodeType": "ExpressionStatement",
															"src": "11884:33:0"
														}
													]
												},
												"id": 382,
												"nodeType": "IfStatement",
												"src": "11510:418:0",
												"trueBody": {
													"id": 375,
													"nodeType": "Block",
													"src": "11523:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 360,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 352,
																		"src": "11541:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11552:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "11541:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11562:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "11541:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 372,
															"nodeType": "IfStatement",
															"src": "11537:286:0",
															"trueBody": {
																"id": 371,
																"nodeType": "Block",
																"src": "11565:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 366,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 348,
																							"src": "11767:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 365,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 117,
																						"src": "11756:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 367,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "11756:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 368,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11776:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 364,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11748:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11748:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 370,
																		"nodeType": "ExpressionStatement",
																		"src": "11748:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 373,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "11843:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 358,
															"id": 374,
															"nodeType": "Return",
															"src": "11836:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "11024:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "11315:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11359:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "11351:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11351:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "11380:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "11375:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 349,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11375:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "11410:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "11397:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11397:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11444:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "11430:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11430:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11341:121:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "11486:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11486:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11485:14:0"
									},
									"scope": 429,
									"src": "11306:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "12315:135:0",
										"statements": [
											{
												"condition": {
													"id": 396,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "12329:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 405,
													"nodeType": "Block",
													"src": "12386:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 401,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 389,
																		"src": "12408:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 402,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 391,
																		"src": "12420:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 400,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "12400:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12400:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "12400:33:0"
														}
													]
												},
												"id": 406,
												"nodeType": "IfStatement",
												"src": "12325:119:0",
												"trueBody": {
													"id": 399,
													"nodeType": "Block",
													"src": "12338:42:0",
													"statements": [
														{
															"expression": {
																"id": 397,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "12359:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 395,
															"id": 398,
															"nodeType": "Return",
															"src": "12352:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "11940:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "12164:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "12195:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "12190:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 386,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "12225:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "12212:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 388,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12212:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12259:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "12245:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12245:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12180:97:0"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "12301:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12301:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12300:14:0"
									},
									"scope": 429,
									"src": "12155:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "12539:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 415,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "12615:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12626:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12615:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12635:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12615:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 425,
													"nodeType": "Block",
													"src": "12945:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 422,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 412,
																		"src": "12966:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 421,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "12959:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12959:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 424,
															"nodeType": "ExpressionStatement",
															"src": "12959:20:0"
														}
													]
												},
												"id": 426,
												"nodeType": "IfStatement",
												"src": "12611:379:0",
												"trueBody": {
													"id": 420,
													"nodeType": "Block",
													"src": "12638:301:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "12796:133:0",
																"nodeType": "YulBlock",
																"src": "12796:133:0",
																"statements": [
																	{
																		"nativeSrc": "12814:40:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12814:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "12843:10:0",
																					"nodeType": "YulIdentifier",
																					"src": "12843:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "12837:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "12837:5:0"
																			},
																			"nativeSrc": "12837:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "12837:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "12818:15:0",
																				"nodeType": "YulTypedName",
																				"src": "12818:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12882:2:0",
																							"nodeType": "YulLiteral",
																							"src": "12882:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "12886:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "12886:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12878:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "12878:3:0"
																					},
																					"nativeSrc": "12878:19:0",
																					"nodeType": "YulFunctionCall",
																					"src": "12878:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "12899:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "12899:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12871:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "12871:6:0"
																			},
																			"nativeSrc": "12871:44:0",
																			"nodeType": "YulFunctionCall",
																			"src": "12871:44:0"
																		},
																		"nativeSrc": "12871:44:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "12871:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 410,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12843:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 410,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "12886:10:0",
																	"valueSize": 1
																}
															],
															"id": 419,
															"nodeType": "InlineAssembly",
															"src": "12787:142:0"
														}
													]
												}
											}
										]
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "12465:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "12486:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "12473:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12473:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12512:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "12498:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 411,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12498:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12472:53:0"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12539:0:0"
									},
									"scope": 429,
									"src": "12456:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1566,
							"src": "3818:9180:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "13158:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 431,
								"nodeType": "StructuredDocumentation",
								"src": "13184:2209:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 596,
							"linearizedBaseContracts": [
								596
							],
							"name": "Initializable",
							"nameLocation": "15412:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "15432:109:0",
										"text": " @dev Indicates that the contract has been initialized.\n @custom:oz-retyped-from bool"
									},
									"id": 434,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "15560:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "15546:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 433,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "15546:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "15579:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 437,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "15688:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 596,
									"src": "15675:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 436,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "15675:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "15708:90:0",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498",
									"id": 442,
									"name": "Initialized",
									"nameLocation": "15809:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "15827:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "15821:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 439,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "15821:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15820:15:0"
									},
									"src": "15803:33:0"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "16269:483:0",
										"statements": [
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "16284:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "16279:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 445,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16279:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16301:14:0",
													"subExpression": {
														"id": 447,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "16302:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16279:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 451,
																			"name": "isTopLevelCall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 446,
																			"src": "16347:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 452,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "16365:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16380:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "16365:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "16347:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 456,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16346:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "!",
																			"prefix": true,
																			"src": "16387:45:0",
																			"subExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 461,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "16426:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_Initializable_$596",
																									"typeString": "contract Initializable"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_Initializable_$596",
																									"typeString": "contract Initializable"
																								}
																							],
																							"id": 460,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "16418:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 459,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "16418:7:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "16418:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 457,
																						"name": "AddressUpgradeable",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 429,
																						"src": "16388:18:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_AddressUpgradeable_$429_$",
																							"typeString": "type(library AddressUpgradeable)"
																						}
																					},
																					"id": 458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "16407:10:0",
																					"memberName": "isContract",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 117,
																					"src": "16388:29:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																						"typeString": "function (address) view returns (bool)"
																					}
																				},
																				"id": 463,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "16388:44:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 465,
																				"name": "_initialized",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 434,
																				"src": "16436:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16452:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "16436:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "16387:66:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 469,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16386:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "16346:108:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16468:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16325:201:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "16325:201:0"
											},
											{
												"expression": {
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 474,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "16536:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16551:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "16536:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "16536:16:0"
											},
											{
												"condition": {
													"id": 478,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 446,
													"src": "16566:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 484,
												"nodeType": "IfStatement",
												"src": "16562:65:0",
												"trueBody": {
													"id": 483,
													"nodeType": "Block",
													"src": "16582:45:0",
													"statements": [
														{
															"expression": {
																"id": 481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 479,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "16596:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16612:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "16596:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 482,
															"nodeType": "ExpressionStatement",
															"src": "16596:20:0"
														}
													]
												}
											},
											{
												"id": 485,
												"nodeType": "PlaceholderStatement",
												"src": "16636:1:0"
											},
											{
												"condition": {
													"id": 486,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 446,
													"src": "16651:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "16647:99:0",
												"trueBody": {
													"id": 495,
													"nodeType": "Block",
													"src": "16667:79:0",
													"statements": [
														{
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 487,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "16681:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16697:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "16681:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "16681:21:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16733:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 491,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "16721:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16721:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 494,
															"nodeType": "EmitStatement",
															"src": "16716:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "15842:399:0",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that functions marked with `initializer` can be nested in the context of a\n constructor.\n Emits an {Initialized} event."
									},
									"id": 498,
									"name": "initializer",
									"nameLocation": "16255:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16266:2:0"
									},
									"src": "16246:506:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 530,
										"nodeType": "Block",
										"src": "17863:255:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "17881:14:0",
																"subExpression": {
																	"id": 504,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "17882:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 506,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "17899:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 507,
																	"name": "version",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "17914:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "17899:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "17881:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17923:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17873:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17873:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 512,
												"nodeType": "ExpressionStatement",
												"src": "17873:99:0"
											},
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 513,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "17982:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 514,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "17997:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "17982:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "17982:22:0"
											},
											{
												"expression": {
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 517,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "18014:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18030:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "18014:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "18014:20:0"
											},
											{
												"id": 521,
												"nodeType": "PlaceholderStatement",
												"src": "18044:1:0"
											},
											{
												"expression": {
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 522,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "18055:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18071:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "18055:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "18055:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 527,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "18103:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 526,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "18091:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
															"typeString": "function (uint8)"
														}
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18091:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 529,
												"nodeType": "EmitStatement",
												"src": "18086:25:0"
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "16758:1062:0",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: setting the version to 255 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 531,
									"name": "reinitializer",
									"nameLocation": "17834:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "17854:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "17848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 500,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17848:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17847:15:0"
									},
									"src": "17825:293:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "18356:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "_initializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "18374:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18389:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															},
															"value": "Initializable: contract is not initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b",
																"typeString": "literal_string \"Initializable: contract is not initializing\""
															}
														],
														"id": 534,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18366:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18366:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "18366:69:0"
											},
											{
												"id": 539,
												"nodeType": "PlaceholderStatement",
												"src": "18445:1:0"
											}
										]
									},
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "18124:199:0",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 541,
									"name": "onlyInitializing",
									"nameLocation": "18337:16:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18353:2:0"
									},
									"src": "18328:125:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "18988:231:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "19006:14:0",
															"subExpression": {
																"id": 546,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 437,
																"src": "19007:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320696e697469616c697a696e67",
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19022:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															},
															"value": "Initializable: contract is initializing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a53f5879e7518078ff19b2e3d6b41e757a87364ec6872787feb45bfc41131d1a",
																"typeString": "literal_string \"Initializable: contract is initializing\""
															}
														],
														"id": 545,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18998:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18998:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "18998:66:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 551,
														"name": "_initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "19078:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "19099:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 553,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "19099:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 552,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "19094:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19094:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "19106:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "19094:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "19078:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "19074:139:0",
												"trueBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "19111:102:0",
													"statements": [
														{
															"expression": {
																"id": 564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 558,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 434,
																	"src": "19125:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 561,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "19145:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				},
																				"typeName": {
																					"id": 560,
																					"name": "uint8",
																					"nodeType": "ElementaryTypeName",
																					"src": "19145:5:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint8_$",
																					"typeString": "type(uint8)"
																				}
																			],
																			"id": 559,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "19140:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19140:11:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint8",
																			"typeString": "type(uint8)"
																		}
																	},
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "19152:3:0",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "19140:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "19125:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 565,
															"nodeType": "ExpressionStatement",
															"src": "19125:30:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 569,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "19191:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					},
																					"typeName": {
																						"id": 568,
																						"name": "uint8",
																						"nodeType": "ElementaryTypeName",
																						"src": "19191:5:0",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint8_$",
																						"typeString": "type(uint8)"
																					}
																				],
																				"id": 567,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "19186:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19186:11:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint8",
																				"typeString": "type(uint8)"
																			}
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "19198:3:0",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "19186:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	],
																	"id": 566,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 442,
																	"src": "19174:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
																		"typeString": "function (uint8)"
																	}
																},
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19174:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 573,
															"nodeType": "EmitStatement",
															"src": "19169:33:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "18459:475:0",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "18948:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18968:2:0"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18988:0:0"
									},
									"scope": 596,
									"src": "18939:280:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "19393:36:0",
										"statements": [
											{
												"expression": {
													"id": 583,
													"name": "_initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 434,
													"src": "19410:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 582,
												"id": 584,
												"nodeType": "Return",
												"src": "19403:19:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "19225:99:0",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "19338:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19360:2:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "19386:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 580,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19386:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19385:7:0"
									},
									"scope": 596,
									"src": "19329:100:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "19601:37:0",
										"statements": [
											{
												"expression": {
													"id": 592,
													"name": "_initializing",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 437,
													"src": "19618:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 591,
												"id": 593,
												"nodeType": "Return",
												"src": "19611:20:0"
											}
										]
									},
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "19435:105:0",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "19554:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19569:2:0"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "19595:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 589,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19595:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19594:6:0"
									},
									"scope": 596,
									"src": "19545:93:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1566,
							"src": "15394:4246:0",
							"usedErrors": [],
							"usedEvents": [
								442
							]
						},
						{
							"id": 597,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19787:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 599,
										"name": "Initializable",
										"nameLocations": [
											"20350:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 596,
										"src": "20350:13:0"
									},
									"id": 600,
									"nodeType": "InheritanceSpecifier",
									"src": "20350:13:0"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 598,
								"nodeType": "StructuredDocumentation",
								"src": "19813:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 644,
							"linearizedBaseContracts": [
								644,
								596
							],
							"name": "ContextUpgradeable",
							"nameLocation": "20328:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "20422:7:0",
										"statements": []
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 603,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 602,
												"name": "onlyInitializing",
												"nameLocations": [
													"20405:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 541,
												"src": "20405:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20405:16:0"
										}
									],
									"name": "__Context_init",
									"nameLocation": "20379:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20393:2:0"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20422:0:0"
									},
									"scope": 644,
									"src": "20370:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "20497:7:0",
										"statements": []
									},
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 609,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 608,
												"name": "onlyInitializing",
												"nameLocations": [
													"20480:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 541,
												"src": "20480:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "20480:16:0"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "20444:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20468:2:0"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20497:0:0"
									},
									"scope": 644,
									"src": "20435:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "20571:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 617,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "20588:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20592:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "20588:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 616,
												"id": 619,
												"nodeType": "Return",
												"src": "20581:17:0"
											}
										]
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "20518:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20528:2:0"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "20562:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20561:9:0"
									},
									"scope": 644,
									"src": "20509:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "20678:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 626,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "20695:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "20699:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "20695:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 625,
												"id": 628,
												"nodeType": "Return",
												"src": "20688:15:0"
											}
										]
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "20620:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20628:2:0"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "20662:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 623,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "20662:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20661:16:0"
									},
									"scope": 644,
									"src": "20611:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "20788:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20805:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 634,
												"id": 636,
												"nodeType": "Return",
												"src": "20798:8:0"
											}
										]
									},
									"id": 638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "20725:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20745:2:0"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "20779:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20778:9:0"
									},
									"scope": 644,
									"src": "20716:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "20819:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 643,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "21098:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 644,
									"src": "21078:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 640,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "21078:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 642,
										"length": {
											"hexValue": "3530",
											"id": 641,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "21086:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "21078:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1566,
							"src": "20310:796:0",
							"usedErrors": [],
							"usedEvents": [
								442
							]
						},
						{
							"id": 645,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21261:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 647,
										"name": "Initializable",
										"nameLocations": [
											"22621:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 596,
										"src": "22621:13:0"
									},
									"id": 648,
									"nodeType": "InheritanceSpecifier",
									"src": "22621:13:0"
								},
								{
									"baseName": {
										"id": 649,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"22636:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 644,
										"src": "22636:18:0"
									},
									"id": 650,
									"nodeType": "InheritanceSpecifier",
									"src": "22636:18:0"
								},
								{
									"baseName": {
										"id": 651,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"22656:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "22656:17:0"
									},
									"id": 652,
									"nodeType": "InheritanceSpecifier",
									"src": "22656:17:0"
								},
								{
									"baseName": {
										"id": 653,
										"name": "IERC20MetadataUpgradeable",
										"nameLocations": [
											"22675:25:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "22675:25:0"
									},
									"id": 654,
									"nodeType": "InheritanceSpecifier",
									"src": "22675:25:0"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 646,
								"nodeType": "StructuredDocumentation",
								"src": "21290:1301:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 1251,
							"linearizedBaseContracts": [
								1251,
								100,
								77,
								644,
								596
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "22601:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 658,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "22743:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1251,
									"src": "22707:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 657,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 655,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "22715:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "22707:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 656,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "22726:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 664,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "22815:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1251,
									"src": "22759:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 663,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 659,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "22767:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "22759:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 662,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 660,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "22786:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "22778:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 661,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "22797:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 666,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "22849:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1251,
									"src": "22833:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 665,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "22833:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 668,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "22883:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1251,
									"src": "22868:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 667,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "22868:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 670,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "22909:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1251,
									"src": "22894:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 669,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "22894:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 685,
										"nodeType": "Block",
										"src": "23191:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 681,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 673,
															"src": "23224:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 682,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "23231:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 680,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "23201:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23201:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 684,
												"nodeType": "ExpressionStatement",
												"src": "23201:38:0"
											}
										]
									},
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "22923:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 686,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 678,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 677,
												"name": "onlyInitializing",
												"nameLocations": [
													"23174:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 541,
												"src": "23174:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23174:16:0"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "23108:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "23135:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "23121:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "23156:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "23142:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23142:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23120:44:0"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23191:0:0"
									},
									"scope": 1251,
									"src": "23099:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "23354:57:0",
										"statements": [
											{
												"expression": {
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 695,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "23364:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 696,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 688,
														"src": "23372:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "23364:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "23364:13:0"
											},
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 699,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "23387:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 700,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "23397:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "23387:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "23387:17:0"
											}
										]
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 693,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 692,
												"name": "onlyInitializing",
												"nameLocations": [
													"23337:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 541,
												"src": "23337:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23337:16:0"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "23261:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "23298:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "23284:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 687,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23284:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "23319:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "23305:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 689,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23305:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23283:44:0"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23354:0:0"
									},
									"scope": 1251,
									"src": "23252:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "23545:29:0",
										"statements": [
											{
												"expression": {
													"id": 711,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 668,
													"src": "23562:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 710,
												"id": 712,
												"nodeType": "Return",
												"src": "23555:12:0"
											}
										]
									},
									"documentation": {
										"id": 705,
										"nodeType": "StructuredDocumentation",
										"src": "23417:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "23485:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 707,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23512:8:0"
									},
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23489:2:0"
									},
									"returnParameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "23530:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 708,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23530:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23529:15:0"
									},
									"scope": 1251,
									"src": "23476:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "23758:31:0",
										"statements": [
											{
												"expression": {
													"id": 721,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 670,
													"src": "23775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 720,
												"id": 722,
												"nodeType": "Return",
												"src": "23768:14:0"
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "23580:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "23696:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 717,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "23725:8:0"
									},
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23702:2:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "23743:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "23743:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23742:15:0"
									},
									"scope": 1251,
									"src": "23687:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "24487:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "24504:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 730,
												"id": 732,
												"nodeType": "Return",
												"src": "24497:9:0"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "23795:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "24431:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 727,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24462:8:0"
									},
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24439:2:0"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "24480:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 728,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "24480:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24479:7:0"
									},
									"scope": 1251,
									"src": "24422:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "24643:36:0",
										"statements": [
											{
												"expression": {
													"id": 741,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 666,
													"src": "24660:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 740,
												"id": 742,
												"nodeType": "Return",
												"src": "24653:19:0"
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "24519:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "24582:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 737,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24616:8:0"
									},
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24593:2:0"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "24634:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24633:9:0"
									},
									"scope": 1251,
									"src": "24573:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "24820:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 753,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "24837:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 755,
													"indexExpression": {
														"id": 754,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "24847:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "24837:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 752,
												"id": 756,
												"nodeType": "Return",
												"src": "24830:25:0"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "24685:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "24746:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 749,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "24793:8:0"
									},
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24764:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "24756:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24755:17:0"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "24811:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24811:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24810:9:0"
									},
									"scope": 1251,
									"src": "24737:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "25143:104:0",
										"statements": [
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "25161:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "25153:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 769,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25153:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 771,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "25169:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25169:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25153:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 775,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "25201:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "25208:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "25212:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 774,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "25191:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25191:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "25191:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 768,
												"id": 781,
												"nodeType": "Return",
												"src": "25229:11:0"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "24868:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "25067:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 765,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25119:8:0"
									},
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25084:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "25076:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25076:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25096:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "25088:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25075:28:0"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "25137:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25137:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25136:6:0"
									},
									"scope": 1251,
									"src": "25058:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "25403:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 794,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 664,
															"src": "25420:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 796,
														"indexExpression": {
															"id": 795,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "25432:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "25420:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 798,
													"indexExpression": {
														"id": 797,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "25439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "25420:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 793,
												"id": 799,
												"nodeType": "Return",
												"src": "25413:34:0"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "25253:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "25314:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 790,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25376:8:0"
									},
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25332:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "25324:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25347:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "25339:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 787,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25323:32:0"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "25394:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25393:9:0"
									},
									"scope": 1251,
									"src": "25305:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "25851:108:0",
										"statements": [
											{
												"assignments": [
													813
												],
												"declarations": [
													{
														"constant": false,
														"id": 813,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "25869:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "25861:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 812,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "25861:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 814,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "25877:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25877:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "25861:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 818,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "25908:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "25915:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "25924:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 817,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "25899:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25899:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 822,
												"nodeType": "ExpressionStatement",
												"src": "25899:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25948:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 811,
												"id": 824,
												"nodeType": "Return",
												"src": "25941:11:0"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "25460:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "25771:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 808,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25827:8:0"
									},
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25787:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "25779:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25779:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25804:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "25796:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25778:33:0"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "25845:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 809,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25845:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25844:6:0"
									},
									"scope": 1251,
									"src": "25762:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "26624:153:0",
										"statements": [
											{
												"assignments": [
													840
												],
												"declarations": [
													{
														"constant": false,
														"id": 840,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "26642:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 858,
														"src": "26634:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 839,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26634:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 841,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "26652:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26652:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26634:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 845,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "26690:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "26696:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 847,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "26705:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "26674:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26674:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "26674:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 851,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "26732:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 852,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "26738:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "26742:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 850,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "26722:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26722:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 855,
												"nodeType": "ExpressionStatement",
												"src": "26722:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26766:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 838,
												"id": 857,
												"nodeType": "Return",
												"src": "26759:11:0"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "25965:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "26530:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 835,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26600:8:0"
									},
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26551:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "26543:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26565:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "26557:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "26577:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "26569:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26542:42:0"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "26618:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 836,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26618:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26617:6:0"
									},
									"scope": 1251,
									"src": "26521:256:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "27266:140:0",
										"statements": [
											{
												"assignments": [
													870
												],
												"declarations": [
													{
														"constant": false,
														"id": 870,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "27284:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "27276:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 869,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27276:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 873,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 871,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "27292:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27292:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27276:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 875,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "27323:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 876,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "27330:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 878,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "27349:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 879,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 862,
																		"src": "27356:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 877,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "27339:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27339:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 881,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "27367:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27339:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 874,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "27314:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27314:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "27314:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27395:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 868,
												"id": 886,
												"nodeType": "Return",
												"src": "27388:11:0"
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "26783:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "27181:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27207:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "27199:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27199:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "27224:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "27216:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27198:37:0"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "27260:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 866,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27259:6:0"
									},
									"scope": 1251,
									"src": "27172:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "27992:328:0",
										"statements": [
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "28010:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "28002:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 898,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28002:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 902,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 900,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "28018:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28018:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28002:28:0"
											},
											{
												"assignments": [
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "28048:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "28040:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 903,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "28040:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 909,
												"initialValue": {
													"arguments": [
														{
															"id": 906,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 899,
															"src": "28077:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "28084:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 905,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "28067:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28067:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28040:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 911,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "28110:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 912,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 893,
																"src": "28130:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28110:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28147:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 910,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28102:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28102:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 916,
												"nodeType": "ExpressionStatement",
												"src": "28102:85:0"
											},
											{
												"id": 925,
												"nodeType": "UncheckedBlock",
												"src": "28197:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 918,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "28230:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 919,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "28237:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 920,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 904,
																		"src": "28246:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 921,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 893,
																		"src": "28265:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "28246:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 917,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "28221:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28221:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 924,
														"nodeType": "ExpressionStatement",
														"src": "28221:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28309:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 897,
												"id": 927,
												"nodeType": "Return",
												"src": "28302:11:0"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "27412:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "27902:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27928:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "27920:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "27945:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "27937:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27919:42:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "27986:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 895,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27986:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27985:6:0"
									},
									"scope": 1251,
									"src": "27893:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "28852:710:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 940,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 932,
																"src": "28870:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28886:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28878:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 941,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28878:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28878:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28870:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28890:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28862:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28862:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "28862:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 950,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 934,
																"src": "28948:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28962:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "28954:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 951,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "28954:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28954:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "28948:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28966:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 949,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28940:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28940:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "28940:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 960,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "29036:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 961,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "29042:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 962,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "29046:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 959,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "29015:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29015:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "29015:38:0"
											},
											{
												"assignments": [
													966
												],
												"declarations": [
													{
														"constant": false,
														"id": 966,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "29072:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1005,
														"src": "29064:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 965,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29064:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 970,
												"initialValue": {
													"baseExpression": {
														"id": 967,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "29086:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 969,
													"indexExpression": {
														"id": 968,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "29096:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29086:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29064:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 972,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "29119:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 973,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "29134:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29119:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29142:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 971,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29111:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29111:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 977,
												"nodeType": "ExpressionStatement",
												"src": "29111:72:0"
											},
											{
												"id": 992,
												"nodeType": "UncheckedBlock",
												"src": "29193:273:0",
												"statements": [
													{
														"expression": {
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 978,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "29217:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 980,
																"indexExpression": {
																	"id": 979,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 932,
																	"src": "29227:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "29217:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 981,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "29235:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 982,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 936,
																	"src": "29249:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29235:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29217:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 985,
														"nodeType": "ExpressionStatement",
														"src": "29217:38:0"
													},
													{
														"expression": {
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 986,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "29432:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 988,
																"indexExpression": {
																	"id": 987,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "29442:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "29432:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 989,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 936,
																"src": "29449:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29432:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 991,
														"nodeType": "ExpressionStatement",
														"src": "29432:23:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 994,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "29490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "29496:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "29500:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "29481:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29481:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "EmitStatement",
												"src": "29476:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1000,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "29538:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 934,
															"src": "29544:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "29548:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 999,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "29518:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29518:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "29518:37:0"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "28326:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "28783:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28801:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "28793:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28815:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "28807:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "28827:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "28819:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28792:42:0"
									},
									"returnParameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28852:0:0"
									},
									"scope": 1251,
									"src": "28774:788:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1062,
										"nodeType": "Block",
										"src": "29903:470:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1015,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1009,
																"src": "29921:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1018,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1017,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29932:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1016,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29932:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1019,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29932:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29921:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29944:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29913:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29913:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "29913:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30018:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30010:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1025,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30010:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30010:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "30022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1030,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "30031:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1024,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "29989:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29989:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "29989:49:0"
											},
											{
												"expression": {
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1033,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 666,
														"src": "30049:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1034,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1011,
														"src": "30065:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "30049:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "30049:22:0"
											},
											{
												"id": 1043,
												"nodeType": "UncheckedBlock",
												"src": "30081:175:0",
												"statements": [
													{
														"expression": {
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1037,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "30217:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1039,
																"indexExpression": {
																	"id": 1038,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1009,
																	"src": "30227:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30217:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 1040,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "30239:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30217:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1042,
														"nodeType": "ExpressionStatement",
														"src": "30217:28:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30287:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1046,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30279:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1045,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30279:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30279:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1049,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "30291:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "30300:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1044,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "30270:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30270:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "EmitStatement",
												"src": "30265:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30346:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30338:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1054,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30338:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30338:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1058,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1009,
															"src": "30350:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1011,
															"src": "30359:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1053,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "30318:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30318:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1061,
												"nodeType": "ExpressionStatement",
												"src": "30318:48:0"
											}
										]
									},
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "29568:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "29847:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "29861:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "29853:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29878:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "29870:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29852:33:0"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29903:0:0"
									},
									"scope": 1251,
									"src": "29838:535:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "30758:594:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1072,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1066,
																"src": "30776:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30795:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30787:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1073,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30787:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30787:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30776:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30799:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30768:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30768:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "30768:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1082,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "30867:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30884:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30876:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30876:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30876:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1087,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "30888:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1081,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1234,
														"src": "30846:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30846:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "30846:49:0"
											},
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "30914:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "30906:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1090,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "30906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"baseExpression": {
														"id": 1092,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "30931:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1094,
													"indexExpression": {
														"id": 1093,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1066,
														"src": "30941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "30931:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30906:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1097,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1091,
																"src": "30967:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1098,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "30985:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30967:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30993:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 1096,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30959:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30959:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "30959:71:0"
											},
											{
												"id": 1115,
												"nodeType": "UncheckedBlock",
												"src": "31040:194:0",
												"statements": [
													{
														"expression": {
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1103,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "31064:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1105,
																"indexExpression": {
																	"id": 1104,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1066,
																	"src": "31074:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "31064:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1106,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "31085:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1107,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1068,
																	"src": "31102:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31085:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31064:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1110,
														"nodeType": "ExpressionStatement",
														"src": "31064:44:0"
													},
													{
														"expression": {
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1111,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 666,
																"src": "31201:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 1112,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "31217:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31201:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1114,
														"nodeType": "ExpressionStatement",
														"src": "31201:22:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1117,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "31258:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31275:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31267:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31267:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "31279:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1116,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "31249:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31249:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "EmitStatement",
												"src": "31244:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1126,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1066,
															"src": "31317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31334:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31326:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31326:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31326:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1068,
															"src": "31338:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1125,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "31297:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31297:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "31297:48:0"
											}
										]
									},
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "30379:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "30702:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30716:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "30708:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "30733:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "30725:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30707:33:0"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30758:0:0"
									},
									"scope": 1251,
									"src": "30693:659:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1179,
										"nodeType": "Block",
										"src": "31858:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1146,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "31876:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31893:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31885:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1147,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "31885:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31885:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31876:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31897:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 1145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31868:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31868:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "31868:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1156,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "31954:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31973:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "31965:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1157,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "31965:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31965:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "31954:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31977:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 1155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "31946:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31946:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "31946:68:0"
											},
											{
												"expression": {
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1165,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 664,
																"src": "32025:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1168,
															"indexExpression": {
																"id": 1166,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "32037:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "32025:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1169,
														"indexExpression": {
															"id": 1167,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "32044:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "32025:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1170,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "32055:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32025:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1172,
												"nodeType": "ExpressionStatement",
												"src": "32025:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "32085:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1175,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "32092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1142,
															"src": "32101:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1173,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "32076:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32076:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "EmitStatement",
												"src": "32071:37:0"
											}
										]
									},
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "31358:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "31784:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "31801:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "31793:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31793:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "31808:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "31833:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "31825:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31792:48:0"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31858:0:0"
									},
									"scope": 1251,
									"src": "31775:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "32486:321:0",
										"statements": [
											{
												"assignments": [
													1191
												],
												"declarations": [
													{
														"constant": false,
														"id": 1191,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "32504:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "32496:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1196,
												"initialValue": {
													"arguments": [
														{
															"id": 1193,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "32533:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "32540:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1192,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "32523:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32523:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32496:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1197,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "32562:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "32587:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1199,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32587:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1198,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "32582:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "32582:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "32596:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "32582:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "32562:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1221,
												"nodeType": "IfStatement",
												"src": "32558:243:0",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "32601:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1205,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1191,
																			"src": "32623:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1206,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "32643:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "32623:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32651:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 1204,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "32615:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32615:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1210,
															"nodeType": "ExpressionStatement",
															"src": "32615:68:0"
														},
														{
															"id": 1219,
															"nodeType": "UncheckedBlock",
															"src": "32697:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1212,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1183,
																				"src": "32734:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1213,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1185,
																				"src": "32741:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1214,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1191,
																					"src": "32750:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1215,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1187,
																					"src": "32769:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "32750:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1211,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "32725:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32725:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1218,
																	"nodeType": "ExpressionStatement",
																	"src": "32725:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "32121:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "32405:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32429:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "32421:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32444:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "32436:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32461:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "32453:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32420:48:0"
									},
									"returnParameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32486:0:0"
									},
									"scope": 1251,
									"src": "32396:411:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1233,
										"nodeType": "Block",
										"src": "33480:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "32813:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "33400:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33429:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "33421:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "33435:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33435:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "33455:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1234,
												"src": "33447:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33420:42:0"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33480:0:0"
									},
									"scope": 1251,
									"src": "33391:91:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "34158:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1235,
										"nodeType": "StructuredDocumentation",
										"src": "33488:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "34079:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34107:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "34099:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34121:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "34113:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34113:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34133:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "34125:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34098:42:0"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34158:0:0"
									},
									"scope": 1251,
									"src": "34070:90:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "34166:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1250,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "34445:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1251,
									"src": "34425:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$45_storage",
										"typeString": "uint256[45]"
									},
									"typeName": {
										"baseType": {
											"id": 1247,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "34425:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1249,
										"length": {
											"hexValue": "3435",
											"id": 1248,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "34433:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_45_by_1",
												"typeString": "int_const 45"
											},
											"value": "45"
										},
										"nodeType": "ArrayTypeName",
										"src": "34425:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
											"typeString": "uint256[45]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1566,
							"src": "22592:11861:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20,
								442
							]
						},
						{
							"id": 1252,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34602:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1254,
										"name": "Initializable",
										"nameLocations": [
											"35164:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 596,
										"src": "35164:13:0"
									},
									"id": 1255,
									"nodeType": "InheritanceSpecifier",
									"src": "35164:13:0"
								},
								{
									"baseName": {
										"id": 1256,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"35179:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 644,
										"src": "35179:18:0"
									},
									"id": 1257,
									"nodeType": "InheritanceSpecifier",
									"src": "35179:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1253,
								"nodeType": "StructuredDocumentation",
								"src": "34629:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1380,
							"linearizedBaseContracts": [
								1380,
								644,
								596
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "35142:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1259,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "35220:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "35204:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1258,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "35204:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1265,
									"name": "OwnershipTransferred",
									"nameLocation": "35239:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "35276:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "35260:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1263,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "35307:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "35291:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35259:57:0"
									},
									"src": "35233:84:0"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "35471:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1271,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "35481:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35481:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "ExpressionStatement",
												"src": "35481:26:0"
											}
										]
									},
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "35323:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1269,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1268,
												"name": "onlyInitializing",
												"nameLocations": [
													"35454:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 541,
												"src": "35454:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35454:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "35428:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35442:2:0"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35471:0:0"
									},
									"scope": 1380,
									"src": "35419:95:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "35582:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1281,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 621,
																"src": "35611:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35611:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1280,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "35592:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35592:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "35592:32:0"
											}
										]
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1277,
												"name": "onlyInitializing",
												"nameLocations": [
													"35565:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 541,
												"src": "35565:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35565:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "35529:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35553:2:0"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35582:0:0"
									},
									"scope": 1380,
									"src": "35520:111:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "35740:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1289,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "35750:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35750:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1291,
												"nodeType": "ExpressionStatement",
												"src": "35750:13:0"
											},
											{
												"id": 1292,
												"nodeType": "PlaceholderStatement",
												"src": "35773:1:0"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "35637:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1294,
									"name": "onlyOwner",
									"nameLocation": "35728:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35737:2:0"
									},
									"src": "35719:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "35912:30:0",
										"statements": [
											{
												"expression": {
													"id": 1300,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1259,
													"src": "35929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1301,
												"nodeType": "Return",
												"src": "35922:13:0"
											}
										]
									},
									"documentation": {
										"id": 1295,
										"nodeType": "StructuredDocumentation",
										"src": "35787:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "35866:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35871:2:0"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "35903:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35903:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35902:9:0"
									},
									"scope": 1380,
									"src": "35857:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "36060:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1308,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "36078:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36078:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1310,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 621,
																	"src": "36089:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36089:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "36078:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36103:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36070:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36070:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "36070:68:0"
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "35948:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "36024:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36035:2:0"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36060:0:0"
									},
									"scope": 1380,
									"src": "36015:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "36534:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36571:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36563:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1324,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36563:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36563:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1323,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "36544:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36544:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1329,
												"nodeType": "ExpressionStatement",
												"src": "36544:30:0"
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "36151:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1321,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1320,
												"name": "onlyOwner",
												"nameLocations": [
													"36524:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1294,
												"src": "36524:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36524:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "36489:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36506:2:0"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36534:0:0"
									},
									"scope": 1380,
									"src": "36480:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1353,
										"nodeType": "Block",
										"src": "36800:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1340,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "36818:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36838:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36830:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1341,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36830:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36830:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "36818:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36842:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36810:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36810:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "36810:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1350,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "36912:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1349,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1374,
														"src": "36893:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36893:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "36893:28:0"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "36587:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1354,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1337,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1336,
												"name": "onlyOwner",
												"nameLocations": [
													"36790:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1294,
												"src": "36790:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "36790:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "36739:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "36765:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1354,
												"src": "36757:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36756:18:0"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36800:0:0"
									},
									"scope": 1380,
									"src": "36730:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1373,
										"nodeType": "Block",
										"src": "37145:124:0",
										"statements": [
											{
												"assignments": [
													1361
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "37163:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1373,
														"src": "37155:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1360,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37155:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1363,
												"initialValue": {
													"id": 1362,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1259,
													"src": "37174:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37155:25:0"
											},
											{
												"expression": {
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1364,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "37190:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1365,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1357,
														"src": "37199:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "37190:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "37190:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1369,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "37243:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1370,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "37253:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1368,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "37222:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37222:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1372,
												"nodeType": "EmitStatement",
												"src": "37217:45:0"
											}
										]
									},
									"documentation": {
										"id": 1355,
										"nodeType": "StructuredDocumentation",
										"src": "36934:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "37091:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "37118:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "37110:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37109:18:0"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37145:0:0"
									},
									"scope": 1380,
									"src": "37082:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "37275:254:0",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1379,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "37554:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "37534:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1376,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "37534:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1378,
										"length": {
											"hexValue": "3439",
											"id": 1377,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "37542:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "37534:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1566,
							"src": "35124:2438:0",
							"usedErrors": [],
							"usedEvents": [
								442,
								1265
							]
						},
						{
							"id": 1381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "37601:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1383,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"37887:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1251,
										"src": "37887:16:0"
									},
									"id": 1384,
									"nodeType": "InheritanceSpecifier",
									"src": "37887:16:0"
								},
								{
									"baseName": {
										"id": 1385,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"37905:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1380,
										"src": "37905:18:0"
									},
									"id": 1386,
									"nodeType": "InheritanceSpecifier",
									"src": "37905:18:0"
								}
							],
							"canonicalName": "WETH",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1382,
								"nodeType": "StructuredDocumentation",
								"src": "37625:241:0",
								"text": "This is custom WETH token smart-contract, to solve the faucet issue. \nNow all Testnet Eth will be sent to this smart-contract and we have a \ncustom method to extract back the tokens to our admin address and re-use \nthe tokens"
							},
							"fullyImplemented": true,
							"id": 1565,
							"linearizedBaseContracts": [
								1565,
								1380,
								1251,
								100,
								77,
								644,
								596
							],
							"name": "WETH",
							"nameLocation": "37879:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "e1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c",
									"id": 1392,
									"name": "Deposit",
									"nameLocation": "37936:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"indexed": true,
												"mutability": "mutable",
												"name": "dst",
												"nameLocation": "37960:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "37944:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37944:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"indexed": false,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "37973:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "37965:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37943:34:0"
									},
									"src": "37930:48:0"
								},
								{
									"anonymous": false,
									"eventSelector": "7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65",
									"id": 1398,
									"name": "Withdrawal",
									"nameLocation": "37989:10:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"indexed": true,
												"mutability": "mutable",
												"name": "src",
												"nameLocation": "38016:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "38000:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"indexed": false,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "38029:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "38021:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37999:34:0"
									},
									"src": "37983:51:0"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "38081:157:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "57726170706564204574686572",
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38104:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3",
																"typeString": "literal_string \"Wrapped Ether\""
															},
															"value": "Wrapped Ether"
														},
														{
															"hexValue": "57455448",
															"id": 1405,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38121:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
																"typeString": "literal_string \"WETH\""
															},
															"value": "WETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_00cd3d46df44f2cbb950cf84eb2e92aa2ddd23195b1a009173ea59a063357ed3",
																"typeString": "literal_string \"Wrapped Ether\""
															},
															{
																"typeIdentifier": "t_stringliteral_0f8a193ff464434486c0daf7db2a895884365d2bc84ba47a68fcf89c1b14b5b8",
																"typeString": "literal_string \"WETH\""
															}
														],
														"id": 1403,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "38091:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38091:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1407,
												"nodeType": "ExpressionStatement",
												"src": "38091:37:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1408,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "38138:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38138:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "38138:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1414,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "38177:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38181:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "38177:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130303030303030303030",
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38189:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000_by_1",
																	"typeString": "int_const 10000000000"
																},
																"value": "10000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "38204:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1420,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 734,
																						"src": "38218:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 1421,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38218:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 1419,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "38210:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1418,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "38210:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38210:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "38204:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1424,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "38203:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38189:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1411,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "38165:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WETH_$1565_$",
																"typeString": "type(contract super WETH)"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38171:5:0",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1063,
														"src": "38165:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38165:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "38165:66:0"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1400,
												"name": "initializer",
												"nameLocations": [
													"38069:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 498,
												"src": "38069:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38069:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "38049:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38059:2:0"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38081:0:0"
									},
									"scope": 1565,
									"src": "38040:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "38271:26:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1432,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "38281:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38281:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1434,
												"nodeType": "ExpressionStatement",
												"src": "38281:9:0"
											}
										]
									},
									"id": 1436,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38251:2:0"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38271:0:0"
									},
									"scope": 1565,
									"src": "38244:53:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "38337:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1442,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "38359:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38363:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "38359:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1444,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "38371:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38375:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "38371:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1439,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "38347:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WETH_$1565_$",
																"typeString": "type(contract super WETH)"
															}
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38353:5:0",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1063,
														"src": "38347:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38347:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1447,
												"nodeType": "ExpressionStatement",
												"src": "38347:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1449,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "38404:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38408:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "38404:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1451,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "38416:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38420:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "38416:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1448,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "38396:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38396:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "EmitStatement",
												"src": "38391:35:0"
											}
										]
									},
									"functionSelector": "d0e30db0",
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "38312:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38319:2:0"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38337:0:0"
									},
									"scope": 1565,
									"src": "38303:130:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1491,
										"nodeType": "Block",
										"src": "38476:209:0",
										"statements": [
											{
												"assignments": [
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1462,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "38494:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1491,
														"src": "38486:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "38486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1468,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 1465,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "38511:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_WETH_$1565",
																	"typeString": "contract WETH"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_WETH_$1565",
																	"typeString": "contract WETH"
																}
															],
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "38503:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1463,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "38503:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "38503:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "38517:7:0",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "38503:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "38486:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1470,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "38542:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "38551:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "38542:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f7567682062616c616e636520746f207769746864726177",
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38554:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															},
															"value": "Not enough balance to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_399871969466f3722137690787d7eb45eb05503760bfdcecec90cb4d3e84d480",
																"typeString": "literal_string \"Not enough balance to withdraw\""
															}
														],
														"id": 1469,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38534:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38534:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1475,
												"nodeType": "ExpressionStatement",
												"src": "38534:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1482,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "38626:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1478,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "38605:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "38609:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "38605:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38597:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1476,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38597:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38597:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38617:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "38597:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38597:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1484,
												"nodeType": "ExpressionStatement",
												"src": "38597:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1486,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "38659:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "38663:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "38659:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1488,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "38671:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1485,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "38648:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38648:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1490,
												"nodeType": "EmitStatement",
												"src": "38643:35:0"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1492,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1459,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1458,
												"name": "onlyOwner",
												"nameLocations": [
													"38466:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1294,
												"src": "38466:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38466:9:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "38448:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38456:2:0"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38476:0:0"
									},
									"scope": 1565,
									"src": "38439:246:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1508,
										"nodeType": "Block",
										"src": "38750:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1504,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1494,
															"src": "38772:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1505,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1496,
															"src": "38776:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1501,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "38760:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WETH_$1565_$",
																"typeString": "type(contract super WETH)"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38766:5:0",
														"memberName": "_mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1063,
														"src": "38760:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38760:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "ExpressionStatement",
												"src": "38760:23:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1509,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1498,
												"name": "onlyOwner",
												"nameLocations": [
													"38740:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1294,
												"src": "38740:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38740:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "38700:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38713:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "38705:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "38725:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "38717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38704:28:0"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38750:0:0"
									},
									"scope": 1565,
									"src": "38691:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "38857:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1521,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1511,
															"src": "38879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1522,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "38885:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1518,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "38867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WETH_$1565_$",
																"typeString": "type(contract super WETH)"
															}
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "38873:5:0",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "38867:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38867:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1524,
												"nodeType": "ExpressionStatement",
												"src": "38867:25:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1516,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1515,
												"name": "onlyOwner",
												"nameLocations": [
													"38847:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1294,
												"src": "38847:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "38847:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "38805:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38818:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "38810:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38810:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "38832:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "38824:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38809:30:0"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38857:0:0"
									},
									"scope": 1565,
									"src": "38796:103:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "38943:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1533,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "38971:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "38975:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "38971:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1532,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 758,
																	"src": "38961:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "38961:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1536,
																"name": "wad",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1528,
																"src": "38986:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38961:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "38953:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38953:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1539,
												"nodeType": "ExpressionStatement",
												"src": "38953:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1543,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "39012:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "39016:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "39012:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1545,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "39023:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1540,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "39000:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_WETH_$1565_$",
																"typeString": "type(contract super WETH)"
															}
														},
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39006:5:0",
														"memberName": "_burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "39000:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39000:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1547,
												"nodeType": "ExpressionStatement",
												"src": "39000:27:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1554,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "39066:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1550,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "39045:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "39049:6:0",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "39045:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1549,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39037:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1548,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "39037:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39037:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39057:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "39037:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39037:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "39037:33:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1558,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "39096:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "39100:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "39096:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1560,
															"name": "wad",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "39108:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1557,
														"name": "Withdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "39085:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39085:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1562,
												"nodeType": "EmitStatement",
												"src": "39080:32:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "38914:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "wad",
												"nameLocation": "38931:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "38923:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38922:13:0"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38943:0:0"
									},
									"scope": 1565,
									"src": "38905:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1566,
							"src": "37870:1251:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20,
								442,
								1265,
								1392,
								1398
							]
						}
					],
					"src": "187:38935:0"
				},
				"id": 0
			}
		}
	}
}